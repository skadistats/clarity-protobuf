option java_package = "skadistats.clarity.wire.shared.demo.proto";
option java_outer_classname = "DemoUserMessages";

import "networkbasetypes-common.proto";
import "networkbasetypes-demo.proto";

enum PARTICLE_MESSAGE {
  GAME_PARTICLE_MANAGER_EVENT_CREATE = 0;
  GAME_PARTICLE_MANAGER_EVENT_UPDATE = 1;
  GAME_PARTICLE_MANAGER_EVENT_UPDATE_FORWARD = 2;
  GAME_PARTICLE_MANAGER_EVENT_UPDATE_ORIENTATION = 3;
  GAME_PARTICLE_MANAGER_EVENT_UPDATE_FALLBACK = 4;
  GAME_PARTICLE_MANAGER_EVENT_UPDATE_ENT = 5;
  GAME_PARTICLE_MANAGER_EVENT_UPDATE_OFFSET = 6;
  GAME_PARTICLE_MANAGER_EVENT_DESTROY = 7;
  GAME_PARTICLE_MANAGER_EVENT_DESTROY_INVOLVING = 8;
  GAME_PARTICLE_MANAGER_EVENT_RELEASE = 9;
  GAME_PARTICLE_MANAGER_EVENT_LATENCY = 10;
  GAME_PARTICLE_MANAGER_EVENT_SHOULD_DRAW = 11;
  GAME_PARTICLE_MANAGER_EVENT_FROZEN = 12;
  GAME_PARTICLE_MANAGER_EVENT_CHANGE_CONTROL_POINT_ATTACHMENT = 13;
  GAME_PARTICLE_MANAGER_EVENT_UPDATE_ENTITY_POSITION = 14;
  GAME_PARTICLE_MANAGER_EVENT_SET_FOW_PROPERTIES = 15;
  GAME_PARTICLE_MANAGER_EVENT_SET_TEXT = 16;
  GAME_PARTICLE_MANAGER_EVENT_SET_SHOULD_CHECK_FOW = 17;
  GAME_PARTICLE_MANAGER_EVENT_SET_CONTROL_POINT_MODEL = 18;
  GAME_PARTICLE_MANAGER_EVENT_SET_CONTROL_POINT_SNAPSHOT = 19;
  GAME_PARTICLE_MANAGER_EVENT_SET_TEXTURE_ATTRIBUTE = 20;
  GAME_PARTICLE_MANAGER_EVENT_SET_SCENE_OBJECT_GENERIC_FLAG = 21;
  GAME_PARTICLE_MANAGER_EVENT_SET_SCENE_OBJECT_TINT_AND_DESAT = 22;
  GAME_PARTICLE_MANAGER_EVENT_DESTROY_NAMED = 23;
  GAME_PARTICLE_MANAGER_EVENT_SKIP_TO_TIME = 24;
  GAME_PARTICLE_MANAGER_EVENT_CAN_FREEZE = 25;
  GAME_PARTICLE_MANAGER_EVENT_SET_NAMED_VALUE_CONTEXT = 26;
  GAME_PARTICLE_MANAGER_EVENT_UPDATE_TRANSFORM = 27;
  GAME_PARTICLE_MANAGER_EVENT_FREEZE_TRANSITION_OVERRIDE = 28;
  GAME_PARTICLE_MANAGER_EVENT_FREEZE_INVOLVING = 29;
  GAME_PARTICLE_MANAGER_EVENT_ADD_MODELLIST_OVERRIDE_ELEMENT = 30;
  GAME_PARTICLE_MANAGER_EVENT_CLEAR_MODELLIST_OVERRIDE = 31;
  GAME_PARTICLE_MANAGER_EVENT_CREATE_PHYSICS_SIM = 32;
  GAME_PARTICLE_MANAGER_EVENT_DESTROY_PHYSICS_SIM = 33;
  GAME_PARTICLE_MANAGER_EVENT_SET_VDATA = 34;
  GAME_PARTICLE_MANAGER_EVENT_SET_MATERIAL_OVERRIDE = 35;
}

message CUserMsg_ParticleManager {
  message ReleaseParticleIndex {
  }

  message CreateParticle {
    optional fixed64 particle_name_index = 1;
    optional int32 attach_type = 2;
    optional uint32 entity_handle = 3 [default = 16777215];
    optional uint32 entity_handle_for_modifiers = 4 [default = 16777215];
    optional bool apply_voice_ban_rules = 5;
    optional int32 team_behavior = 6;
    optional string control_point_configuration = 7;
    optional bool cluster = 8;
    optional float endcap_time = 9;
    optional .CMsgVector aggregation_position = 10;
  }

  message DestroyParticle {
    optional bool destroy_immediately = 1;
  }

  message DestroyParticleInvolving {
    optional bool destroy_immediately = 1;
    optional uint32 entity_handle = 3 [default = 16777215];
  }

  message DestroyParticleNamed {
    optional fixed64 particle_name_index = 1;
    optional uint32 entity_handle = 2 [default = 16777215];
    optional bool destroy_immediately = 3;
    optional bool play_endcap = 4;
  }

  message UpdateParticle_OBSOLETE {
    optional int32 control_point = 1;
    optional .CMsgVector position = 2;
  }

  message UpdateParticleFwd_OBSOLETE {
    optional int32 control_point = 1;
    optional .CMsgVector forward = 2;
  }

  message UpdateParticleOrient_OBSOLETE {
    optional int32 control_point = 1;
    optional .CMsgVector forward = 2;
    optional .CMsgVector deprecated_right = 3;
    optional .CMsgVector up = 4;
    optional .CMsgVector left = 5;
  }

  message UpdateParticleTransform {
    optional int32 control_point = 1;
    optional .CMsgVector position = 2;
    optional .CMsgQuaternion orientation = 3;
    optional float interpolation_interval = 4;
  }

  message UpdateParticleFallback {
    optional int32 control_point = 1;
    optional .CMsgVector position = 2;
  }

  message UpdateParticleOffset {
    optional int32 control_point = 1;
    optional .CMsgVector origin_offset = 2;
    optional .CMsgQAngle angle_offset = 3;
  }

  message UpdateParticleEnt {
    optional int32 control_point = 1;
    optional uint32 entity_handle = 2 [default = 16777215];
    optional int32 attach_type = 3;
    optional int32 attachment = 4;
    optional .CMsgVector fallback_position = 5;
    optional bool include_wearables = 6;
    optional .CMsgVector offset_position = 7;
    optional .CMsgQAngle offset_angles = 8;
  }

  message UpdateParticleSetFrozen {
    optional bool set_frozen = 1;
    optional float transition_duration = 2;
  }

  message UpdateParticleShouldDraw {
    optional bool should_draw = 1;
  }

  message ChangeControlPointAttachment {
    optional int32 attachment_old = 1;
    optional int32 attachment_new = 2;
    optional uint32 entity_handle = 3 [default = 16777215];
  }

  message UpdateEntityPosition {
    optional uint32 entity_handle = 1 [default = 16777215];
    optional .CMsgVector position = 2;
  }

  message SetParticleFoWProperties {
    optional int32 fow_control_point = 1;
    optional int32 fow_control_point2 = 2;
    optional float fow_radius = 3;
  }

  message SetParticleShouldCheckFoW {
    optional bool check_fow = 1;
  }

  message SetControlPointModel {
    optional int32 control_point = 1;
    optional string model_name = 2;
  }

  message SetControlPointSnapshot {
    optional int32 control_point = 1;
    optional string snapshot_name = 2;
  }

  message SetParticleText {
    optional string text = 1;
  }

  message SetTextureAttribute {
    optional string attribute_name = 1;
    optional string texture_name = 2;
  }

  message SetSceneObjectGenericFlag {
    optional bool flag_value = 1;
  }

  message SetSceneObjectTintAndDesat {
    optional fixed32 tint = 1;
    optional float desat = 2;
  }

  message ParticleSkipToTime {
    optional float skip_to_time = 1;
  }

  message ParticleCanFreeze {
    optional bool can_freeze = 1;
  }

  message ParticleFreezeTransitionOverride {
    optional float freeze_transition_override = 1;
  }

  message FreezeParticleInvolving {
    optional bool set_frozen = 1;
    optional float transition_duration = 2;
    optional uint32 entity_handle = 3 [default = 16777215];
  }

  message AddModellistOverrideElement {
    optional string model_name = 1;
    optional float spawn_probability = 2;
    optional uint32 groupid = 3;
  }

  message ClearModellistOverride {
    optional uint32 groupid = 1;
  }

  message SetParticleNamedValueContext {
    message FloatContextValue {
      optional uint32 value_name_hash = 1;
      optional float value = 2;
    }

    message VectorContextValue {
      optional uint32 value_name_hash = 1;
      optional .CMsgVector value = 2;
    }

    message TransformContextValue {
      optional uint32 value_name_hash = 1;
      optional .CMsgQAngle angles = 2;
      optional .CMsgVector translation = 3;
    }

    message EHandleContext {
      optional uint32 value_name_hash = 1;
      optional uint32 ent_index = 2 [default = 16777215];
    }

    repeated .CUserMsg_ParticleManager.SetParticleNamedValueContext.FloatContextValue float_values = 1;
    repeated .CUserMsg_ParticleManager.SetParticleNamedValueContext.VectorContextValue vector_values = 2;
    repeated .CUserMsg_ParticleManager.SetParticleNamedValueContext.TransformContextValue transform_values = 3;
    repeated .CUserMsg_ParticleManager.SetParticleNamedValueContext.EHandleContext ehandle_values = 4;
  }

  message CreatePhysicsSim {
    optional string prop_group_name = 1;
    optional bool use_high_quality_simulation = 2;
    optional uint32 max_particle_count = 3;
  }

  message DestroyPhysicsSim {
  }

  message SetVData {
    optional string vdata_name = 1;
  }

  message SetMaterialOverride {
    optional string material_name = 1;
    optional bool include_children = 2;
  }

  required .PARTICLE_MESSAGE type = 1 [default = GAME_PARTICLE_MANAGER_EVENT_CREATE];
  required uint32 index = 2;
  optional .CUserMsg_ParticleManager.ReleaseParticleIndex release_particle_index = 3;
  optional .CUserMsg_ParticleManager.CreateParticle create_particle = 4;
  optional .CUserMsg_ParticleManager.DestroyParticle destroy_particle = 5;
  optional .CUserMsg_ParticleManager.DestroyParticleInvolving destroy_particle_involving = 6;
  optional .CUserMsg_ParticleManager.UpdateParticle_OBSOLETE update_particle = 7;
  optional .CUserMsg_ParticleManager.UpdateParticleFwd_OBSOLETE update_particle_fwd = 8;
  optional .CUserMsg_ParticleManager.UpdateParticleOrient_OBSOLETE update_particle_orient = 9;
  optional .CUserMsg_ParticleManager.UpdateParticleFallback update_particle_fallback = 10;
  optional .CUserMsg_ParticleManager.UpdateParticleOffset update_particle_offset = 11;
  optional .CUserMsg_ParticleManager.UpdateParticleEnt update_particle_ent = 12;
  optional .CUserMsg_ParticleManager.UpdateParticleShouldDraw update_particle_should_draw = 14;
  optional .CUserMsg_ParticleManager.UpdateParticleSetFrozen update_particle_set_frozen = 15;
  optional .CUserMsg_ParticleManager.ChangeControlPointAttachment change_control_point_attachment = 16;
  optional .CUserMsg_ParticleManager.UpdateEntityPosition update_entity_position = 17;
  optional .CUserMsg_ParticleManager.SetParticleFoWProperties set_particle_fow_properties = 18;
  optional .CUserMsg_ParticleManager.SetParticleText set_particle_text = 19;
  optional .CUserMsg_ParticleManager.SetParticleShouldCheckFoW set_particle_should_check_fow = 20;
  optional .CUserMsg_ParticleManager.SetControlPointModel set_control_point_model = 21;
  optional .CUserMsg_ParticleManager.SetControlPointSnapshot set_control_point_snapshot = 22;
  optional .CUserMsg_ParticleManager.SetTextureAttribute set_texture_attribute = 23;
  optional .CUserMsg_ParticleManager.SetSceneObjectGenericFlag set_scene_object_generic_flag = 24;
  optional .CUserMsg_ParticleManager.SetSceneObjectTintAndDesat set_scene_object_tint_and_desat = 25;
  optional .CUserMsg_ParticleManager.DestroyParticleNamed destroy_particle_named = 26;
  optional .CUserMsg_ParticleManager.ParticleSkipToTime particle_skip_to_time = 27;
  optional .CUserMsg_ParticleManager.ParticleCanFreeze particle_can_freeze = 28;
  optional .CUserMsg_ParticleManager.SetParticleNamedValueContext set_named_value_context = 29;
  optional .CUserMsg_ParticleManager.UpdateParticleTransform update_particle_transform = 30;
  optional .CUserMsg_ParticleManager.ParticleFreezeTransitionOverride particle_freeze_transition_override = 31;
  optional .CUserMsg_ParticleManager.FreezeParticleInvolving freeze_particle_involving = 32;
  optional .CUserMsg_ParticleManager.AddModellistOverrideElement add_modellist_override_element = 33;
  optional .CUserMsg_ParticleManager.ClearModellistOverride clear_modellist_override = 34;
  optional .CUserMsg_ParticleManager.CreatePhysicsSim create_physics_sim = 35;
  optional .CUserMsg_ParticleManager.DestroyPhysicsSim destroy_physics_sim = 36;
  optional .CUserMsg_ParticleManager.SetVData set_vdata = 37;
  optional .CUserMsg_ParticleManager.SetMaterialOverride set_material_override = 38;

  extensions 100 to 201;
}
