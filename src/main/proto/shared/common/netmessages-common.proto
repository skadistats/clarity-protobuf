option java_package = "skadistats.clarity.wire.shared.common.proto";
option java_outer_classname = "CommonNetMessages";

import "networkbasetypes-common.proto";

enum VoiceDataFormat_t {
	VOICEDATA_FORMAT_STEAM = 0;
	VOICEDATA_FORMAT_ENGINE = 1;
	VOICEDATA_FORMAT_OPUS = 2;
}

enum RequestPause_t {
	RP_PAUSE = 0;
	RP_UNPAUSE = 1;
	RP_TOGGLEPAUSE = 2;
}

enum PrefetchType {
	PFT_SOUND = 0;
}

message CCLCMsg_ClientInfo {
	optional fixed32 send_table_crc = 1;
	optional uint32 server_count = 2;
	optional bool is_hltv = 3;
	optional bool is_replay = 4;
	optional uint32 friends_id = 5;
	optional string friends_name = 6;
	repeated fixed32 custom_files = 7;
}

message CCLCMsg_Move {
	optional uint32 num_backup_commands = 1;
	optional uint32 num_new_commands = 2;
	optional bytes data = 3;
	optional uint32 command_number = 4;
	optional uint32 num_commands = 5;
}

message CCLCMsg_BaselineAck {
	optional int32 baseline_tick = 1;
	optional int32 baseline_nr = 2;
}

message CCLCMsg_ListenEvents {
	repeated fixed32 event_mask = 1;
}

message CCLCMsg_RespondCvarValue {
	optional int32 cookie = 1;
	optional int32 status_code = 2;
	optional string name = 3;
	optional string value = 4;
}

message CCLCMsg_LoadingProgress {
	optional int32 progress = 1;
}

message CCLCMsg_ClientMessage {
	optional int32 msg_type = 1;
	optional bytes data = 2;
}

message CCLCMsg_SplitPlayerDisconnect {
	optional int32 slot = 1;
}

message CCLCMsg_ServerStatus {
	optional bool simplified = 1;
}

message CCLCMsg_ServerPing {
}

message CCLCMsg_RequestPause {
	optional .RequestPause_t pause_type = 1 [default = RP_PAUSE];
	optional int32 pause_group = 2;
}

message CCLCMsg_CmdKeyValues {
	optional bytes data = 1;
}

message CCLCMsg_RconServerDetails {
	optional bytes token = 1;
}

message CSVCMsg_GameEventList {
	message key_t {
		optional int32 type = 1;
		optional string name = 2;
	}

	message descriptor_t {
		optional int32 eventid = 1;
		optional string name = 2;
		repeated CSVCMsg_GameEventList.key_t keys = 3;
	}

	repeated CSVCMsg_GameEventList.descriptor_t descriptors = 1;
}

message CSVCMsg_PacketEntities {
  message command_queue_info_t {
    optional uint32 commands_queued = 1;
    optional uint32 command_queue_desired_size = 2;
    optional uint32 starved_command_ticks = 3;
    optional float time_dilation_percent = 4;
    optional uint32 discarded_command_ticks = 5;
  }

  message alternate_baseline_t {
    optional int32 entity_index = 1;
    optional int32 baseline_index = 2;
  }

  message non_transmitted_entities_t {
    optional int32 header_count = 1;
    optional bytes data = 2;
  }

  optional int32 max_entries = 1;
  optional int32 updated_entries = 2;
  optional bool is_delta = 3;
  optional bool update_baseline = 4;
  optional int32 baseline = 5;
  optional int32 delta_from = 6;
  optional bytes entity_data = 7;
  optional bool pending_full_frame = 8;
  optional uint32 active_spawngroup_handle = 9;
  optional uint32 max_spawngroup_creationsequence = 10;
  optional uint32 last_cmd_number_executed = 11;
  optional sint32 last_cmd_number_recv_delta = 17;
  optional uint32 server_tick = 12;
  optional bytes serialized_entities = 13;
  optional .CSVCMsg_PacketEntities.command_queue_info_t command_queue_info = 14;
  repeated .CSVCMsg_PacketEntities.alternate_baseline_t alternate_baselines = 15;
  optional uint32 has_pvs_vis_bits = 16;
	repeated sint32 cmd_recv_status = 22 [packed = true];
  optional uint32 last_cmd_recv_margin = 18;
  optional .CSVCMsg_PacketEntities.non_transmitted_entities_t non_transmitted_entities = 19;
	optional uint32 cq_starved_command_ticks = 20;
	optional uint32 cq_discarded_command_ticks = 21;
  optional bytes dev_padding = 999;
}
message CSVCMsg_ClassInfo {
	message class_t {
		optional int32 class_id = 1;
		optional string data_table_name = 2;
		optional string class_name = 3;
	}

	optional bool create_on_client = 1;
	repeated CSVCMsg_ClassInfo.class_t classes = 2;
}

message CSVCMsg_SetView {
	optional int32 entity_index = 1;
	optional int32 slot = 2;
}

message CSVCMsg_BSPDecal {
	optional .CMsgVector pos = 1;
	optional int32 decal_texture_index = 2;
	optional int32 entity_index = 3;
	optional int32 model_index = 4;
	optional bool low_priority = 5;
}

message CSVCMsg_Print {
	optional string text = 1;
}

message CSVCMsg_VoiceInit {
	optional int32 quality = 1;
	optional string codec = 2;
	optional int32 version = 3 [default = 0];
}

message CSVCMsg_Sounds {
	message sounddata_t {
		optional sint32 origin_x = 1;
		optional sint32 origin_y = 2;
		optional sint32 origin_z = 3;
		optional uint32 volume = 4;
		optional float delay_value = 5;
		optional int32 sequence_number = 6;
		optional int32 entity_index = 7;
		optional int32 channel = 8;
		optional int32 pitch = 9;
		optional int32 flags = 10;
		optional uint32 sound_num = 11;
		optional fixed32 sound_num_handle = 12;
		optional int32 speaker_entity = 13;
		optional int32 random_seed = 14;
		optional int32 sound_level = 15;
		optional bool is_sentence = 16;
		optional bool is_ambient = 17;
		optional uint32 guid = 18;
		optional fixed64 sound_resource_id = 19;
	}

	optional bool reliable_sound = 1;
	repeated CSVCMsg_Sounds.sounddata_t sounds = 2;
}

message CSVCMsg_Prefetch {
	optional int32 sound_index = 1;
	optional .PrefetchType resource_type = 2 [default = PFT_SOUND];
}

message CSVCMsg_UpdateStringTable {
	optional int32 table_id = 1;
	optional int32 num_changed_entries = 2;
	optional bytes string_data = 3;
}

message CSVCMsg_FullFrameSplit {
	optional int32 tick = 1;
	optional int32 section = 2;
	optional int32 total = 3;
	optional bytes data = 4;
}

message CMsgServerUserCmd {
	optional bytes data = 1;
	optional int32 cmd_number = 2;
	optional int32 player_slot = 3 [default = -1];
	optional int32 server_tick_executed = 4;
	optional int32 client_tick = 5;
}

message CSVCMsg_UserCommands {
	repeated .CMsgServerUserCmd commands = 1;
}

