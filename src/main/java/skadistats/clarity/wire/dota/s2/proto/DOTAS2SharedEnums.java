// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dota_shared_enums.proto

package skadistats.clarity.wire.dota.s2.proto;

public final class DOTAS2SharedEnums {
  private DOTAS2SharedEnums() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code DOTA_GameMode}
   */
  public enum DOTA_GameMode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTA_GAMEMODE_NONE = 0;</code>
     */
    DOTA_GAMEMODE_NONE(0, 0),
    /**
     * <code>DOTA_GAMEMODE_AP = 1;</code>
     */
    DOTA_GAMEMODE_AP(1, 1),
    /**
     * <code>DOTA_GAMEMODE_CM = 2;</code>
     */
    DOTA_GAMEMODE_CM(2, 2),
    /**
     * <code>DOTA_GAMEMODE_RD = 3;</code>
     */
    DOTA_GAMEMODE_RD(3, 3),
    /**
     * <code>DOTA_GAMEMODE_SD = 4;</code>
     */
    DOTA_GAMEMODE_SD(4, 4),
    /**
     * <code>DOTA_GAMEMODE_AR = 5;</code>
     */
    DOTA_GAMEMODE_AR(5, 5),
    /**
     * <code>DOTA_GAMEMODE_INTRO = 6;</code>
     */
    DOTA_GAMEMODE_INTRO(6, 6),
    /**
     * <code>DOTA_GAMEMODE_HW = 7;</code>
     */
    DOTA_GAMEMODE_HW(7, 7),
    /**
     * <code>DOTA_GAMEMODE_REVERSE_CM = 8;</code>
     */
    DOTA_GAMEMODE_REVERSE_CM(8, 8),
    /**
     * <code>DOTA_GAMEMODE_XMAS = 9;</code>
     */
    DOTA_GAMEMODE_XMAS(9, 9),
    /**
     * <code>DOTA_GAMEMODE_TUTORIAL = 10;</code>
     */
    DOTA_GAMEMODE_TUTORIAL(10, 10),
    /**
     * <code>DOTA_GAMEMODE_MO = 11;</code>
     */
    DOTA_GAMEMODE_MO(11, 11),
    /**
     * <code>DOTA_GAMEMODE_LP = 12;</code>
     */
    DOTA_GAMEMODE_LP(12, 12),
    /**
     * <code>DOTA_GAMEMODE_POOL1 = 13;</code>
     */
    DOTA_GAMEMODE_POOL1(13, 13),
    /**
     * <code>DOTA_GAMEMODE_FH = 14;</code>
     */
    DOTA_GAMEMODE_FH(14, 14),
    /**
     * <code>DOTA_GAMEMODE_CUSTOM = 15;</code>
     */
    DOTA_GAMEMODE_CUSTOM(15, 15),
    /**
     * <code>DOTA_GAMEMODE_CD = 16;</code>
     */
    DOTA_GAMEMODE_CD(16, 16),
    /**
     * <code>DOTA_GAMEMODE_BD = 17;</code>
     */
    DOTA_GAMEMODE_BD(17, 17),
    /**
     * <code>DOTA_GAMEMODE_ABILITY_DRAFT = 18;</code>
     */
    DOTA_GAMEMODE_ABILITY_DRAFT(18, 18),
    /**
     * <code>DOTA_GAMEMODE_EVENT = 19;</code>
     */
    DOTA_GAMEMODE_EVENT(19, 19),
    /**
     * <code>DOTA_GAMEMODE_ARDM = 20;</code>
     */
    DOTA_GAMEMODE_ARDM(20, 20),
    /**
     * <code>DOTA_GAMEMODE_1V1MID = 21;</code>
     */
    DOTA_GAMEMODE_1V1MID(21, 21),
    /**
     * <code>DOTA_GAMEMODE_ALL_DRAFT = 22;</code>
     */
    DOTA_GAMEMODE_ALL_DRAFT(22, 22),
    /**
     * <code>DOTA_GAMEMODE_TURBO = 23;</code>
     */
    DOTA_GAMEMODE_TURBO(23, 23),
    /**
     * <code>DOTA_GAMEMODE_MUTATION = 24;</code>
     */
    DOTA_GAMEMODE_MUTATION(24, 24),
    /**
     * <code>DOTA_GAMEMODE_COACHES_CHALLENGE = 25;</code>
     */
    DOTA_GAMEMODE_COACHES_CHALLENGE(25, 25),
    ;

    /**
     * <code>DOTA_GAMEMODE_NONE = 0;</code>
     */
    public static final int DOTA_GAMEMODE_NONE_VALUE = 0;
    /**
     * <code>DOTA_GAMEMODE_AP = 1;</code>
     */
    public static final int DOTA_GAMEMODE_AP_VALUE = 1;
    /**
     * <code>DOTA_GAMEMODE_CM = 2;</code>
     */
    public static final int DOTA_GAMEMODE_CM_VALUE = 2;
    /**
     * <code>DOTA_GAMEMODE_RD = 3;</code>
     */
    public static final int DOTA_GAMEMODE_RD_VALUE = 3;
    /**
     * <code>DOTA_GAMEMODE_SD = 4;</code>
     */
    public static final int DOTA_GAMEMODE_SD_VALUE = 4;
    /**
     * <code>DOTA_GAMEMODE_AR = 5;</code>
     */
    public static final int DOTA_GAMEMODE_AR_VALUE = 5;
    /**
     * <code>DOTA_GAMEMODE_INTRO = 6;</code>
     */
    public static final int DOTA_GAMEMODE_INTRO_VALUE = 6;
    /**
     * <code>DOTA_GAMEMODE_HW = 7;</code>
     */
    public static final int DOTA_GAMEMODE_HW_VALUE = 7;
    /**
     * <code>DOTA_GAMEMODE_REVERSE_CM = 8;</code>
     */
    public static final int DOTA_GAMEMODE_REVERSE_CM_VALUE = 8;
    /**
     * <code>DOTA_GAMEMODE_XMAS = 9;</code>
     */
    public static final int DOTA_GAMEMODE_XMAS_VALUE = 9;
    /**
     * <code>DOTA_GAMEMODE_TUTORIAL = 10;</code>
     */
    public static final int DOTA_GAMEMODE_TUTORIAL_VALUE = 10;
    /**
     * <code>DOTA_GAMEMODE_MO = 11;</code>
     */
    public static final int DOTA_GAMEMODE_MO_VALUE = 11;
    /**
     * <code>DOTA_GAMEMODE_LP = 12;</code>
     */
    public static final int DOTA_GAMEMODE_LP_VALUE = 12;
    /**
     * <code>DOTA_GAMEMODE_POOL1 = 13;</code>
     */
    public static final int DOTA_GAMEMODE_POOL1_VALUE = 13;
    /**
     * <code>DOTA_GAMEMODE_FH = 14;</code>
     */
    public static final int DOTA_GAMEMODE_FH_VALUE = 14;
    /**
     * <code>DOTA_GAMEMODE_CUSTOM = 15;</code>
     */
    public static final int DOTA_GAMEMODE_CUSTOM_VALUE = 15;
    /**
     * <code>DOTA_GAMEMODE_CD = 16;</code>
     */
    public static final int DOTA_GAMEMODE_CD_VALUE = 16;
    /**
     * <code>DOTA_GAMEMODE_BD = 17;</code>
     */
    public static final int DOTA_GAMEMODE_BD_VALUE = 17;
    /**
     * <code>DOTA_GAMEMODE_ABILITY_DRAFT = 18;</code>
     */
    public static final int DOTA_GAMEMODE_ABILITY_DRAFT_VALUE = 18;
    /**
     * <code>DOTA_GAMEMODE_EVENT = 19;</code>
     */
    public static final int DOTA_GAMEMODE_EVENT_VALUE = 19;
    /**
     * <code>DOTA_GAMEMODE_ARDM = 20;</code>
     */
    public static final int DOTA_GAMEMODE_ARDM_VALUE = 20;
    /**
     * <code>DOTA_GAMEMODE_1V1MID = 21;</code>
     */
    public static final int DOTA_GAMEMODE_1V1MID_VALUE = 21;
    /**
     * <code>DOTA_GAMEMODE_ALL_DRAFT = 22;</code>
     */
    public static final int DOTA_GAMEMODE_ALL_DRAFT_VALUE = 22;
    /**
     * <code>DOTA_GAMEMODE_TURBO = 23;</code>
     */
    public static final int DOTA_GAMEMODE_TURBO_VALUE = 23;
    /**
     * <code>DOTA_GAMEMODE_MUTATION = 24;</code>
     */
    public static final int DOTA_GAMEMODE_MUTATION_VALUE = 24;
    /**
     * <code>DOTA_GAMEMODE_COACHES_CHALLENGE = 25;</code>
     */
    public static final int DOTA_GAMEMODE_COACHES_CHALLENGE_VALUE = 25;


    public final int getNumber() { return value; }

    public static DOTA_GameMode valueOf(int value) {
      switch (value) {
        case 0: return DOTA_GAMEMODE_NONE;
        case 1: return DOTA_GAMEMODE_AP;
        case 2: return DOTA_GAMEMODE_CM;
        case 3: return DOTA_GAMEMODE_RD;
        case 4: return DOTA_GAMEMODE_SD;
        case 5: return DOTA_GAMEMODE_AR;
        case 6: return DOTA_GAMEMODE_INTRO;
        case 7: return DOTA_GAMEMODE_HW;
        case 8: return DOTA_GAMEMODE_REVERSE_CM;
        case 9: return DOTA_GAMEMODE_XMAS;
        case 10: return DOTA_GAMEMODE_TUTORIAL;
        case 11: return DOTA_GAMEMODE_MO;
        case 12: return DOTA_GAMEMODE_LP;
        case 13: return DOTA_GAMEMODE_POOL1;
        case 14: return DOTA_GAMEMODE_FH;
        case 15: return DOTA_GAMEMODE_CUSTOM;
        case 16: return DOTA_GAMEMODE_CD;
        case 17: return DOTA_GAMEMODE_BD;
        case 18: return DOTA_GAMEMODE_ABILITY_DRAFT;
        case 19: return DOTA_GAMEMODE_EVENT;
        case 20: return DOTA_GAMEMODE_ARDM;
        case 21: return DOTA_GAMEMODE_1V1MID;
        case 22: return DOTA_GAMEMODE_ALL_DRAFT;
        case 23: return DOTA_GAMEMODE_TURBO;
        case 24: return DOTA_GAMEMODE_MUTATION;
        case 25: return DOTA_GAMEMODE_COACHES_CHALLENGE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTA_GameMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DOTA_GameMode>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTA_GameMode>() {
            public DOTA_GameMode findValueByNumber(int number) {
              return DOTA_GameMode.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.dota.s2.proto.DOTAS2SharedEnums.getDescriptor().getEnumTypes().get(0);
    }

    private static final DOTA_GameMode[] VALUES = values();

    public static DOTA_GameMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private DOTA_GameMode(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DOTA_GameMode)
  }

  /**
   * Protobuf enum {@code DOTA_GC_TEAM}
   */
  public enum DOTA_GC_TEAM
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DOTA_GC_TEAM_GOOD_GUYS = 0;</code>
     */
    DOTA_GC_TEAM_GOOD_GUYS(0, 0),
    /**
     * <code>DOTA_GC_TEAM_BAD_GUYS = 1;</code>
     */
    DOTA_GC_TEAM_BAD_GUYS(1, 1),
    /**
     * <code>DOTA_GC_TEAM_BROADCASTER = 2;</code>
     */
    DOTA_GC_TEAM_BROADCASTER(2, 2),
    /**
     * <code>DOTA_GC_TEAM_SPECTATOR = 3;</code>
     */
    DOTA_GC_TEAM_SPECTATOR(3, 3),
    /**
     * <code>DOTA_GC_TEAM_PLAYER_POOL = 4;</code>
     */
    DOTA_GC_TEAM_PLAYER_POOL(4, 4),
    /**
     * <code>DOTA_GC_TEAM_NOTEAM = 5;</code>
     */
    DOTA_GC_TEAM_NOTEAM(5, 5),
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_1 = 6;</code>
     */
    DOTA_GC_TEAM_CUSTOM_1(6, 6),
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_2 = 7;</code>
     */
    DOTA_GC_TEAM_CUSTOM_2(7, 7),
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_3 = 8;</code>
     */
    DOTA_GC_TEAM_CUSTOM_3(8, 8),
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_4 = 9;</code>
     */
    DOTA_GC_TEAM_CUSTOM_4(9, 9),
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_5 = 10;</code>
     */
    DOTA_GC_TEAM_CUSTOM_5(10, 10),
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_6 = 11;</code>
     */
    DOTA_GC_TEAM_CUSTOM_6(11, 11),
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_7 = 12;</code>
     */
    DOTA_GC_TEAM_CUSTOM_7(12, 12),
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_8 = 13;</code>
     */
    DOTA_GC_TEAM_CUSTOM_8(13, 13),
    /**
     * <code>DOTA_GC_TEAM_NEUTRALS = 14;</code>
     */
    DOTA_GC_TEAM_NEUTRALS(14, 14),
    ;

    /**
     * <code>DOTA_GC_TEAM_GOOD_GUYS = 0;</code>
     */
    public static final int DOTA_GC_TEAM_GOOD_GUYS_VALUE = 0;
    /**
     * <code>DOTA_GC_TEAM_BAD_GUYS = 1;</code>
     */
    public static final int DOTA_GC_TEAM_BAD_GUYS_VALUE = 1;
    /**
     * <code>DOTA_GC_TEAM_BROADCASTER = 2;</code>
     */
    public static final int DOTA_GC_TEAM_BROADCASTER_VALUE = 2;
    /**
     * <code>DOTA_GC_TEAM_SPECTATOR = 3;</code>
     */
    public static final int DOTA_GC_TEAM_SPECTATOR_VALUE = 3;
    /**
     * <code>DOTA_GC_TEAM_PLAYER_POOL = 4;</code>
     */
    public static final int DOTA_GC_TEAM_PLAYER_POOL_VALUE = 4;
    /**
     * <code>DOTA_GC_TEAM_NOTEAM = 5;</code>
     */
    public static final int DOTA_GC_TEAM_NOTEAM_VALUE = 5;
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_1 = 6;</code>
     */
    public static final int DOTA_GC_TEAM_CUSTOM_1_VALUE = 6;
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_2 = 7;</code>
     */
    public static final int DOTA_GC_TEAM_CUSTOM_2_VALUE = 7;
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_3 = 8;</code>
     */
    public static final int DOTA_GC_TEAM_CUSTOM_3_VALUE = 8;
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_4 = 9;</code>
     */
    public static final int DOTA_GC_TEAM_CUSTOM_4_VALUE = 9;
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_5 = 10;</code>
     */
    public static final int DOTA_GC_TEAM_CUSTOM_5_VALUE = 10;
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_6 = 11;</code>
     */
    public static final int DOTA_GC_TEAM_CUSTOM_6_VALUE = 11;
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_7 = 12;</code>
     */
    public static final int DOTA_GC_TEAM_CUSTOM_7_VALUE = 12;
    /**
     * <code>DOTA_GC_TEAM_CUSTOM_8 = 13;</code>
     */
    public static final int DOTA_GC_TEAM_CUSTOM_8_VALUE = 13;
    /**
     * <code>DOTA_GC_TEAM_NEUTRALS = 14;</code>
     */
    public static final int DOTA_GC_TEAM_NEUTRALS_VALUE = 14;


    public final int getNumber() { return value; }

    public static DOTA_GC_TEAM valueOf(int value) {
      switch (value) {
        case 0: return DOTA_GC_TEAM_GOOD_GUYS;
        case 1: return DOTA_GC_TEAM_BAD_GUYS;
        case 2: return DOTA_GC_TEAM_BROADCASTER;
        case 3: return DOTA_GC_TEAM_SPECTATOR;
        case 4: return DOTA_GC_TEAM_PLAYER_POOL;
        case 5: return DOTA_GC_TEAM_NOTEAM;
        case 6: return DOTA_GC_TEAM_CUSTOM_1;
        case 7: return DOTA_GC_TEAM_CUSTOM_2;
        case 8: return DOTA_GC_TEAM_CUSTOM_3;
        case 9: return DOTA_GC_TEAM_CUSTOM_4;
        case 10: return DOTA_GC_TEAM_CUSTOM_5;
        case 11: return DOTA_GC_TEAM_CUSTOM_6;
        case 12: return DOTA_GC_TEAM_CUSTOM_7;
        case 13: return DOTA_GC_TEAM_CUSTOM_8;
        case 14: return DOTA_GC_TEAM_NEUTRALS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DOTA_GC_TEAM>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DOTA_GC_TEAM>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DOTA_GC_TEAM>() {
            public DOTA_GC_TEAM findValueByNumber(int number) {
              return DOTA_GC_TEAM.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.dota.s2.proto.DOTAS2SharedEnums.getDescriptor().getEnumTypes().get(1);
    }

    private static final DOTA_GC_TEAM[] VALUES = values();

    public static DOTA_GC_TEAM valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private DOTA_GC_TEAM(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DOTA_GC_TEAM)
  }

  /**
   * Protobuf enum {@code EEvent}
   */
  public enum EEvent
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EVENT_ID_NONE = 0;</code>
     */
    EVENT_ID_NONE(0, 0),
    /**
     * <code>EVENT_ID_DIRETIDE = 1;</code>
     */
    EVENT_ID_DIRETIDE(1, 1),
    /**
     * <code>EVENT_ID_SPRING_FESTIVAL = 2;</code>
     */
    EVENT_ID_SPRING_FESTIVAL(2, 2),
    /**
     * <code>EVENT_ID_FROSTIVUS_2013 = 3;</code>
     */
    EVENT_ID_FROSTIVUS_2013(3, 3),
    /**
     * <code>EVENT_ID_COMPENDIUM_2014 = 4;</code>
     */
    EVENT_ID_COMPENDIUM_2014(4, 4),
    /**
     * <code>EVENT_ID_NEXON_PC_BANG = 5;</code>
     */
    EVENT_ID_NEXON_PC_BANG(5, 5),
    /**
     * <code>EVENT_ID_PWRD_DAC_2015 = 6;</code>
     */
    EVENT_ID_PWRD_DAC_2015(6, 6),
    /**
     * <code>EVENT_ID_NEW_BLOOM_2015 = 7;</code>
     */
    EVENT_ID_NEW_BLOOM_2015(7, 7),
    /**
     * <code>EVENT_ID_INTERNATIONAL_2015 = 8;</code>
     */
    EVENT_ID_INTERNATIONAL_2015(8, 8),
    /**
     * <code>EVENT_ID_FALL_MAJOR_2015 = 9;</code>
     */
    EVENT_ID_FALL_MAJOR_2015(9, 9),
    /**
     * <code>EVENT_ID_ORACLE_PA = 10;</code>
     */
    EVENT_ID_ORACLE_PA(10, 10),
    /**
     * <code>EVENT_ID_NEW_BLOOM_2015_PREBEAST = 11;</code>
     */
    EVENT_ID_NEW_BLOOM_2015_PREBEAST(11, 11),
    /**
     * <code>EVENT_ID_FROSTIVUS = 12;</code>
     */
    EVENT_ID_FROSTIVUS(12, 12),
    /**
     * <code>EVENT_ID_WINTER_MAJOR_2016 = 13;</code>
     */
    EVENT_ID_WINTER_MAJOR_2016(13, 13),
    /**
     * <code>EVENT_ID_INTERNATIONAL_2016 = 14;</code>
     */
    EVENT_ID_INTERNATIONAL_2016(14, 14),
    /**
     * <code>EVENT_ID_FALL_MAJOR_2016 = 15;</code>
     */
    EVENT_ID_FALL_MAJOR_2016(15, 15),
    /**
     * <code>EVENT_ID_WINTER_MAJOR_2017 = 16;</code>
     */
    EVENT_ID_WINTER_MAJOR_2017(16, 16),
    /**
     * <code>EVENT_ID_NEW_BLOOM_2017 = 17;</code>
     */
    EVENT_ID_NEW_BLOOM_2017(17, 17),
    /**
     * <code>EVENT_ID_INTERNATIONAL_2017 = 18;</code>
     */
    EVENT_ID_INTERNATIONAL_2017(18, 18),
    /**
     * <code>EVENT_ID_PLUS_SUBSCRIPTION = 19;</code>
     */
    EVENT_ID_PLUS_SUBSCRIPTION(19, 19),
    /**
     * <code>EVENT_ID_SINGLES_DAY_2017 = 20;</code>
     */
    EVENT_ID_SINGLES_DAY_2017(20, 20),
    /**
     * <code>EVENT_ID_FROSTIVUS_2017 = 21;</code>
     */
    EVENT_ID_FROSTIVUS_2017(21, 21),
    /**
     * <code>EVENT_ID_INTERNATIONAL_2018 = 22;</code>
     */
    EVENT_ID_INTERNATIONAL_2018(22, 22),
    /**
     * <code>EVENT_ID_FROSTIVUS_2018 = 23;</code>
     */
    EVENT_ID_FROSTIVUS_2018(23, 23),
    /**
     * <code>EVENT_ID_NEW_BLOOM_2019 = 24;</code>
     */
    EVENT_ID_NEW_BLOOM_2019(24, 24),
    /**
     * <code>EVENT_ID_INTERNATIONAL_2019 = 25;</code>
     */
    EVENT_ID_INTERNATIONAL_2019(25, 25),
    /**
     * <code>EVENT_ID_NEW_PLAYER_EXPERIENCE = 26;</code>
     */
    EVENT_ID_NEW_PLAYER_EXPERIENCE(26, 26),
    /**
     * <code>EVENT_ID_FROSTIVUS_2019 = 27;</code>
     */
    EVENT_ID_FROSTIVUS_2019(27, 27),
    /**
     * <code>EVENT_ID_NEW_BLOOM_2020 = 28;</code>
     */
    EVENT_ID_NEW_BLOOM_2020(28, 28),
    /**
     * <code>EVENT_ID_INTERNATIONAL_2020 = 29;</code>
     */
    EVENT_ID_INTERNATIONAL_2020(29, 29),
    /**
     * <code>EVENT_ID_TEAM_FANDOM = 30;</code>
     */
    EVENT_ID_TEAM_FANDOM(30, 30),
    /**
     * <code>EVENT_ID_DIRETIDE_2020 = 31;</code>
     */
    EVENT_ID_DIRETIDE_2020(31, 31),
    /**
     * <code>EVENT_ID_SPRING_2021 = 32;</code>
     */
    EVENT_ID_SPRING_2021(32, 32),
    /**
     * <code>EVENT_ID_FALL_2021 = 33;</code>
     */
    EVENT_ID_FALL_2021(33, 33),
    /**
     * <code>EVENT_ID_TEAM_FANDOM_FALL_2021 = 34;</code>
     */
    EVENT_ID_TEAM_FANDOM_FALL_2021(34, 34),
    /**
     * <code>EVENT_ID_TEAM_2021_2022_TOUR2 = 35;</code>
     */
    EVENT_ID_TEAM_2021_2022_TOUR2(35, 35),
    /**
     * <code>EVENT_ID_INTERNATIONAL_2022 = 36;</code>
     */
    EVENT_ID_INTERNATIONAL_2022(36, 36),
    /**
     * <code>EVENT_ID_TEAM_2021_2022_TOUR3 = 37;</code>
     */
    EVENT_ID_TEAM_2021_2022_TOUR3(37, 37),
    /**
     * <code>EVENT_ID_TEAM_INTERNATIONAL_2022 = 38;</code>
     */
    EVENT_ID_TEAM_INTERNATIONAL_2022(38, 38),
    /**
     * <code>EVENT_ID_PERMANENT_GRANTS = 39;</code>
     */
    EVENT_ID_PERMANENT_GRANTS(39, 39),
    /**
     * <code>EVENT_ID_MUERTA_RELEASE_SPRING2023 = 40;</code>
     */
    EVENT_ID_MUERTA_RELEASE_SPRING2023(40, 40),
    /**
     * <code>EVENT_ID_TEAM_2023_TOUR1 = 41;</code>
     */
    EVENT_ID_TEAM_2023_TOUR1(41, 41),
    /**
     * <code>EVENT_ID_TEAM_2023_TOUR2 = 42;</code>
     */
    EVENT_ID_TEAM_2023_TOUR2(42, 42),
    /**
     * <code>EVENT_ID_TEAM_2023_TOUR3 = 43;</code>
     */
    EVENT_ID_TEAM_2023_TOUR3(43, 43),
    /**
     * <code>EVENT_ID_INTERNATIONAL_2023 = 45;</code>
     */
    EVENT_ID_INTERNATIONAL_2023(44, 45),
    /**
     * <code>EVENT_ID_10TH_ANNIVERSARY = 46;</code>
     */
    EVENT_ID_10TH_ANNIVERSARY(45, 46),
    /**
     * <code>EVENT_ID_CROWNFALL = 47;</code>
     */
    EVENT_ID_CROWNFALL(46, 47),
    /**
     * <code>EVENT_ID_FROSTIVUS_2023 = 48;</code>
     */
    EVENT_ID_FROSTIVUS_2023(47, 48),
    /**
     * <code>EVENT_ID_INTERNATIONAL_2024 = 49;</code>
     */
    EVENT_ID_INTERNATIONAL_2024(48, 49),
    /**
     * <code>EVENT_ID_COUNT = 50;</code>
     */
    EVENT_ID_COUNT(49, 50),
    ;

    /**
     * <code>EVENT_ID_NONE = 0;</code>
     */
    public static final int EVENT_ID_NONE_VALUE = 0;
    /**
     * <code>EVENT_ID_DIRETIDE = 1;</code>
     */
    public static final int EVENT_ID_DIRETIDE_VALUE = 1;
    /**
     * <code>EVENT_ID_SPRING_FESTIVAL = 2;</code>
     */
    public static final int EVENT_ID_SPRING_FESTIVAL_VALUE = 2;
    /**
     * <code>EVENT_ID_FROSTIVUS_2013 = 3;</code>
     */
    public static final int EVENT_ID_FROSTIVUS_2013_VALUE = 3;
    /**
     * <code>EVENT_ID_COMPENDIUM_2014 = 4;</code>
     */
    public static final int EVENT_ID_COMPENDIUM_2014_VALUE = 4;
    /**
     * <code>EVENT_ID_NEXON_PC_BANG = 5;</code>
     */
    public static final int EVENT_ID_NEXON_PC_BANG_VALUE = 5;
    /**
     * <code>EVENT_ID_PWRD_DAC_2015 = 6;</code>
     */
    public static final int EVENT_ID_PWRD_DAC_2015_VALUE = 6;
    /**
     * <code>EVENT_ID_NEW_BLOOM_2015 = 7;</code>
     */
    public static final int EVENT_ID_NEW_BLOOM_2015_VALUE = 7;
    /**
     * <code>EVENT_ID_INTERNATIONAL_2015 = 8;</code>
     */
    public static final int EVENT_ID_INTERNATIONAL_2015_VALUE = 8;
    /**
     * <code>EVENT_ID_FALL_MAJOR_2015 = 9;</code>
     */
    public static final int EVENT_ID_FALL_MAJOR_2015_VALUE = 9;
    /**
     * <code>EVENT_ID_ORACLE_PA = 10;</code>
     */
    public static final int EVENT_ID_ORACLE_PA_VALUE = 10;
    /**
     * <code>EVENT_ID_NEW_BLOOM_2015_PREBEAST = 11;</code>
     */
    public static final int EVENT_ID_NEW_BLOOM_2015_PREBEAST_VALUE = 11;
    /**
     * <code>EVENT_ID_FROSTIVUS = 12;</code>
     */
    public static final int EVENT_ID_FROSTIVUS_VALUE = 12;
    /**
     * <code>EVENT_ID_WINTER_MAJOR_2016 = 13;</code>
     */
    public static final int EVENT_ID_WINTER_MAJOR_2016_VALUE = 13;
    /**
     * <code>EVENT_ID_INTERNATIONAL_2016 = 14;</code>
     */
    public static final int EVENT_ID_INTERNATIONAL_2016_VALUE = 14;
    /**
     * <code>EVENT_ID_FALL_MAJOR_2016 = 15;</code>
     */
    public static final int EVENT_ID_FALL_MAJOR_2016_VALUE = 15;
    /**
     * <code>EVENT_ID_WINTER_MAJOR_2017 = 16;</code>
     */
    public static final int EVENT_ID_WINTER_MAJOR_2017_VALUE = 16;
    /**
     * <code>EVENT_ID_NEW_BLOOM_2017 = 17;</code>
     */
    public static final int EVENT_ID_NEW_BLOOM_2017_VALUE = 17;
    /**
     * <code>EVENT_ID_INTERNATIONAL_2017 = 18;</code>
     */
    public static final int EVENT_ID_INTERNATIONAL_2017_VALUE = 18;
    /**
     * <code>EVENT_ID_PLUS_SUBSCRIPTION = 19;</code>
     */
    public static final int EVENT_ID_PLUS_SUBSCRIPTION_VALUE = 19;
    /**
     * <code>EVENT_ID_SINGLES_DAY_2017 = 20;</code>
     */
    public static final int EVENT_ID_SINGLES_DAY_2017_VALUE = 20;
    /**
     * <code>EVENT_ID_FROSTIVUS_2017 = 21;</code>
     */
    public static final int EVENT_ID_FROSTIVUS_2017_VALUE = 21;
    /**
     * <code>EVENT_ID_INTERNATIONAL_2018 = 22;</code>
     */
    public static final int EVENT_ID_INTERNATIONAL_2018_VALUE = 22;
    /**
     * <code>EVENT_ID_FROSTIVUS_2018 = 23;</code>
     */
    public static final int EVENT_ID_FROSTIVUS_2018_VALUE = 23;
    /**
     * <code>EVENT_ID_NEW_BLOOM_2019 = 24;</code>
     */
    public static final int EVENT_ID_NEW_BLOOM_2019_VALUE = 24;
    /**
     * <code>EVENT_ID_INTERNATIONAL_2019 = 25;</code>
     */
    public static final int EVENT_ID_INTERNATIONAL_2019_VALUE = 25;
    /**
     * <code>EVENT_ID_NEW_PLAYER_EXPERIENCE = 26;</code>
     */
    public static final int EVENT_ID_NEW_PLAYER_EXPERIENCE_VALUE = 26;
    /**
     * <code>EVENT_ID_FROSTIVUS_2019 = 27;</code>
     */
    public static final int EVENT_ID_FROSTIVUS_2019_VALUE = 27;
    /**
     * <code>EVENT_ID_NEW_BLOOM_2020 = 28;</code>
     */
    public static final int EVENT_ID_NEW_BLOOM_2020_VALUE = 28;
    /**
     * <code>EVENT_ID_INTERNATIONAL_2020 = 29;</code>
     */
    public static final int EVENT_ID_INTERNATIONAL_2020_VALUE = 29;
    /**
     * <code>EVENT_ID_TEAM_FANDOM = 30;</code>
     */
    public static final int EVENT_ID_TEAM_FANDOM_VALUE = 30;
    /**
     * <code>EVENT_ID_DIRETIDE_2020 = 31;</code>
     */
    public static final int EVENT_ID_DIRETIDE_2020_VALUE = 31;
    /**
     * <code>EVENT_ID_SPRING_2021 = 32;</code>
     */
    public static final int EVENT_ID_SPRING_2021_VALUE = 32;
    /**
     * <code>EVENT_ID_FALL_2021 = 33;</code>
     */
    public static final int EVENT_ID_FALL_2021_VALUE = 33;
    /**
     * <code>EVENT_ID_TEAM_FANDOM_FALL_2021 = 34;</code>
     */
    public static final int EVENT_ID_TEAM_FANDOM_FALL_2021_VALUE = 34;
    /**
     * <code>EVENT_ID_TEAM_2021_2022_TOUR2 = 35;</code>
     */
    public static final int EVENT_ID_TEAM_2021_2022_TOUR2_VALUE = 35;
    /**
     * <code>EVENT_ID_INTERNATIONAL_2022 = 36;</code>
     */
    public static final int EVENT_ID_INTERNATIONAL_2022_VALUE = 36;
    /**
     * <code>EVENT_ID_TEAM_2021_2022_TOUR3 = 37;</code>
     */
    public static final int EVENT_ID_TEAM_2021_2022_TOUR3_VALUE = 37;
    /**
     * <code>EVENT_ID_TEAM_INTERNATIONAL_2022 = 38;</code>
     */
    public static final int EVENT_ID_TEAM_INTERNATIONAL_2022_VALUE = 38;
    /**
     * <code>EVENT_ID_PERMANENT_GRANTS = 39;</code>
     */
    public static final int EVENT_ID_PERMANENT_GRANTS_VALUE = 39;
    /**
     * <code>EVENT_ID_MUERTA_RELEASE_SPRING2023 = 40;</code>
     */
    public static final int EVENT_ID_MUERTA_RELEASE_SPRING2023_VALUE = 40;
    /**
     * <code>EVENT_ID_TEAM_2023_TOUR1 = 41;</code>
     */
    public static final int EVENT_ID_TEAM_2023_TOUR1_VALUE = 41;
    /**
     * <code>EVENT_ID_TEAM_2023_TOUR2 = 42;</code>
     */
    public static final int EVENT_ID_TEAM_2023_TOUR2_VALUE = 42;
    /**
     * <code>EVENT_ID_TEAM_2023_TOUR3 = 43;</code>
     */
    public static final int EVENT_ID_TEAM_2023_TOUR3_VALUE = 43;
    /**
     * <code>EVENT_ID_INTERNATIONAL_2023 = 45;</code>
     */
    public static final int EVENT_ID_INTERNATIONAL_2023_VALUE = 45;
    /**
     * <code>EVENT_ID_10TH_ANNIVERSARY = 46;</code>
     */
    public static final int EVENT_ID_10TH_ANNIVERSARY_VALUE = 46;
    /**
     * <code>EVENT_ID_CROWNFALL = 47;</code>
     */
    public static final int EVENT_ID_CROWNFALL_VALUE = 47;
    /**
     * <code>EVENT_ID_FROSTIVUS_2023 = 48;</code>
     */
    public static final int EVENT_ID_FROSTIVUS_2023_VALUE = 48;
    /**
     * <code>EVENT_ID_INTERNATIONAL_2024 = 49;</code>
     */
    public static final int EVENT_ID_INTERNATIONAL_2024_VALUE = 49;
    /**
     * <code>EVENT_ID_COUNT = 50;</code>
     */
    public static final int EVENT_ID_COUNT_VALUE = 50;


    public final int getNumber() { return value; }

    public static EEvent valueOf(int value) {
      switch (value) {
        case 0: return EVENT_ID_NONE;
        case 1: return EVENT_ID_DIRETIDE;
        case 2: return EVENT_ID_SPRING_FESTIVAL;
        case 3: return EVENT_ID_FROSTIVUS_2013;
        case 4: return EVENT_ID_COMPENDIUM_2014;
        case 5: return EVENT_ID_NEXON_PC_BANG;
        case 6: return EVENT_ID_PWRD_DAC_2015;
        case 7: return EVENT_ID_NEW_BLOOM_2015;
        case 8: return EVENT_ID_INTERNATIONAL_2015;
        case 9: return EVENT_ID_FALL_MAJOR_2015;
        case 10: return EVENT_ID_ORACLE_PA;
        case 11: return EVENT_ID_NEW_BLOOM_2015_PREBEAST;
        case 12: return EVENT_ID_FROSTIVUS;
        case 13: return EVENT_ID_WINTER_MAJOR_2016;
        case 14: return EVENT_ID_INTERNATIONAL_2016;
        case 15: return EVENT_ID_FALL_MAJOR_2016;
        case 16: return EVENT_ID_WINTER_MAJOR_2017;
        case 17: return EVENT_ID_NEW_BLOOM_2017;
        case 18: return EVENT_ID_INTERNATIONAL_2017;
        case 19: return EVENT_ID_PLUS_SUBSCRIPTION;
        case 20: return EVENT_ID_SINGLES_DAY_2017;
        case 21: return EVENT_ID_FROSTIVUS_2017;
        case 22: return EVENT_ID_INTERNATIONAL_2018;
        case 23: return EVENT_ID_FROSTIVUS_2018;
        case 24: return EVENT_ID_NEW_BLOOM_2019;
        case 25: return EVENT_ID_INTERNATIONAL_2019;
        case 26: return EVENT_ID_NEW_PLAYER_EXPERIENCE;
        case 27: return EVENT_ID_FROSTIVUS_2019;
        case 28: return EVENT_ID_NEW_BLOOM_2020;
        case 29: return EVENT_ID_INTERNATIONAL_2020;
        case 30: return EVENT_ID_TEAM_FANDOM;
        case 31: return EVENT_ID_DIRETIDE_2020;
        case 32: return EVENT_ID_SPRING_2021;
        case 33: return EVENT_ID_FALL_2021;
        case 34: return EVENT_ID_TEAM_FANDOM_FALL_2021;
        case 35: return EVENT_ID_TEAM_2021_2022_TOUR2;
        case 36: return EVENT_ID_INTERNATIONAL_2022;
        case 37: return EVENT_ID_TEAM_2021_2022_TOUR3;
        case 38: return EVENT_ID_TEAM_INTERNATIONAL_2022;
        case 39: return EVENT_ID_PERMANENT_GRANTS;
        case 40: return EVENT_ID_MUERTA_RELEASE_SPRING2023;
        case 41: return EVENT_ID_TEAM_2023_TOUR1;
        case 42: return EVENT_ID_TEAM_2023_TOUR2;
        case 43: return EVENT_ID_TEAM_2023_TOUR3;
        case 45: return EVENT_ID_INTERNATIONAL_2023;
        case 46: return EVENT_ID_10TH_ANNIVERSARY;
        case 47: return EVENT_ID_CROWNFALL;
        case 48: return EVENT_ID_FROSTIVUS_2023;
        case 49: return EVENT_ID_INTERNATIONAL_2024;
        case 50: return EVENT_ID_COUNT;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EEvent>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EEvent>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EEvent>() {
            public EEvent findValueByNumber(int number) {
              return EEvent.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.dota.s2.proto.DOTAS2SharedEnums.getDescriptor().getEnumTypes().get(2);
    }

    private static final EEvent[] VALUES = values();

    public static EEvent valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private EEvent(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EEvent)
  }

  /**
   * Protobuf enum {@code EMatchOutcome}
   */
  public enum EMatchOutcome
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_EMatchOutcome_Unknown = 0;</code>
     */
    k_EMatchOutcome_Unknown(0, 0),
    /**
     * <code>k_EMatchOutcome_RadVictory = 2;</code>
     */
    k_EMatchOutcome_RadVictory(1, 2),
    /**
     * <code>k_EMatchOutcome_DireVictory = 3;</code>
     */
    k_EMatchOutcome_DireVictory(2, 3),
    /**
     * <code>k_EMatchOutcome_NeutralVictory = 4;</code>
     */
    k_EMatchOutcome_NeutralVictory(3, 4),
    /**
     * <code>k_EMatchOutcome_NoTeamWinner = 5;</code>
     */
    k_EMatchOutcome_NoTeamWinner(4, 5),
    /**
     * <code>k_EMatchOutcome_Custom1Victory = 6;</code>
     */
    k_EMatchOutcome_Custom1Victory(5, 6),
    /**
     * <code>k_EMatchOutcome_Custom2Victory = 7;</code>
     */
    k_EMatchOutcome_Custom2Victory(6, 7),
    /**
     * <code>k_EMatchOutcome_Custom3Victory = 8;</code>
     */
    k_EMatchOutcome_Custom3Victory(7, 8),
    /**
     * <code>k_EMatchOutcome_Custom4Victory = 9;</code>
     */
    k_EMatchOutcome_Custom4Victory(8, 9),
    /**
     * <code>k_EMatchOutcome_Custom5Victory = 10;</code>
     */
    k_EMatchOutcome_Custom5Victory(9, 10),
    /**
     * <code>k_EMatchOutcome_Custom6Victory = 11;</code>
     */
    k_EMatchOutcome_Custom6Victory(10, 11),
    /**
     * <code>k_EMatchOutcome_Custom7Victory = 12;</code>
     */
    k_EMatchOutcome_Custom7Victory(11, 12),
    /**
     * <code>k_EMatchOutcome_Custom8Victory = 13;</code>
     */
    k_EMatchOutcome_Custom8Victory(12, 13),
    /**
     * <code>k_EMatchOutcome_NotScored_PoorNetworkConditions = 64;</code>
     */
    k_EMatchOutcome_NotScored_PoorNetworkConditions(13, 64),
    /**
     * <code>k_EMatchOutcome_NotScored_Leaver = 65;</code>
     */
    k_EMatchOutcome_NotScored_Leaver(14, 65),
    /**
     * <code>k_EMatchOutcome_NotScored_ServerCrash = 66;</code>
     */
    k_EMatchOutcome_NotScored_ServerCrash(15, 66),
    /**
     * <code>k_EMatchOutcome_NotScored_NeverStarted = 67;</code>
     */
    k_EMatchOutcome_NotScored_NeverStarted(16, 67),
    /**
     * <code>k_EMatchOutcome_NotScored_Canceled = 68;</code>
     */
    k_EMatchOutcome_NotScored_Canceled(17, 68),
    /**
     * <code>k_EMatchOutcome_NotScored_Suspicious = 69;</code>
     */
    k_EMatchOutcome_NotScored_Suspicious(18, 69),
    ;

    /**
     * <code>k_EMatchOutcome_Unknown = 0;</code>
     */
    public static final int k_EMatchOutcome_Unknown_VALUE = 0;
    /**
     * <code>k_EMatchOutcome_RadVictory = 2;</code>
     */
    public static final int k_EMatchOutcome_RadVictory_VALUE = 2;
    /**
     * <code>k_EMatchOutcome_DireVictory = 3;</code>
     */
    public static final int k_EMatchOutcome_DireVictory_VALUE = 3;
    /**
     * <code>k_EMatchOutcome_NeutralVictory = 4;</code>
     */
    public static final int k_EMatchOutcome_NeutralVictory_VALUE = 4;
    /**
     * <code>k_EMatchOutcome_NoTeamWinner = 5;</code>
     */
    public static final int k_EMatchOutcome_NoTeamWinner_VALUE = 5;
    /**
     * <code>k_EMatchOutcome_Custom1Victory = 6;</code>
     */
    public static final int k_EMatchOutcome_Custom1Victory_VALUE = 6;
    /**
     * <code>k_EMatchOutcome_Custom2Victory = 7;</code>
     */
    public static final int k_EMatchOutcome_Custom2Victory_VALUE = 7;
    /**
     * <code>k_EMatchOutcome_Custom3Victory = 8;</code>
     */
    public static final int k_EMatchOutcome_Custom3Victory_VALUE = 8;
    /**
     * <code>k_EMatchOutcome_Custom4Victory = 9;</code>
     */
    public static final int k_EMatchOutcome_Custom4Victory_VALUE = 9;
    /**
     * <code>k_EMatchOutcome_Custom5Victory = 10;</code>
     */
    public static final int k_EMatchOutcome_Custom5Victory_VALUE = 10;
    /**
     * <code>k_EMatchOutcome_Custom6Victory = 11;</code>
     */
    public static final int k_EMatchOutcome_Custom6Victory_VALUE = 11;
    /**
     * <code>k_EMatchOutcome_Custom7Victory = 12;</code>
     */
    public static final int k_EMatchOutcome_Custom7Victory_VALUE = 12;
    /**
     * <code>k_EMatchOutcome_Custom8Victory = 13;</code>
     */
    public static final int k_EMatchOutcome_Custom8Victory_VALUE = 13;
    /**
     * <code>k_EMatchOutcome_NotScored_PoorNetworkConditions = 64;</code>
     */
    public static final int k_EMatchOutcome_NotScored_PoorNetworkConditions_VALUE = 64;
    /**
     * <code>k_EMatchOutcome_NotScored_Leaver = 65;</code>
     */
    public static final int k_EMatchOutcome_NotScored_Leaver_VALUE = 65;
    /**
     * <code>k_EMatchOutcome_NotScored_ServerCrash = 66;</code>
     */
    public static final int k_EMatchOutcome_NotScored_ServerCrash_VALUE = 66;
    /**
     * <code>k_EMatchOutcome_NotScored_NeverStarted = 67;</code>
     */
    public static final int k_EMatchOutcome_NotScored_NeverStarted_VALUE = 67;
    /**
     * <code>k_EMatchOutcome_NotScored_Canceled = 68;</code>
     */
    public static final int k_EMatchOutcome_NotScored_Canceled_VALUE = 68;
    /**
     * <code>k_EMatchOutcome_NotScored_Suspicious = 69;</code>
     */
    public static final int k_EMatchOutcome_NotScored_Suspicious_VALUE = 69;


    public final int getNumber() { return value; }

    public static EMatchOutcome valueOf(int value) {
      switch (value) {
        case 0: return k_EMatchOutcome_Unknown;
        case 2: return k_EMatchOutcome_RadVictory;
        case 3: return k_EMatchOutcome_DireVictory;
        case 4: return k_EMatchOutcome_NeutralVictory;
        case 5: return k_EMatchOutcome_NoTeamWinner;
        case 6: return k_EMatchOutcome_Custom1Victory;
        case 7: return k_EMatchOutcome_Custom2Victory;
        case 8: return k_EMatchOutcome_Custom3Victory;
        case 9: return k_EMatchOutcome_Custom4Victory;
        case 10: return k_EMatchOutcome_Custom5Victory;
        case 11: return k_EMatchOutcome_Custom6Victory;
        case 12: return k_EMatchOutcome_Custom7Victory;
        case 13: return k_EMatchOutcome_Custom8Victory;
        case 64: return k_EMatchOutcome_NotScored_PoorNetworkConditions;
        case 65: return k_EMatchOutcome_NotScored_Leaver;
        case 66: return k_EMatchOutcome_NotScored_ServerCrash;
        case 67: return k_EMatchOutcome_NotScored_NeverStarted;
        case 68: return k_EMatchOutcome_NotScored_Canceled;
        case 69: return k_EMatchOutcome_NotScored_Suspicious;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EMatchOutcome>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EMatchOutcome>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EMatchOutcome>() {
            public EMatchOutcome findValueByNumber(int number) {
              return EMatchOutcome.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.dota.s2.proto.DOTAS2SharedEnums.getDescriptor().getEnumTypes().get(3);
    }

    private static final EMatchOutcome[] VALUES = values();

    public static EMatchOutcome valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private EMatchOutcome(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EMatchOutcome)
  }

  /**
   * Protobuf enum {@code EDOTAPlayerMMRType}
   */
  public enum EDOTAPlayerMMRType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_EDOTAPlayerMMRType_Invalid = 0;</code>
     */
    k_EDOTAPlayerMMRType_Invalid(0, 0),
    /**
     * <code>k_EDOTAPlayerMMRType_GeneralHidden = 1;</code>
     */
    k_EDOTAPlayerMMRType_GeneralHidden(1, 1),
    /**
     * <code>k_EDOTAPlayerMMRType_GeneralCompetitive2019 = 3;</code>
     */
    k_EDOTAPlayerMMRType_GeneralCompetitive2019(2, 3),
    /**
     * <code>k_EDOTAPlayerMMRType_SoloCompetitive2019 = 4;</code>
     */
    k_EDOTAPlayerMMRType_SoloCompetitive2019(3, 4),
    /**
     * <code>k_EDOTAPlayerMMRType_1v1Competitive_UNUSED = 5;</code>
     */
    k_EDOTAPlayerMMRType_1v1Competitive_UNUSED(4, 5),
    /**
     * <code>k_EDOTAPlayerMMRType_GeneralSeasonalRanked = 6;</code>
     */
    k_EDOTAPlayerMMRType_GeneralSeasonalRanked(5, 6),
    /**
     * <code>k_EDOTAPlayerMMRType_SoloSeasonalRanked = 7;</code>
     */
    k_EDOTAPlayerMMRType_SoloSeasonalRanked(6, 7),
    /**
     * <code>k_EDOTAPlayerMMRType_Competitive_Core = 8;</code>
     */
    k_EDOTAPlayerMMRType_Competitive_Core(7, 8),
    /**
     * <code>k_EDOTAPlayerMMRType_Competitive_Support = 9;</code>
     */
    k_EDOTAPlayerMMRType_Competitive_Support(8, 9),
    /**
     * <code>k_EDOTAPlayerMMRType_Competitive_Classic = 10;</code>
     */
    k_EDOTAPlayerMMRType_Competitive_Classic(9, 10),
    ;

    /**
     * <code>k_EDOTAPlayerMMRType_Invalid = 0;</code>
     */
    public static final int k_EDOTAPlayerMMRType_Invalid_VALUE = 0;
    /**
     * <code>k_EDOTAPlayerMMRType_GeneralHidden = 1;</code>
     */
    public static final int k_EDOTAPlayerMMRType_GeneralHidden_VALUE = 1;
    /**
     * <code>k_EDOTAPlayerMMRType_GeneralCompetitive2019 = 3;</code>
     */
    public static final int k_EDOTAPlayerMMRType_GeneralCompetitive2019_VALUE = 3;
    /**
     * <code>k_EDOTAPlayerMMRType_SoloCompetitive2019 = 4;</code>
     */
    public static final int k_EDOTAPlayerMMRType_SoloCompetitive2019_VALUE = 4;
    /**
     * <code>k_EDOTAPlayerMMRType_1v1Competitive_UNUSED = 5;</code>
     */
    public static final int k_EDOTAPlayerMMRType_1v1Competitive_UNUSED_VALUE = 5;
    /**
     * <code>k_EDOTAPlayerMMRType_GeneralSeasonalRanked = 6;</code>
     */
    public static final int k_EDOTAPlayerMMRType_GeneralSeasonalRanked_VALUE = 6;
    /**
     * <code>k_EDOTAPlayerMMRType_SoloSeasonalRanked = 7;</code>
     */
    public static final int k_EDOTAPlayerMMRType_SoloSeasonalRanked_VALUE = 7;
    /**
     * <code>k_EDOTAPlayerMMRType_Competitive_Core = 8;</code>
     */
    public static final int k_EDOTAPlayerMMRType_Competitive_Core_VALUE = 8;
    /**
     * <code>k_EDOTAPlayerMMRType_Competitive_Support = 9;</code>
     */
    public static final int k_EDOTAPlayerMMRType_Competitive_Support_VALUE = 9;
    /**
     * <code>k_EDOTAPlayerMMRType_Competitive_Classic = 10;</code>
     */
    public static final int k_EDOTAPlayerMMRType_Competitive_Classic_VALUE = 10;


    public final int getNumber() { return value; }

    public static EDOTAPlayerMMRType valueOf(int value) {
      switch (value) {
        case 0: return k_EDOTAPlayerMMRType_Invalid;
        case 1: return k_EDOTAPlayerMMRType_GeneralHidden;
        case 3: return k_EDOTAPlayerMMRType_GeneralCompetitive2019;
        case 4: return k_EDOTAPlayerMMRType_SoloCompetitive2019;
        case 5: return k_EDOTAPlayerMMRType_1v1Competitive_UNUSED;
        case 6: return k_EDOTAPlayerMMRType_GeneralSeasonalRanked;
        case 7: return k_EDOTAPlayerMMRType_SoloSeasonalRanked;
        case 8: return k_EDOTAPlayerMMRType_Competitive_Core;
        case 9: return k_EDOTAPlayerMMRType_Competitive_Support;
        case 10: return k_EDOTAPlayerMMRType_Competitive_Classic;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EDOTAPlayerMMRType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EDOTAPlayerMMRType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EDOTAPlayerMMRType>() {
            public EDOTAPlayerMMRType findValueByNumber(int number) {
              return EDOTAPlayerMMRType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.dota.s2.proto.DOTAS2SharedEnums.getDescriptor().getEnumTypes().get(4);
    }

    private static final EDOTAPlayerMMRType[] VALUES = values();

    public static EDOTAPlayerMMRType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private EDOTAPlayerMMRType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EDOTAPlayerMMRType)
  }

  /**
   * Protobuf enum {@code EDOTAMMRBoostType}
   */
  public enum EDOTAMMRBoostType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_EDOTAMMRBoostType_None = 0;</code>
     */
    k_EDOTAMMRBoostType_None(0, 0),
    /**
     * <code>k_EDOTAMMRBoostType_Leader = 1;</code>
     */
    k_EDOTAMMRBoostType_Leader(1, 1),
    /**
     * <code>k_EDOTAMMRBoostType_Follower = 2;</code>
     */
    k_EDOTAMMRBoostType_Follower(2, 2),
    ;

    /**
     * <code>k_EDOTAMMRBoostType_None = 0;</code>
     */
    public static final int k_EDOTAMMRBoostType_None_VALUE = 0;
    /**
     * <code>k_EDOTAMMRBoostType_Leader = 1;</code>
     */
    public static final int k_EDOTAMMRBoostType_Leader_VALUE = 1;
    /**
     * <code>k_EDOTAMMRBoostType_Follower = 2;</code>
     */
    public static final int k_EDOTAMMRBoostType_Follower_VALUE = 2;


    public final int getNumber() { return value; }

    public static EDOTAMMRBoostType valueOf(int value) {
      switch (value) {
        case 0: return k_EDOTAMMRBoostType_None;
        case 1: return k_EDOTAMMRBoostType_Leader;
        case 2: return k_EDOTAMMRBoostType_Follower;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EDOTAMMRBoostType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EDOTAMMRBoostType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EDOTAMMRBoostType>() {
            public EDOTAMMRBoostType findValueByNumber(int number) {
              return EDOTAMMRBoostType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.dota.s2.proto.DOTAS2SharedEnums.getDescriptor().getEnumTypes().get(5);
    }

    private static final EDOTAMMRBoostType[] VALUES = values();

    public static EDOTAMMRBoostType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private EDOTAMMRBoostType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EDOTAMMRBoostType)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\027dota_shared_enums.proto*\232\005\n\rDOTA_GameM" +
      "ode\022\026\n\022DOTA_GAMEMODE_NONE\020\000\022\024\n\020DOTA_GAME" +
      "MODE_AP\020\001\022\024\n\020DOTA_GAMEMODE_CM\020\002\022\024\n\020DOTA_" +
      "GAMEMODE_RD\020\003\022\024\n\020DOTA_GAMEMODE_SD\020\004\022\024\n\020D" +
      "OTA_GAMEMODE_AR\020\005\022\027\n\023DOTA_GAMEMODE_INTRO" +
      "\020\006\022\024\n\020DOTA_GAMEMODE_HW\020\007\022\034\n\030DOTA_GAMEMOD" +
      "E_REVERSE_CM\020\010\022\026\n\022DOTA_GAMEMODE_XMAS\020\t\022\032" +
      "\n\026DOTA_GAMEMODE_TUTORIAL\020\n\022\024\n\020DOTA_GAMEM" +
      "ODE_MO\020\013\022\024\n\020DOTA_GAMEMODE_LP\020\014\022\027\n\023DOTA_G" +
      "AMEMODE_POOL1\020\r\022\024\n\020DOTA_GAMEMODE_FH\020\016\022\030\n",
      "\024DOTA_GAMEMODE_CUSTOM\020\017\022\024\n\020DOTA_GAMEMODE" +
      "_CD\020\020\022\024\n\020DOTA_GAMEMODE_BD\020\021\022\037\n\033DOTA_GAME" +
      "MODE_ABILITY_DRAFT\020\022\022\027\n\023DOTA_GAMEMODE_EV" +
      "ENT\020\023\022\026\n\022DOTA_GAMEMODE_ARDM\020\024\022\030\n\024DOTA_GA" +
      "MEMODE_1V1MID\020\025\022\033\n\027DOTA_GAMEMODE_ALL_DRA" +
      "FT\020\026\022\027\n\023DOTA_GAMEMODE_TURBO\020\027\022\032\n\026DOTA_GA" +
      "MEMODE_MUTATION\020\030\022#\n\037DOTA_GAMEMODE_COACH" +
      "ES_CHALLENGE\020\031*\251\003\n\014DOTA_GC_TEAM\022\032\n\026DOTA_" +
      "GC_TEAM_GOOD_GUYS\020\000\022\031\n\025DOTA_GC_TEAM_BAD_" +
      "GUYS\020\001\022\034\n\030DOTA_GC_TEAM_BROADCASTER\020\002\022\032\n\026",
      "DOTA_GC_TEAM_SPECTATOR\020\003\022\034\n\030DOTA_GC_TEAM" +
      "_PLAYER_POOL\020\004\022\027\n\023DOTA_GC_TEAM_NOTEAM\020\005\022" +
      "\031\n\025DOTA_GC_TEAM_CUSTOM_1\020\006\022\031\n\025DOTA_GC_TE" +
      "AM_CUSTOM_2\020\007\022\031\n\025DOTA_GC_TEAM_CUSTOM_3\020\010" +
      "\022\031\n\025DOTA_GC_TEAM_CUSTOM_4\020\t\022\031\n\025DOTA_GC_T" +
      "EAM_CUSTOM_5\020\n\022\031\n\025DOTA_GC_TEAM_CUSTOM_6\020" +
      "\013\022\031\n\025DOTA_GC_TEAM_CUSTOM_7\020\014\022\031\n\025DOTA_GC_" +
      "TEAM_CUSTOM_8\020\r\022\031\n\025DOTA_GC_TEAM_NEUTRALS" +
      "\020\016*\355\013\n\006EEvent\022\021\n\rEVENT_ID_NONE\020\000\022\025\n\021EVEN" +
      "T_ID_DIRETIDE\020\001\022\034\n\030EVENT_ID_SPRING_FESTI",
      "VAL\020\002\022\033\n\027EVENT_ID_FROSTIVUS_2013\020\003\022\034\n\030EV" +
      "ENT_ID_COMPENDIUM_2014\020\004\022\032\n\026EVENT_ID_NEX" +
      "ON_PC_BANG\020\005\022\032\n\026EVENT_ID_PWRD_DAC_2015\020\006" +
      "\022\033\n\027EVENT_ID_NEW_BLOOM_2015\020\007\022\037\n\033EVENT_I" +
      "D_INTERNATIONAL_2015\020\010\022\034\n\030EVENT_ID_FALL_" +
      "MAJOR_2015\020\t\022\026\n\022EVENT_ID_ORACLE_PA\020\n\022$\n " +
      "EVENT_ID_NEW_BLOOM_2015_PREBEAST\020\013\022\026\n\022EV" +
      "ENT_ID_FROSTIVUS\020\014\022\036\n\032EVENT_ID_WINTER_MA" +
      "JOR_2016\020\r\022\037\n\033EVENT_ID_INTERNATIONAL_201" +
      "6\020\016\022\034\n\030EVENT_ID_FALL_MAJOR_2016\020\017\022\036\n\032EVE",
      "NT_ID_WINTER_MAJOR_2017\020\020\022\033\n\027EVENT_ID_NE" +
      "W_BLOOM_2017\020\021\022\037\n\033EVENT_ID_INTERNATIONAL" +
      "_2017\020\022\022\036\n\032EVENT_ID_PLUS_SUBSCRIPTION\020\023\022" +
      "\035\n\031EVENT_ID_SINGLES_DAY_2017\020\024\022\033\n\027EVENT_" +
      "ID_FROSTIVUS_2017\020\025\022\037\n\033EVENT_ID_INTERNAT" +
      "IONAL_2018\020\026\022\033\n\027EVENT_ID_FROSTIVUS_2018\020" +
      "\027\022\033\n\027EVENT_ID_NEW_BLOOM_2019\020\030\022\037\n\033EVENT_" +
      "ID_INTERNATIONAL_2019\020\031\022\"\n\036EVENT_ID_NEW_" +
      "PLAYER_EXPERIENCE\020\032\022\033\n\027EVENT_ID_FROSTIVU" +
      "S_2019\020\033\022\033\n\027EVENT_ID_NEW_BLOOM_2020\020\034\022\037\n",
      "\033EVENT_ID_INTERNATIONAL_2020\020\035\022\030\n\024EVENT_" +
      "ID_TEAM_FANDOM\020\036\022\032\n\026EVENT_ID_DIRETIDE_20" +
      "20\020\037\022\030\n\024EVENT_ID_SPRING_2021\020 \022\026\n\022EVENT_" +
      "ID_FALL_2021\020!\022\"\n\036EVENT_ID_TEAM_FANDOM_F" +
      "ALL_2021\020\"\022!\n\035EVENT_ID_TEAM_2021_2022_TO" +
      "UR2\020#\022\037\n\033EVENT_ID_INTERNATIONAL_2022\020$\022!" +
      "\n\035EVENT_ID_TEAM_2021_2022_TOUR3\020%\022$\n EVE" +
      "NT_ID_TEAM_INTERNATIONAL_2022\020&\022\035\n\031EVENT" +
      "_ID_PERMANENT_GRANTS\020\'\022&\n\"EVENT_ID_MUERT" +
      "A_RELEASE_SPRING2023\020(\022\034\n\030EVENT_ID_TEAM_",
      "2023_TOUR1\020)\022\034\n\030EVENT_ID_TEAM_2023_TOUR2" +
      "\020*\022\034\n\030EVENT_ID_TEAM_2023_TOUR3\020+\022\037\n\033EVEN" +
      "T_ID_INTERNATIONAL_2023\020-\022\035\n\031EVENT_ID_10" +
      "TH_ANNIVERSARY\020.\022\026\n\022EVENT_ID_CROWNFALL\020/" +
      "\022\033\n\027EVENT_ID_FROSTIVUS_2023\0200\022\037\n\033EVENT_I" +
      "D_INTERNATIONAL_2024\0201\022\022\n\016EVENT_ID_COUNT" +
      "\0202*\327\005\n\rEMatchOutcome\022\033\n\027k_EMatchOutcome_" +
      "Unknown\020\000\022\036\n\032k_EMatchOutcome_RadVictory\020" +
      "\002\022\037\n\033k_EMatchOutcome_DireVictory\020\003\022\"\n\036k_" +
      "EMatchOutcome_NeutralVictory\020\004\022 \n\034k_EMat",
      "chOutcome_NoTeamWinner\020\005\022\"\n\036k_EMatchOutc" +
      "ome_Custom1Victory\020\006\022\"\n\036k_EMatchOutcome_" +
      "Custom2Victory\020\007\022\"\n\036k_EMatchOutcome_Cust" +
      "om3Victory\020\010\022\"\n\036k_EMatchOutcome_Custom4V" +
      "ictory\020\t\022\"\n\036k_EMatchOutcome_Custom5Victo" +
      "ry\020\n\022\"\n\036k_EMatchOutcome_Custom6Victory\020\013" +
      "\022\"\n\036k_EMatchOutcome_Custom7Victory\020\014\022\"\n\036" +
      "k_EMatchOutcome_Custom8Victory\020\r\0223\n/k_EM" +
      "atchOutcome_NotScored_PoorNetworkConditi" +
      "ons\020@\022$\n k_EMatchOutcome_NotScored_Leave",
      "r\020A\022)\n%k_EMatchOutcome_NotScored_ServerC" +
      "rash\020B\022*\n&k_EMatchOutcome_NotScored_Neve" +
      "rStarted\020C\022&\n\"k_EMatchOutcome_NotScored_" +
      "Canceled\020D\022(\n$k_EMatchOutcome_NotScored_" +
      "Suspicious\020E*\321\003\n\022EDOTAPlayerMMRType\022 \n\034k" +
      "_EDOTAPlayerMMRType_Invalid\020\000\022&\n\"k_EDOTA" +
      "PlayerMMRType_GeneralHidden\020\001\022/\n+k_EDOTA" +
      "PlayerMMRType_GeneralCompetitive2019\020\003\022," +
      "\n(k_EDOTAPlayerMMRType_SoloCompetitive20" +
      "19\020\004\022.\n*k_EDOTAPlayerMMRType_1v1Competit",
      "ive_UNUSED\020\005\022.\n*k_EDOTAPlayerMMRType_Gen" +
      "eralSeasonalRanked\020\006\022+\n\'k_EDOTAPlayerMMR" +
      "Type_SoloSeasonalRanked\020\007\022)\n%k_EDOTAPlay" +
      "erMMRType_Competitive_Core\020\010\022,\n(k_EDOTAP" +
      "layerMMRType_Competitive_Support\020\t\022,\n(k_" +
      "EDOTAPlayerMMRType_Competitive_Classic\020\n" +
      "*s\n\021EDOTAMMRBoostType\022\034\n\030k_EDOTAMMRBoost" +
      "Type_None\020\000\022\036\n\032k_EDOTAMMRBoostType_Leade" +
      "r\020\001\022 \n\034k_EDOTAMMRBoostType_Follower\020\002B:\n" +
      "%skadistats.clarity.wire.dota.s2.protoB\021",
      "DOTAS2SharedEnums"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
