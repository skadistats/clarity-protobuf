// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_id.proto

package skadistats.clarity.wire.deadlock.proto;

public final class DeadlockMessageId {
  private DeadlockMessageId() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code NET_Messages}
   */
  public enum NET_Messages
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>net_NOP = 0;</code>
     */
    net_NOP(0, 0),
    /**
     * <code>net_Disconnect = 1;</code>
     */
    net_Disconnect(1, 1),
    /**
     * <code>net_File = 2;</code>
     */
    net_File(2, 2),
    /**
     * <code>net_SplitScreenUser = 3;</code>
     */
    net_SplitScreenUser(3, 3),
    /**
     * <code>net_Tick = 4;</code>
     */
    net_Tick(4, 4),
    /**
     * <code>net_StringCmd = 5;</code>
     */
    net_StringCmd(5, 5),
    /**
     * <code>net_SetConVar = 6;</code>
     */
    net_SetConVar(6, 6),
    /**
     * <code>net_SignonState = 7;</code>
     */
    net_SignonState(7, 7),
    /**
     * <code>net_SpawnGroup_Load = 8;</code>
     */
    net_SpawnGroup_Load(8, 8),
    /**
     * <code>net_SpawnGroup_ManifestUpdate = 9;</code>
     */
    net_SpawnGroup_ManifestUpdate(9, 9),
    /**
     * <code>net_SpawnGroup_SetCreationTick = 11;</code>
     */
    net_SpawnGroup_SetCreationTick(10, 11),
    /**
     * <code>net_SpawnGroup_Unload = 12;</code>
     */
    net_SpawnGroup_Unload(11, 12),
    /**
     * <code>net_SpawnGroup_LoadCompleted = 13;</code>
     */
    net_SpawnGroup_LoadCompleted(12, 13),
    /**
     * <code>net_ReliableMessageEndMarker = 14;</code>
     */
    net_ReliableMessageEndMarker(13, 14),
    /**
     * <code>net_DebugOverlay = 15;</code>
     */
    net_DebugOverlay(14, 15),
    ;

    /**
     * <code>net_NOP = 0;</code>
     */
    public static final int net_NOP_VALUE = 0;
    /**
     * <code>net_Disconnect = 1;</code>
     */
    public static final int net_Disconnect_VALUE = 1;
    /**
     * <code>net_File = 2;</code>
     */
    public static final int net_File_VALUE = 2;
    /**
     * <code>net_SplitScreenUser = 3;</code>
     */
    public static final int net_SplitScreenUser_VALUE = 3;
    /**
     * <code>net_Tick = 4;</code>
     */
    public static final int net_Tick_VALUE = 4;
    /**
     * <code>net_StringCmd = 5;</code>
     */
    public static final int net_StringCmd_VALUE = 5;
    /**
     * <code>net_SetConVar = 6;</code>
     */
    public static final int net_SetConVar_VALUE = 6;
    /**
     * <code>net_SignonState = 7;</code>
     */
    public static final int net_SignonState_VALUE = 7;
    /**
     * <code>net_SpawnGroup_Load = 8;</code>
     */
    public static final int net_SpawnGroup_Load_VALUE = 8;
    /**
     * <code>net_SpawnGroup_ManifestUpdate = 9;</code>
     */
    public static final int net_SpawnGroup_ManifestUpdate_VALUE = 9;
    /**
     * <code>net_SpawnGroup_SetCreationTick = 11;</code>
     */
    public static final int net_SpawnGroup_SetCreationTick_VALUE = 11;
    /**
     * <code>net_SpawnGroup_Unload = 12;</code>
     */
    public static final int net_SpawnGroup_Unload_VALUE = 12;
    /**
     * <code>net_SpawnGroup_LoadCompleted = 13;</code>
     */
    public static final int net_SpawnGroup_LoadCompleted_VALUE = 13;
    /**
     * <code>net_ReliableMessageEndMarker = 14;</code>
     */
    public static final int net_ReliableMessageEndMarker_VALUE = 14;
    /**
     * <code>net_DebugOverlay = 15;</code>
     */
    public static final int net_DebugOverlay_VALUE = 15;


    public final int getNumber() { return value; }

    public static NET_Messages valueOf(int value) {
      switch (value) {
        case 0: return net_NOP;
        case 1: return net_Disconnect;
        case 2: return net_File;
        case 3: return net_SplitScreenUser;
        case 4: return net_Tick;
        case 5: return net_StringCmd;
        case 6: return net_SetConVar;
        case 7: return net_SignonState;
        case 8: return net_SpawnGroup_Load;
        case 9: return net_SpawnGroup_ManifestUpdate;
        case 11: return net_SpawnGroup_SetCreationTick;
        case 12: return net_SpawnGroup_Unload;
        case 13: return net_SpawnGroup_LoadCompleted;
        case 14: return net_ReliableMessageEndMarker;
        case 15: return net_DebugOverlay;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<NET_Messages>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<NET_Messages>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<NET_Messages>() {
            public NET_Messages findValueByNumber(int number) {
              return NET_Messages.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.deadlock.proto.DeadlockMessageId.getDescriptor().getEnumTypes().get(0);
    }

    private static final NET_Messages[] VALUES = values();

    public static NET_Messages valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private NET_Messages(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:NET_Messages)
  }

  /**
   * Protobuf enum {@code CLC_Messages}
   */
  public enum CLC_Messages
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>clc_ClientInfo = 20;</code>
     */
    clc_ClientInfo(0, 20),
    /**
     * <code>clc_Move = 21;</code>
     */
    clc_Move(1, 21),
    /**
     * <code>clc_VoiceData = 22;</code>
     */
    clc_VoiceData(2, 22),
    /**
     * <code>clc_BaselineAck = 23;</code>
     */
    clc_BaselineAck(3, 23),
    /**
     * <code>clc_RespondCvarValue = 25;</code>
     */
    clc_RespondCvarValue(4, 25),
    /**
     * <code>clc_FileCRCCheck = 26;</code>
     */
    clc_FileCRCCheck(5, 26),
    /**
     * <code>clc_LoadingProgress = 27;</code>
     */
    clc_LoadingProgress(6, 27),
    /**
     * <code>clc_SplitPlayerConnect = 28;</code>
     */
    clc_SplitPlayerConnect(7, 28),
    /**
     * <code>clc_SplitPlayerDisconnect = 30;</code>
     */
    clc_SplitPlayerDisconnect(8, 30),
    /**
     * <code>clc_ServerStatus = 31;</code>
     */
    clc_ServerStatus(9, 31),
    /**
     * <code>clc_RequestPause = 33;</code>
     */
    clc_RequestPause(10, 33),
    /**
     * <code>clc_CmdKeyValues = 34;</code>
     */
    clc_CmdKeyValues(11, 34),
    /**
     * <code>clc_RconServerDetails = 35;</code>
     */
    clc_RconServerDetails(12, 35),
    /**
     * <code>clc_HltvReplay = 36;</code>
     */
    clc_HltvReplay(13, 36),
    /**
     * <code>clc_Diagnostic = 37;</code>
     */
    clc_Diagnostic(14, 37),
    ;

    /**
     * <code>clc_ClientInfo = 20;</code>
     */
    public static final int clc_ClientInfo_VALUE = 20;
    /**
     * <code>clc_Move = 21;</code>
     */
    public static final int clc_Move_VALUE = 21;
    /**
     * <code>clc_VoiceData = 22;</code>
     */
    public static final int clc_VoiceData_VALUE = 22;
    /**
     * <code>clc_BaselineAck = 23;</code>
     */
    public static final int clc_BaselineAck_VALUE = 23;
    /**
     * <code>clc_RespondCvarValue = 25;</code>
     */
    public static final int clc_RespondCvarValue_VALUE = 25;
    /**
     * <code>clc_FileCRCCheck = 26;</code>
     */
    public static final int clc_FileCRCCheck_VALUE = 26;
    /**
     * <code>clc_LoadingProgress = 27;</code>
     */
    public static final int clc_LoadingProgress_VALUE = 27;
    /**
     * <code>clc_SplitPlayerConnect = 28;</code>
     */
    public static final int clc_SplitPlayerConnect_VALUE = 28;
    /**
     * <code>clc_SplitPlayerDisconnect = 30;</code>
     */
    public static final int clc_SplitPlayerDisconnect_VALUE = 30;
    /**
     * <code>clc_ServerStatus = 31;</code>
     */
    public static final int clc_ServerStatus_VALUE = 31;
    /**
     * <code>clc_RequestPause = 33;</code>
     */
    public static final int clc_RequestPause_VALUE = 33;
    /**
     * <code>clc_CmdKeyValues = 34;</code>
     */
    public static final int clc_CmdKeyValues_VALUE = 34;
    /**
     * <code>clc_RconServerDetails = 35;</code>
     */
    public static final int clc_RconServerDetails_VALUE = 35;
    /**
     * <code>clc_HltvReplay = 36;</code>
     */
    public static final int clc_HltvReplay_VALUE = 36;
    /**
     * <code>clc_Diagnostic = 37;</code>
     */
    public static final int clc_Diagnostic_VALUE = 37;


    public final int getNumber() { return value; }

    public static CLC_Messages valueOf(int value) {
      switch (value) {
        case 20: return clc_ClientInfo;
        case 21: return clc_Move;
        case 22: return clc_VoiceData;
        case 23: return clc_BaselineAck;
        case 25: return clc_RespondCvarValue;
        case 26: return clc_FileCRCCheck;
        case 27: return clc_LoadingProgress;
        case 28: return clc_SplitPlayerConnect;
        case 30: return clc_SplitPlayerDisconnect;
        case 31: return clc_ServerStatus;
        case 33: return clc_RequestPause;
        case 34: return clc_CmdKeyValues;
        case 35: return clc_RconServerDetails;
        case 36: return clc_HltvReplay;
        case 37: return clc_Diagnostic;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CLC_Messages>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<CLC_Messages>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CLC_Messages>() {
            public CLC_Messages findValueByNumber(int number) {
              return CLC_Messages.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.deadlock.proto.DeadlockMessageId.getDescriptor().getEnumTypes().get(1);
    }

    private static final CLC_Messages[] VALUES = values();

    public static CLC_Messages valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private CLC_Messages(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:CLC_Messages)
  }

  /**
   * Protobuf enum {@code SVC_Messages}
   */
  public enum SVC_Messages
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>svc_ServerInfo = 40;</code>
     */
    svc_ServerInfo(0, 40),
    /**
     * <code>svc_FlattenedSerializer = 41;</code>
     */
    svc_FlattenedSerializer(1, 41),
    /**
     * <code>svc_ClassInfo = 42;</code>
     */
    svc_ClassInfo(2, 42),
    /**
     * <code>svc_SetPause = 43;</code>
     */
    svc_SetPause(3, 43),
    /**
     * <code>svc_CreateStringTable = 44;</code>
     */
    svc_CreateStringTable(4, 44),
    /**
     * <code>svc_UpdateStringTable = 45;</code>
     */
    svc_UpdateStringTable(5, 45),
    /**
     * <code>svc_VoiceInit = 46;</code>
     */
    svc_VoiceInit(6, 46),
    /**
     * <code>svc_VoiceData = 47;</code>
     */
    svc_VoiceData(7, 47),
    /**
     * <code>svc_Print = 48;</code>
     */
    svc_Print(8, 48),
    /**
     * <code>svc_Sounds = 49;</code>
     */
    svc_Sounds(9, 49),
    /**
     * <code>svc_SetView = 50;</code>
     */
    svc_SetView(10, 50),
    /**
     * <code>svc_ClearAllStringTables = 51;</code>
     */
    svc_ClearAllStringTables(11, 51),
    /**
     * <code>svc_CmdKeyValues = 52;</code>
     */
    svc_CmdKeyValues(12, 52),
    /**
     * <code>svc_BSPDecal = 53;</code>
     */
    svc_BSPDecal(13, 53),
    /**
     * <code>svc_SplitScreen = 54;</code>
     */
    svc_SplitScreen(14, 54),
    /**
     * <code>svc_PacketEntities = 55;</code>
     */
    svc_PacketEntities(15, 55),
    /**
     * <code>svc_Prefetch = 56;</code>
     */
    svc_Prefetch(16, 56),
    /**
     * <code>svc_Menu = 57;</code>
     */
    svc_Menu(17, 57),
    /**
     * <code>svc_GetCvarValue = 58;</code>
     */
    svc_GetCvarValue(18, 58),
    /**
     * <code>svc_StopSound = 59;</code>
     */
    svc_StopSound(19, 59),
    /**
     * <code>svc_PeerList = 60;</code>
     */
    svc_PeerList(20, 60),
    /**
     * <code>svc_PacketReliable = 61;</code>
     */
    svc_PacketReliable(21, 61),
    /**
     * <code>svc_HLTVStatus = 62;</code>
     */
    svc_HLTVStatus(22, 62),
    /**
     * <code>svc_ServerSteamID = 63;</code>
     */
    svc_ServerSteamID(23, 63),
    /**
     * <code>svc_FullFrameSplit = 70;</code>
     */
    svc_FullFrameSplit(24, 70),
    /**
     * <code>svc_RconServerDetails = 71;</code>
     */
    svc_RconServerDetails(25, 71),
    /**
     * <code>svc_UserMessage = 72;</code>
     */
    svc_UserMessage(26, 72),
    /**
     * <code>svc_Broadcast_Command = 74;</code>
     */
    svc_Broadcast_Command(27, 74),
    /**
     * <code>svc_HltvFixupOperatorStatus = 75;</code>
     */
    svc_HltvFixupOperatorStatus(28, 75),
    /**
     * <code>svc_UserCmds = 76;</code>
     */
    svc_UserCmds(29, 76),
    ;

    /**
     * <code>svc_ServerInfo = 40;</code>
     */
    public static final int svc_ServerInfo_VALUE = 40;
    /**
     * <code>svc_FlattenedSerializer = 41;</code>
     */
    public static final int svc_FlattenedSerializer_VALUE = 41;
    /**
     * <code>svc_ClassInfo = 42;</code>
     */
    public static final int svc_ClassInfo_VALUE = 42;
    /**
     * <code>svc_SetPause = 43;</code>
     */
    public static final int svc_SetPause_VALUE = 43;
    /**
     * <code>svc_CreateStringTable = 44;</code>
     */
    public static final int svc_CreateStringTable_VALUE = 44;
    /**
     * <code>svc_UpdateStringTable = 45;</code>
     */
    public static final int svc_UpdateStringTable_VALUE = 45;
    /**
     * <code>svc_VoiceInit = 46;</code>
     */
    public static final int svc_VoiceInit_VALUE = 46;
    /**
     * <code>svc_VoiceData = 47;</code>
     */
    public static final int svc_VoiceData_VALUE = 47;
    /**
     * <code>svc_Print = 48;</code>
     */
    public static final int svc_Print_VALUE = 48;
    /**
     * <code>svc_Sounds = 49;</code>
     */
    public static final int svc_Sounds_VALUE = 49;
    /**
     * <code>svc_SetView = 50;</code>
     */
    public static final int svc_SetView_VALUE = 50;
    /**
     * <code>svc_ClearAllStringTables = 51;</code>
     */
    public static final int svc_ClearAllStringTables_VALUE = 51;
    /**
     * <code>svc_CmdKeyValues = 52;</code>
     */
    public static final int svc_CmdKeyValues_VALUE = 52;
    /**
     * <code>svc_BSPDecal = 53;</code>
     */
    public static final int svc_BSPDecal_VALUE = 53;
    /**
     * <code>svc_SplitScreen = 54;</code>
     */
    public static final int svc_SplitScreen_VALUE = 54;
    /**
     * <code>svc_PacketEntities = 55;</code>
     */
    public static final int svc_PacketEntities_VALUE = 55;
    /**
     * <code>svc_Prefetch = 56;</code>
     */
    public static final int svc_Prefetch_VALUE = 56;
    /**
     * <code>svc_Menu = 57;</code>
     */
    public static final int svc_Menu_VALUE = 57;
    /**
     * <code>svc_GetCvarValue = 58;</code>
     */
    public static final int svc_GetCvarValue_VALUE = 58;
    /**
     * <code>svc_StopSound = 59;</code>
     */
    public static final int svc_StopSound_VALUE = 59;
    /**
     * <code>svc_PeerList = 60;</code>
     */
    public static final int svc_PeerList_VALUE = 60;
    /**
     * <code>svc_PacketReliable = 61;</code>
     */
    public static final int svc_PacketReliable_VALUE = 61;
    /**
     * <code>svc_HLTVStatus = 62;</code>
     */
    public static final int svc_HLTVStatus_VALUE = 62;
    /**
     * <code>svc_ServerSteamID = 63;</code>
     */
    public static final int svc_ServerSteamID_VALUE = 63;
    /**
     * <code>svc_FullFrameSplit = 70;</code>
     */
    public static final int svc_FullFrameSplit_VALUE = 70;
    /**
     * <code>svc_RconServerDetails = 71;</code>
     */
    public static final int svc_RconServerDetails_VALUE = 71;
    /**
     * <code>svc_UserMessage = 72;</code>
     */
    public static final int svc_UserMessage_VALUE = 72;
    /**
     * <code>svc_Broadcast_Command = 74;</code>
     */
    public static final int svc_Broadcast_Command_VALUE = 74;
    /**
     * <code>svc_HltvFixupOperatorStatus = 75;</code>
     */
    public static final int svc_HltvFixupOperatorStatus_VALUE = 75;
    /**
     * <code>svc_UserCmds = 76;</code>
     */
    public static final int svc_UserCmds_VALUE = 76;


    public final int getNumber() { return value; }

    public static SVC_Messages valueOf(int value) {
      switch (value) {
        case 40: return svc_ServerInfo;
        case 41: return svc_FlattenedSerializer;
        case 42: return svc_ClassInfo;
        case 43: return svc_SetPause;
        case 44: return svc_CreateStringTable;
        case 45: return svc_UpdateStringTable;
        case 46: return svc_VoiceInit;
        case 47: return svc_VoiceData;
        case 48: return svc_Print;
        case 49: return svc_Sounds;
        case 50: return svc_SetView;
        case 51: return svc_ClearAllStringTables;
        case 52: return svc_CmdKeyValues;
        case 53: return svc_BSPDecal;
        case 54: return svc_SplitScreen;
        case 55: return svc_PacketEntities;
        case 56: return svc_Prefetch;
        case 57: return svc_Menu;
        case 58: return svc_GetCvarValue;
        case 59: return svc_StopSound;
        case 60: return svc_PeerList;
        case 61: return svc_PacketReliable;
        case 62: return svc_HLTVStatus;
        case 63: return svc_ServerSteamID;
        case 70: return svc_FullFrameSplit;
        case 71: return svc_RconServerDetails;
        case 72: return svc_UserMessage;
        case 74: return svc_Broadcast_Command;
        case 75: return svc_HltvFixupOperatorStatus;
        case 76: return svc_UserCmds;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SVC_Messages>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<SVC_Messages>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SVC_Messages>() {
            public SVC_Messages findValueByNumber(int number) {
              return SVC_Messages.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.deadlock.proto.DeadlockMessageId.getDescriptor().getEnumTypes().get(2);
    }

    private static final SVC_Messages[] VALUES = values();

    public static SVC_Messages valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private SVC_Messages(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:SVC_Messages)
  }

  /**
   * Protobuf enum {@code EBaseUserMessages}
   */
  public enum EBaseUserMessages
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>UM_AchievementEvent = 101;</code>
     */
    UM_AchievementEvent(0, 101),
    /**
     * <code>UM_CloseCaption = 102;</code>
     */
    UM_CloseCaption(1, 102),
    /**
     * <code>UM_CloseCaptionDirect = 103;</code>
     */
    UM_CloseCaptionDirect(2, 103),
    /**
     * <code>UM_CurrentTimescale = 104;</code>
     */
    UM_CurrentTimescale(3, 104),
    /**
     * <code>UM_DesiredTimescale = 105;</code>
     */
    UM_DesiredTimescale(4, 105),
    /**
     * <code>UM_Fade = 106;</code>
     */
    UM_Fade(5, 106),
    /**
     * <code>UM_GameTitle = 107;</code>
     */
    UM_GameTitle(6, 107),
    /**
     * <code>UM_HudMsg = 110;</code>
     */
    UM_HudMsg(7, 110),
    /**
     * <code>UM_HudText = 111;</code>
     */
    UM_HudText(8, 111),
    /**
     * <code>UM_ColoredText = 113;</code>
     */
    UM_ColoredText(9, 113),
    /**
     * <code>UM_RequestState = 114;</code>
     */
    UM_RequestState(10, 114),
    /**
     * <code>UM_ResetHUD = 115;</code>
     */
    UM_ResetHUD(11, 115),
    /**
     * <code>UM_Rumble = 116;</code>
     */
    UM_Rumble(12, 116),
    /**
     * <code>UM_SayText = 117;</code>
     */
    UM_SayText(13, 117),
    /**
     * <code>UM_SayText2 = 118;</code>
     */
    UM_SayText2(14, 118),
    /**
     * <code>UM_SayTextChannel = 119;</code>
     */
    UM_SayTextChannel(15, 119),
    /**
     * <code>UM_Shake = 120;</code>
     */
    UM_Shake(16, 120),
    /**
     * <code>UM_ShakeDir = 121;</code>
     */
    UM_ShakeDir(17, 121),
    /**
     * <code>UM_WaterShake = 122;</code>
     */
    UM_WaterShake(18, 122),
    /**
     * <code>UM_TextMsg = 124;</code>
     */
    UM_TextMsg(19, 124),
    /**
     * <code>UM_ScreenTilt = 125;</code>
     */
    UM_ScreenTilt(20, 125),
    /**
     * <code>UM_VoiceMask = 128;</code>
     */
    UM_VoiceMask(21, 128),
    /**
     * <code>UM_SendAudio = 130;</code>
     */
    UM_SendAudio(22, 130),
    /**
     * <code>UM_ItemPickup = 131;</code>
     */
    UM_ItemPickup(23, 131),
    /**
     * <code>UM_AmmoDenied = 132;</code>
     */
    UM_AmmoDenied(24, 132),
    /**
     * <code>UM_ShowMenu = 134;</code>
     */
    UM_ShowMenu(25, 134),
    /**
     * <code>UM_CreditsMsg = 135;</code>
     */
    UM_CreditsMsg(26, 135),
    /**
     * <code>UM_CloseCaptionPlaceholder = 142;</code>
     */
    UM_CloseCaptionPlaceholder(27, 142),
    /**
     * <code>UM_CameraTransition = 143;</code>
     */
    UM_CameraTransition(28, 143),
    /**
     * <code>UM_AudioParameter = 144;</code>
     */
    UM_AudioParameter(29, 144),
    /**
     * <code>UM_ParticleManager = 145;</code>
     */
    UM_ParticleManager(30, 145),
    /**
     * <code>UM_HudError = 146;</code>
     */
    UM_HudError(31, 146),
    /**
     * <code>UM_CustomGameEvent = 148;</code>
     */
    UM_CustomGameEvent(32, 148),
    /**
     * <code>UM_AnimGraphUpdate = 149;</code>
     */
    UM_AnimGraphUpdate(33, 149),
    /**
     * <code>UM_HapticsManagerPulse = 150;</code>
     */
    UM_HapticsManagerPulse(34, 150),
    /**
     * <code>UM_HapticsManagerEffect = 151;</code>
     */
    UM_HapticsManagerEffect(35, 151),
    /**
     * <code>UM_CommandQueueState = 152;</code>
     */
    UM_CommandQueueState(36, 152),
    /**
     * <code>UM_UpdateCssClasses = 153;</code>
     */
    UM_UpdateCssClasses(37, 153),
    /**
     * <code>UM_ServerFrameTime = 154;</code>
     */
    UM_ServerFrameTime(38, 154),
    /**
     * <code>UM_LagCompensationError = 155;</code>
     */
    UM_LagCompensationError(39, 155),
    /**
     * <code>UM_RequestDllStatus = 156;</code>
     */
    UM_RequestDllStatus(40, 156),
    /**
     * <code>UM_RequestUtilAction = 157;</code>
     */
    UM_RequestUtilAction(41, 157),
    /**
     * <code>UM_UtilActionResponse = 158;</code>
     */
    UM_UtilActionResponse(42, 158),
    /**
     * <code>UM_DllStatusResponse = 159;</code>
     */
    UM_DllStatusResponse(43, 159),
    /**
     * <code>UM_RequestInventory = 160;</code>
     */
    UM_RequestInventory(44, 160),
    /**
     * <code>UM_InventoryResponse = 161;</code>
     */
    UM_InventoryResponse(45, 161),
    /**
     * <code>UM_RequestDiagnostic = 162;</code>
     */
    UM_RequestDiagnostic(46, 162),
    /**
     * <code>UM_DiagnosticResponse = 163;</code>
     */
    UM_DiagnosticResponse(47, 163),
    /**
     * <code>UM_ExtraUserData = 164;</code>
     */
    UM_ExtraUserData(48, 164),
    /**
     * <code>UM_NotifyResponseFound = 165;</code>
     */
    UM_NotifyResponseFound(49, 165),
    /**
     * <code>UM_PlayResponseConditional = 166;</code>
     */
    UM_PlayResponseConditional(50, 166),
    /**
     * <code>UM_MAX_BASE = 200;</code>
     */
    UM_MAX_BASE(51, 200),
    ;

    /**
     * <code>UM_AchievementEvent = 101;</code>
     */
    public static final int UM_AchievementEvent_VALUE = 101;
    /**
     * <code>UM_CloseCaption = 102;</code>
     */
    public static final int UM_CloseCaption_VALUE = 102;
    /**
     * <code>UM_CloseCaptionDirect = 103;</code>
     */
    public static final int UM_CloseCaptionDirect_VALUE = 103;
    /**
     * <code>UM_CurrentTimescale = 104;</code>
     */
    public static final int UM_CurrentTimescale_VALUE = 104;
    /**
     * <code>UM_DesiredTimescale = 105;</code>
     */
    public static final int UM_DesiredTimescale_VALUE = 105;
    /**
     * <code>UM_Fade = 106;</code>
     */
    public static final int UM_Fade_VALUE = 106;
    /**
     * <code>UM_GameTitle = 107;</code>
     */
    public static final int UM_GameTitle_VALUE = 107;
    /**
     * <code>UM_HudMsg = 110;</code>
     */
    public static final int UM_HudMsg_VALUE = 110;
    /**
     * <code>UM_HudText = 111;</code>
     */
    public static final int UM_HudText_VALUE = 111;
    /**
     * <code>UM_ColoredText = 113;</code>
     */
    public static final int UM_ColoredText_VALUE = 113;
    /**
     * <code>UM_RequestState = 114;</code>
     */
    public static final int UM_RequestState_VALUE = 114;
    /**
     * <code>UM_ResetHUD = 115;</code>
     */
    public static final int UM_ResetHUD_VALUE = 115;
    /**
     * <code>UM_Rumble = 116;</code>
     */
    public static final int UM_Rumble_VALUE = 116;
    /**
     * <code>UM_SayText = 117;</code>
     */
    public static final int UM_SayText_VALUE = 117;
    /**
     * <code>UM_SayText2 = 118;</code>
     */
    public static final int UM_SayText2_VALUE = 118;
    /**
     * <code>UM_SayTextChannel = 119;</code>
     */
    public static final int UM_SayTextChannel_VALUE = 119;
    /**
     * <code>UM_Shake = 120;</code>
     */
    public static final int UM_Shake_VALUE = 120;
    /**
     * <code>UM_ShakeDir = 121;</code>
     */
    public static final int UM_ShakeDir_VALUE = 121;
    /**
     * <code>UM_WaterShake = 122;</code>
     */
    public static final int UM_WaterShake_VALUE = 122;
    /**
     * <code>UM_TextMsg = 124;</code>
     */
    public static final int UM_TextMsg_VALUE = 124;
    /**
     * <code>UM_ScreenTilt = 125;</code>
     */
    public static final int UM_ScreenTilt_VALUE = 125;
    /**
     * <code>UM_VoiceMask = 128;</code>
     */
    public static final int UM_VoiceMask_VALUE = 128;
    /**
     * <code>UM_SendAudio = 130;</code>
     */
    public static final int UM_SendAudio_VALUE = 130;
    /**
     * <code>UM_ItemPickup = 131;</code>
     */
    public static final int UM_ItemPickup_VALUE = 131;
    /**
     * <code>UM_AmmoDenied = 132;</code>
     */
    public static final int UM_AmmoDenied_VALUE = 132;
    /**
     * <code>UM_ShowMenu = 134;</code>
     */
    public static final int UM_ShowMenu_VALUE = 134;
    /**
     * <code>UM_CreditsMsg = 135;</code>
     */
    public static final int UM_CreditsMsg_VALUE = 135;
    /**
     * <code>UM_CloseCaptionPlaceholder = 142;</code>
     */
    public static final int UM_CloseCaptionPlaceholder_VALUE = 142;
    /**
     * <code>UM_CameraTransition = 143;</code>
     */
    public static final int UM_CameraTransition_VALUE = 143;
    /**
     * <code>UM_AudioParameter = 144;</code>
     */
    public static final int UM_AudioParameter_VALUE = 144;
    /**
     * <code>UM_ParticleManager = 145;</code>
     */
    public static final int UM_ParticleManager_VALUE = 145;
    /**
     * <code>UM_HudError = 146;</code>
     */
    public static final int UM_HudError_VALUE = 146;
    /**
     * <code>UM_CustomGameEvent = 148;</code>
     */
    public static final int UM_CustomGameEvent_VALUE = 148;
    /**
     * <code>UM_AnimGraphUpdate = 149;</code>
     */
    public static final int UM_AnimGraphUpdate_VALUE = 149;
    /**
     * <code>UM_HapticsManagerPulse = 150;</code>
     */
    public static final int UM_HapticsManagerPulse_VALUE = 150;
    /**
     * <code>UM_HapticsManagerEffect = 151;</code>
     */
    public static final int UM_HapticsManagerEffect_VALUE = 151;
    /**
     * <code>UM_CommandQueueState = 152;</code>
     */
    public static final int UM_CommandQueueState_VALUE = 152;
    /**
     * <code>UM_UpdateCssClasses = 153;</code>
     */
    public static final int UM_UpdateCssClasses_VALUE = 153;
    /**
     * <code>UM_ServerFrameTime = 154;</code>
     */
    public static final int UM_ServerFrameTime_VALUE = 154;
    /**
     * <code>UM_LagCompensationError = 155;</code>
     */
    public static final int UM_LagCompensationError_VALUE = 155;
    /**
     * <code>UM_RequestDllStatus = 156;</code>
     */
    public static final int UM_RequestDllStatus_VALUE = 156;
    /**
     * <code>UM_RequestUtilAction = 157;</code>
     */
    public static final int UM_RequestUtilAction_VALUE = 157;
    /**
     * <code>UM_UtilActionResponse = 158;</code>
     */
    public static final int UM_UtilActionResponse_VALUE = 158;
    /**
     * <code>UM_DllStatusResponse = 159;</code>
     */
    public static final int UM_DllStatusResponse_VALUE = 159;
    /**
     * <code>UM_RequestInventory = 160;</code>
     */
    public static final int UM_RequestInventory_VALUE = 160;
    /**
     * <code>UM_InventoryResponse = 161;</code>
     */
    public static final int UM_InventoryResponse_VALUE = 161;
    /**
     * <code>UM_RequestDiagnostic = 162;</code>
     */
    public static final int UM_RequestDiagnostic_VALUE = 162;
    /**
     * <code>UM_DiagnosticResponse = 163;</code>
     */
    public static final int UM_DiagnosticResponse_VALUE = 163;
    /**
     * <code>UM_ExtraUserData = 164;</code>
     */
    public static final int UM_ExtraUserData_VALUE = 164;
    /**
     * <code>UM_NotifyResponseFound = 165;</code>
     */
    public static final int UM_NotifyResponseFound_VALUE = 165;
    /**
     * <code>UM_PlayResponseConditional = 166;</code>
     */
    public static final int UM_PlayResponseConditional_VALUE = 166;
    /**
     * <code>UM_MAX_BASE = 200;</code>
     */
    public static final int UM_MAX_BASE_VALUE = 200;


    public final int getNumber() { return value; }

    public static EBaseUserMessages valueOf(int value) {
      switch (value) {
        case 101: return UM_AchievementEvent;
        case 102: return UM_CloseCaption;
        case 103: return UM_CloseCaptionDirect;
        case 104: return UM_CurrentTimescale;
        case 105: return UM_DesiredTimescale;
        case 106: return UM_Fade;
        case 107: return UM_GameTitle;
        case 110: return UM_HudMsg;
        case 111: return UM_HudText;
        case 113: return UM_ColoredText;
        case 114: return UM_RequestState;
        case 115: return UM_ResetHUD;
        case 116: return UM_Rumble;
        case 117: return UM_SayText;
        case 118: return UM_SayText2;
        case 119: return UM_SayTextChannel;
        case 120: return UM_Shake;
        case 121: return UM_ShakeDir;
        case 122: return UM_WaterShake;
        case 124: return UM_TextMsg;
        case 125: return UM_ScreenTilt;
        case 128: return UM_VoiceMask;
        case 130: return UM_SendAudio;
        case 131: return UM_ItemPickup;
        case 132: return UM_AmmoDenied;
        case 134: return UM_ShowMenu;
        case 135: return UM_CreditsMsg;
        case 142: return UM_CloseCaptionPlaceholder;
        case 143: return UM_CameraTransition;
        case 144: return UM_AudioParameter;
        case 145: return UM_ParticleManager;
        case 146: return UM_HudError;
        case 148: return UM_CustomGameEvent;
        case 149: return UM_AnimGraphUpdate;
        case 150: return UM_HapticsManagerPulse;
        case 151: return UM_HapticsManagerEffect;
        case 152: return UM_CommandQueueState;
        case 153: return UM_UpdateCssClasses;
        case 154: return UM_ServerFrameTime;
        case 155: return UM_LagCompensationError;
        case 156: return UM_RequestDllStatus;
        case 157: return UM_RequestUtilAction;
        case 158: return UM_UtilActionResponse;
        case 159: return UM_DllStatusResponse;
        case 160: return UM_RequestInventory;
        case 161: return UM_InventoryResponse;
        case 162: return UM_RequestDiagnostic;
        case 163: return UM_DiagnosticResponse;
        case 164: return UM_ExtraUserData;
        case 165: return UM_NotifyResponseFound;
        case 166: return UM_PlayResponseConditional;
        case 200: return UM_MAX_BASE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EBaseUserMessages>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EBaseUserMessages>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EBaseUserMessages>() {
            public EBaseUserMessages findValueByNumber(int number) {
              return EBaseUserMessages.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.deadlock.proto.DeadlockMessageId.getDescriptor().getEnumTypes().get(3);
    }

    private static final EBaseUserMessages[] VALUES = values();

    public static EBaseUserMessages valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private EBaseUserMessages(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EBaseUserMessages)
  }

  /**
   * Protobuf enum {@code EBaseEntityMessages}
   */
  public enum EBaseEntityMessages
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EM_PlayJingle = 136;</code>
     */
    EM_PlayJingle(0, 136),
    /**
     * <code>EM_ScreenOverlay = 137;</code>
     */
    EM_ScreenOverlay(1, 137),
    /**
     * <code>EM_RemoveAllDecals = 138;</code>
     */
    EM_RemoveAllDecals(2, 138),
    /**
     * <code>EM_PropagateForce = 139;</code>
     */
    EM_PropagateForce(3, 139),
    /**
     * <code>EM_DoSpark = 140;</code>
     */
    EM_DoSpark(4, 140),
    /**
     * <code>EM_FixAngle = 141;</code>
     */
    EM_FixAngle(5, 141),
    ;

    /**
     * <code>EM_PlayJingle = 136;</code>
     */
    public static final int EM_PlayJingle_VALUE = 136;
    /**
     * <code>EM_ScreenOverlay = 137;</code>
     */
    public static final int EM_ScreenOverlay_VALUE = 137;
    /**
     * <code>EM_RemoveAllDecals = 138;</code>
     */
    public static final int EM_RemoveAllDecals_VALUE = 138;
    /**
     * <code>EM_PropagateForce = 139;</code>
     */
    public static final int EM_PropagateForce_VALUE = 139;
    /**
     * <code>EM_DoSpark = 140;</code>
     */
    public static final int EM_DoSpark_VALUE = 140;
    /**
     * <code>EM_FixAngle = 141;</code>
     */
    public static final int EM_FixAngle_VALUE = 141;


    public final int getNumber() { return value; }

    public static EBaseEntityMessages valueOf(int value) {
      switch (value) {
        case 136: return EM_PlayJingle;
        case 137: return EM_ScreenOverlay;
        case 138: return EM_RemoveAllDecals;
        case 139: return EM_PropagateForce;
        case 140: return EM_DoSpark;
        case 141: return EM_FixAngle;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EBaseEntityMessages>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EBaseEntityMessages>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EBaseEntityMessages>() {
            public EBaseEntityMessages findValueByNumber(int number) {
              return EBaseEntityMessages.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.deadlock.proto.DeadlockMessageId.getDescriptor().getEnumTypes().get(4);
    }

    private static final EBaseEntityMessages[] VALUES = values();

    public static EBaseEntityMessages valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private EBaseEntityMessages(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:EBaseEntityMessages)
  }

  /**
   * Protobuf enum {@code CitadelUserMessageIds}
   */
  public enum CitadelUserMessageIds
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_EUserMsg_Damage = 300;</code>
     */
    k_EUserMsg_Damage(0, 300),
    /**
     * <code>k_EUserMsg_MapPing = 303;</code>
     */
    k_EUserMsg_MapPing(1, 303),
    /**
     * <code>k_EUserMsg_TeamRewards = 304;</code>
     */
    k_EUserMsg_TeamRewards(2, 304),
    /**
     * <code>k_EUserMsg_AbilityFailed = 306;</code>
     */
    k_EUserMsg_AbilityFailed(3, 306),
    /**
     * <code>k_EUserMsg_TriggerDamageFlash = 308;</code>
     */
    k_EUserMsg_TriggerDamageFlash(4, 308),
    /**
     * <code>k_EUserMsg_AbilitiesChanged = 309;</code>
     */
    k_EUserMsg_AbilitiesChanged(5, 309),
    /**
     * <code>k_EUserMsg_RecentDamageSummary = 310;</code>
     */
    k_EUserMsg_RecentDamageSummary(6, 310),
    /**
     * <code>k_EUserMsg_SpectatorTeamChanged = 311;</code>
     */
    k_EUserMsg_SpectatorTeamChanged(7, 311),
    /**
     * <code>k_EUserMsg_ChatWheel = 312;</code>
     */
    k_EUserMsg_ChatWheel(8, 312),
    /**
     * <code>k_EUserMsg_GoldHistory = 313;</code>
     */
    k_EUserMsg_GoldHistory(9, 313),
    /**
     * <code>k_EUserMsg_ChatMsg = 314;</code>
     */
    k_EUserMsg_ChatMsg(10, 314),
    /**
     * <code>k_EUserMsg_QuickResponse = 315;</code>
     */
    k_EUserMsg_QuickResponse(11, 315),
    /**
     * <code>k_EUserMsg_PostMatchDetails = 316;</code>
     */
    k_EUserMsg_PostMatchDetails(12, 316),
    /**
     * <code>k_EUserMsg_ChatEvent = 317;</code>
     */
    k_EUserMsg_ChatEvent(13, 317),
    /**
     * <code>k_EUserMsg_AbilityInterrupted = 318;</code>
     */
    k_EUserMsg_AbilityInterrupted(14, 318),
    /**
     * <code>k_EUserMsg_HeroKilled = 319;</code>
     */
    k_EUserMsg_HeroKilled(15, 319),
    /**
     * <code>k_EUserMsg_ReturnIdol = 320;</code>
     */
    k_EUserMsg_ReturnIdol(16, 320),
    /**
     * <code>k_EUserMsg_SetClientCameraAngles = 321;</code>
     */
    k_EUserMsg_SetClientCameraAngles(17, 321),
    /**
     * <code>k_EUserMsg_MapLine = 322;</code>
     */
    k_EUserMsg_MapLine(18, 322),
    /**
     * <code>k_EUserMsg_BulletHit = 323;</code>
     */
    k_EUserMsg_BulletHit(19, 323),
    /**
     * <code>k_EUserMsg_ObjectiveMask = 324;</code>
     */
    k_EUserMsg_ObjectiveMask(20, 324),
    /**
     * <code>k_EUserMsg_ModifierApplied = 325;</code>
     */
    k_EUserMsg_ModifierApplied(21, 325),
    /**
     * <code>k_EUserMsg_CameraController = 326;</code>
     */
    k_EUserMsg_CameraController(22, 326),
    /**
     * <code>k_EUserMsg_AuraModifierApplied = 327;</code>
     */
    k_EUserMsg_AuraModifierApplied(23, 327),
    /**
     * <code>k_EUserMsg_ObstructedShotFired = 329;</code>
     */
    k_EUserMsg_ObstructedShotFired(24, 329),
    /**
     * <code>k_EUserMsg_AbilityLateFailure = 330;</code>
     */
    k_EUserMsg_AbilityLateFailure(25, 330),
    /**
     * <code>k_EUserMsg_AbilityPing = 331;</code>
     */
    k_EUserMsg_AbilityPing(26, 331),
    /**
     * <code>k_EUserMsg_PostProcessingAnim = 332;</code>
     */
    k_EUserMsg_PostProcessingAnim(27, 332),
    /**
     * <code>k_EUserMsg_DeathReplayData = 333;</code>
     */
    k_EUserMsg_DeathReplayData(28, 333),
    /**
     * <code>k_EUserMsg_PlayerLifetimeStatInfo = 334;</code>
     */
    k_EUserMsg_PlayerLifetimeStatInfo(29, 334),
    /**
     * <code>k_EUserMsg_ForceShopClosed = 336;</code>
     */
    k_EUserMsg_ForceShopClosed(30, 336),
    /**
     * <code>k_EUserMsg_StaminaDrained = 337;</code>
     */
    k_EUserMsg_StaminaDrained(31, 337),
    /**
     * <code>k_EUserMsg_AbilityNotify = 338;</code>
     */
    k_EUserMsg_AbilityNotify(32, 338),
    /**
     * <code>k_EUserMsg_GetDamageStatsResponse = 339;</code>
     */
    k_EUserMsg_GetDamageStatsResponse(33, 339),
    /**
     * <code>k_EUserMsg_ParticipantStartSoundEvent = 340;</code>
     */
    k_EUserMsg_ParticipantStartSoundEvent(34, 340),
    /**
     * <code>k_EUserMsg_ParticipantStopSoundEvent = 341;</code>
     */
    k_EUserMsg_ParticipantStopSoundEvent(35, 341),
    /**
     * <code>k_EUserMsg_ParticipantStopSoundEventHash = 342;</code>
     */
    k_EUserMsg_ParticipantStopSoundEventHash(36, 342),
    /**
     * <code>k_EUserMsg_ParticipantSetSoundEventParams = 343;</code>
     */
    k_EUserMsg_ParticipantSetSoundEventParams(37, 343),
    /**
     * <code>k_EUserMsg_ParticipantSetLibraryStackFields = 344;</code>
     */
    k_EUserMsg_ParticipantSetLibraryStackFields(38, 344),
    /**
     * <code>k_EUserMsg_CurrencyChanged = 345;</code>
     */
    k_EUserMsg_CurrencyChanged(39, 345),
    /**
     * <code>k_EUserMsg_GameOver = 346;</code>
     */
    k_EUserMsg_GameOver(40, 346),
    /**
     * <code>k_EUserMsg_BossKilled = 347;</code>
     */
    k_EUserMsg_BossKilled(41, 347),
    ;

    /**
     * <code>k_EUserMsg_Damage = 300;</code>
     */
    public static final int k_EUserMsg_Damage_VALUE = 300;
    /**
     * <code>k_EUserMsg_MapPing = 303;</code>
     */
    public static final int k_EUserMsg_MapPing_VALUE = 303;
    /**
     * <code>k_EUserMsg_TeamRewards = 304;</code>
     */
    public static final int k_EUserMsg_TeamRewards_VALUE = 304;
    /**
     * <code>k_EUserMsg_AbilityFailed = 306;</code>
     */
    public static final int k_EUserMsg_AbilityFailed_VALUE = 306;
    /**
     * <code>k_EUserMsg_TriggerDamageFlash = 308;</code>
     */
    public static final int k_EUserMsg_TriggerDamageFlash_VALUE = 308;
    /**
     * <code>k_EUserMsg_AbilitiesChanged = 309;</code>
     */
    public static final int k_EUserMsg_AbilitiesChanged_VALUE = 309;
    /**
     * <code>k_EUserMsg_RecentDamageSummary = 310;</code>
     */
    public static final int k_EUserMsg_RecentDamageSummary_VALUE = 310;
    /**
     * <code>k_EUserMsg_SpectatorTeamChanged = 311;</code>
     */
    public static final int k_EUserMsg_SpectatorTeamChanged_VALUE = 311;
    /**
     * <code>k_EUserMsg_ChatWheel = 312;</code>
     */
    public static final int k_EUserMsg_ChatWheel_VALUE = 312;
    /**
     * <code>k_EUserMsg_GoldHistory = 313;</code>
     */
    public static final int k_EUserMsg_GoldHistory_VALUE = 313;
    /**
     * <code>k_EUserMsg_ChatMsg = 314;</code>
     */
    public static final int k_EUserMsg_ChatMsg_VALUE = 314;
    /**
     * <code>k_EUserMsg_QuickResponse = 315;</code>
     */
    public static final int k_EUserMsg_QuickResponse_VALUE = 315;
    /**
     * <code>k_EUserMsg_PostMatchDetails = 316;</code>
     */
    public static final int k_EUserMsg_PostMatchDetails_VALUE = 316;
    /**
     * <code>k_EUserMsg_ChatEvent = 317;</code>
     */
    public static final int k_EUserMsg_ChatEvent_VALUE = 317;
    /**
     * <code>k_EUserMsg_AbilityInterrupted = 318;</code>
     */
    public static final int k_EUserMsg_AbilityInterrupted_VALUE = 318;
    /**
     * <code>k_EUserMsg_HeroKilled = 319;</code>
     */
    public static final int k_EUserMsg_HeroKilled_VALUE = 319;
    /**
     * <code>k_EUserMsg_ReturnIdol = 320;</code>
     */
    public static final int k_EUserMsg_ReturnIdol_VALUE = 320;
    /**
     * <code>k_EUserMsg_SetClientCameraAngles = 321;</code>
     */
    public static final int k_EUserMsg_SetClientCameraAngles_VALUE = 321;
    /**
     * <code>k_EUserMsg_MapLine = 322;</code>
     */
    public static final int k_EUserMsg_MapLine_VALUE = 322;
    /**
     * <code>k_EUserMsg_BulletHit = 323;</code>
     */
    public static final int k_EUserMsg_BulletHit_VALUE = 323;
    /**
     * <code>k_EUserMsg_ObjectiveMask = 324;</code>
     */
    public static final int k_EUserMsg_ObjectiveMask_VALUE = 324;
    /**
     * <code>k_EUserMsg_ModifierApplied = 325;</code>
     */
    public static final int k_EUserMsg_ModifierApplied_VALUE = 325;
    /**
     * <code>k_EUserMsg_CameraController = 326;</code>
     */
    public static final int k_EUserMsg_CameraController_VALUE = 326;
    /**
     * <code>k_EUserMsg_AuraModifierApplied = 327;</code>
     */
    public static final int k_EUserMsg_AuraModifierApplied_VALUE = 327;
    /**
     * <code>k_EUserMsg_ObstructedShotFired = 329;</code>
     */
    public static final int k_EUserMsg_ObstructedShotFired_VALUE = 329;
    /**
     * <code>k_EUserMsg_AbilityLateFailure = 330;</code>
     */
    public static final int k_EUserMsg_AbilityLateFailure_VALUE = 330;
    /**
     * <code>k_EUserMsg_AbilityPing = 331;</code>
     */
    public static final int k_EUserMsg_AbilityPing_VALUE = 331;
    /**
     * <code>k_EUserMsg_PostProcessingAnim = 332;</code>
     */
    public static final int k_EUserMsg_PostProcessingAnim_VALUE = 332;
    /**
     * <code>k_EUserMsg_DeathReplayData = 333;</code>
     */
    public static final int k_EUserMsg_DeathReplayData_VALUE = 333;
    /**
     * <code>k_EUserMsg_PlayerLifetimeStatInfo = 334;</code>
     */
    public static final int k_EUserMsg_PlayerLifetimeStatInfo_VALUE = 334;
    /**
     * <code>k_EUserMsg_ForceShopClosed = 336;</code>
     */
    public static final int k_EUserMsg_ForceShopClosed_VALUE = 336;
    /**
     * <code>k_EUserMsg_StaminaDrained = 337;</code>
     */
    public static final int k_EUserMsg_StaminaDrained_VALUE = 337;
    /**
     * <code>k_EUserMsg_AbilityNotify = 338;</code>
     */
    public static final int k_EUserMsg_AbilityNotify_VALUE = 338;
    /**
     * <code>k_EUserMsg_GetDamageStatsResponse = 339;</code>
     */
    public static final int k_EUserMsg_GetDamageStatsResponse_VALUE = 339;
    /**
     * <code>k_EUserMsg_ParticipantStartSoundEvent = 340;</code>
     */
    public static final int k_EUserMsg_ParticipantStartSoundEvent_VALUE = 340;
    /**
     * <code>k_EUserMsg_ParticipantStopSoundEvent = 341;</code>
     */
    public static final int k_EUserMsg_ParticipantStopSoundEvent_VALUE = 341;
    /**
     * <code>k_EUserMsg_ParticipantStopSoundEventHash = 342;</code>
     */
    public static final int k_EUserMsg_ParticipantStopSoundEventHash_VALUE = 342;
    /**
     * <code>k_EUserMsg_ParticipantSetSoundEventParams = 343;</code>
     */
    public static final int k_EUserMsg_ParticipantSetSoundEventParams_VALUE = 343;
    /**
     * <code>k_EUserMsg_ParticipantSetLibraryStackFields = 344;</code>
     */
    public static final int k_EUserMsg_ParticipantSetLibraryStackFields_VALUE = 344;
    /**
     * <code>k_EUserMsg_CurrencyChanged = 345;</code>
     */
    public static final int k_EUserMsg_CurrencyChanged_VALUE = 345;
    /**
     * <code>k_EUserMsg_GameOver = 346;</code>
     */
    public static final int k_EUserMsg_GameOver_VALUE = 346;
    /**
     * <code>k_EUserMsg_BossKilled = 347;</code>
     */
    public static final int k_EUserMsg_BossKilled_VALUE = 347;


    public final int getNumber() { return value; }

    public static CitadelUserMessageIds valueOf(int value) {
      switch (value) {
        case 300: return k_EUserMsg_Damage;
        case 303: return k_EUserMsg_MapPing;
        case 304: return k_EUserMsg_TeamRewards;
        case 306: return k_EUserMsg_AbilityFailed;
        case 308: return k_EUserMsg_TriggerDamageFlash;
        case 309: return k_EUserMsg_AbilitiesChanged;
        case 310: return k_EUserMsg_RecentDamageSummary;
        case 311: return k_EUserMsg_SpectatorTeamChanged;
        case 312: return k_EUserMsg_ChatWheel;
        case 313: return k_EUserMsg_GoldHistory;
        case 314: return k_EUserMsg_ChatMsg;
        case 315: return k_EUserMsg_QuickResponse;
        case 316: return k_EUserMsg_PostMatchDetails;
        case 317: return k_EUserMsg_ChatEvent;
        case 318: return k_EUserMsg_AbilityInterrupted;
        case 319: return k_EUserMsg_HeroKilled;
        case 320: return k_EUserMsg_ReturnIdol;
        case 321: return k_EUserMsg_SetClientCameraAngles;
        case 322: return k_EUserMsg_MapLine;
        case 323: return k_EUserMsg_BulletHit;
        case 324: return k_EUserMsg_ObjectiveMask;
        case 325: return k_EUserMsg_ModifierApplied;
        case 326: return k_EUserMsg_CameraController;
        case 327: return k_EUserMsg_AuraModifierApplied;
        case 329: return k_EUserMsg_ObstructedShotFired;
        case 330: return k_EUserMsg_AbilityLateFailure;
        case 331: return k_EUserMsg_AbilityPing;
        case 332: return k_EUserMsg_PostProcessingAnim;
        case 333: return k_EUserMsg_DeathReplayData;
        case 334: return k_EUserMsg_PlayerLifetimeStatInfo;
        case 336: return k_EUserMsg_ForceShopClosed;
        case 337: return k_EUserMsg_StaminaDrained;
        case 338: return k_EUserMsg_AbilityNotify;
        case 339: return k_EUserMsg_GetDamageStatsResponse;
        case 340: return k_EUserMsg_ParticipantStartSoundEvent;
        case 341: return k_EUserMsg_ParticipantStopSoundEvent;
        case 342: return k_EUserMsg_ParticipantStopSoundEventHash;
        case 343: return k_EUserMsg_ParticipantSetSoundEventParams;
        case 344: return k_EUserMsg_ParticipantSetLibraryStackFields;
        case 345: return k_EUserMsg_CurrencyChanged;
        case 346: return k_EUserMsg_GameOver;
        case 347: return k_EUserMsg_BossKilled;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CitadelUserMessageIds>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<CitadelUserMessageIds>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CitadelUserMessageIds>() {
            public CitadelUserMessageIds findValueByNumber(int number) {
              return CitadelUserMessageIds.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.deadlock.proto.DeadlockMessageId.getDescriptor().getEnumTypes().get(5);
    }

    private static final CitadelUserMessageIds[] VALUES = values();

    public static CitadelUserMessageIds valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private CitadelUserMessageIds(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:CitadelUserMessageIds)
  }

  /**
   * Protobuf enum {@code CitadelEntityMessageIds}
   */
  public enum CitadelEntityMessageIds
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>k_EEntityMsg_BreakablePropSpawnDebris = 500;</code>
     */
    k_EEntityMsg_BreakablePropSpawnDebris(0, 500),
    ;

    /**
     * <code>k_EEntityMsg_BreakablePropSpawnDebris = 500;</code>
     */
    public static final int k_EEntityMsg_BreakablePropSpawnDebris_VALUE = 500;


    public final int getNumber() { return value; }

    public static CitadelEntityMessageIds valueOf(int value) {
      switch (value) {
        case 500: return k_EEntityMsg_BreakablePropSpawnDebris;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CitadelEntityMessageIds>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<CitadelEntityMessageIds>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CitadelEntityMessageIds>() {
            public CitadelEntityMessageIds findValueByNumber(int number) {
              return CitadelEntityMessageIds.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.deadlock.proto.DeadlockMessageId.getDescriptor().getEnumTypes().get(6);
    }

    private static final CitadelEntityMessageIds[] VALUES = values();

    public static CitadelEntityMessageIds valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private CitadelEntityMessageIds(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:CitadelEntityMessageIds)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020message_id.proto*\364\002\n\014NET_Messages\022\013\n\007n" +
      "et_NOP\020\000\022\022\n\016net_Disconnect\020\001\022\014\n\010net_File" +
      "\020\002\022\027\n\023net_SplitScreenUser\020\003\022\014\n\010net_Tick\020" +
      "\004\022\021\n\rnet_StringCmd\020\005\022\021\n\rnet_SetConVar\020\006\022" +
      "\023\n\017net_SignonState\020\007\022\027\n\023net_SpawnGroup_L" +
      "oad\020\010\022!\n\035net_SpawnGroup_ManifestUpdate\020\t" +
      "\022\"\n\036net_SpawnGroup_SetCreationTick\020\013\022\031\n\025" +
      "net_SpawnGroup_Unload\020\014\022 \n\034net_SpawnGrou" +
      "p_LoadCompleted\020\r\022 \n\034net_ReliableMessage" +
      "EndMarker\020\016\022\024\n\020net_DebugOverlay\020\017*\341\002\n\014CL",
      "C_Messages\022\022\n\016clc_ClientInfo\020\024\022\014\n\010clc_Mo" +
      "ve\020\025\022\021\n\rclc_VoiceData\020\026\022\023\n\017clc_BaselineA" +
      "ck\020\027\022\030\n\024clc_RespondCvarValue\020\031\022\024\n\020clc_Fi" +
      "leCRCCheck\020\032\022\027\n\023clc_LoadingProgress\020\033\022\032\n" +
      "\026clc_SplitPlayerConnect\020\034\022\035\n\031clc_SplitPl" +
      "ayerDisconnect\020\036\022\024\n\020clc_ServerStatus\020\037\022\024" +
      "\n\020clc_RequestPause\020!\022\024\n\020clc_CmdKeyValues" +
      "\020\"\022\031\n\025clc_RconServerDetails\020#\022\022\n\016clc_Hlt" +
      "vReplay\020$\022\022\n\016clc_Diagnostic\020%*\227\005\n\014SVC_Me" +
      "ssages\022\022\n\016svc_ServerInfo\020(\022\033\n\027svc_Flatte",
      "nedSerializer\020)\022\021\n\rsvc_ClassInfo\020*\022\020\n\014sv" +
      "c_SetPause\020+\022\031\n\025svc_CreateStringTable\020,\022" +
      "\031\n\025svc_UpdateStringTable\020-\022\021\n\rsvc_VoiceI" +
      "nit\020.\022\021\n\rsvc_VoiceData\020/\022\r\n\tsvc_Print\0200\022" +
      "\016\n\nsvc_Sounds\0201\022\017\n\013svc_SetView\0202\022\034\n\030svc_" +
      "ClearAllStringTables\0203\022\024\n\020svc_CmdKeyValu" +
      "es\0204\022\020\n\014svc_BSPDecal\0205\022\023\n\017svc_SplitScree" +
      "n\0206\022\026\n\022svc_PacketEntities\0207\022\020\n\014svc_Prefe" +
      "tch\0208\022\014\n\010svc_Menu\0209\022\024\n\020svc_GetCvarValue\020" +
      ":\022\021\n\rsvc_StopSound\020;\022\020\n\014svc_PeerList\020<\022\026",
      "\n\022svc_PacketReliable\020=\022\022\n\016svc_HLTVStatus" +
      "\020>\022\025\n\021svc_ServerSteamID\020?\022\026\n\022svc_FullFra" +
      "meSplit\020F\022\031\n\025svc_RconServerDetails\020G\022\023\n\017" +
      "svc_UserMessage\020H\022\031\n\025svc_Broadcast_Comma" +
      "nd\020J\022\037\n\033svc_HltvFixupOperatorStatus\020K\022\020\n" +
      "\014svc_UserCmds\020L*\254\t\n\021EBaseUserMessages\022\027\n" +
      "\023UM_AchievementEvent\020e\022\023\n\017UM_CloseCaptio" +
      "n\020f\022\031\n\025UM_CloseCaptionDirect\020g\022\027\n\023UM_Cur" +
      "rentTimescale\020h\022\027\n\023UM_DesiredTimescale\020i" +
      "\022\013\n\007UM_Fade\020j\022\020\n\014UM_GameTitle\020k\022\r\n\tUM_Hu",
      "dMsg\020n\022\016\n\nUM_HudText\020o\022\022\n\016UM_ColoredText" +
      "\020q\022\023\n\017UM_RequestState\020r\022\017\n\013UM_ResetHUD\020s" +
      "\022\r\n\tUM_Rumble\020t\022\016\n\nUM_SayText\020u\022\017\n\013UM_Sa" +
      "yText2\020v\022\025\n\021UM_SayTextChannel\020w\022\014\n\010UM_Sh" +
      "ake\020x\022\017\n\013UM_ShakeDir\020y\022\021\n\rUM_WaterShake\020" +
      "z\022\016\n\nUM_TextMsg\020|\022\021\n\rUM_ScreenTilt\020}\022\021\n\014" +
      "UM_VoiceMask\020\200\001\022\021\n\014UM_SendAudio\020\202\001\022\022\n\rUM" +
      "_ItemPickup\020\203\001\022\022\n\rUM_AmmoDenied\020\204\001\022\020\n\013UM" +
      "_ShowMenu\020\206\001\022\022\n\rUM_CreditsMsg\020\207\001\022\037\n\032UM_C" +
      "loseCaptionPlaceholder\020\216\001\022\030\n\023UM_CameraTr",
      "ansition\020\217\001\022\026\n\021UM_AudioParameter\020\220\001\022\027\n\022U" +
      "M_ParticleManager\020\221\001\022\020\n\013UM_HudError\020\222\001\022\027" +
      "\n\022UM_CustomGameEvent\020\224\001\022\027\n\022UM_AnimGraphU" +
      "pdate\020\225\001\022\033\n\026UM_HapticsManagerPulse\020\226\001\022\034\n" +
      "\027UM_HapticsManagerEffect\020\227\001\022\031\n\024UM_Comman" +
      "dQueueState\020\230\001\022\030\n\023UM_UpdateCssClasses\020\231\001" +
      "\022\027\n\022UM_ServerFrameTime\020\232\001\022\034\n\027UM_LagCompe" +
      "nsationError\020\233\001\022\030\n\023UM_RequestDllStatus\020\234" +
      "\001\022\031\n\024UM_RequestUtilAction\020\235\001\022\032\n\025UM_UtilA" +
      "ctionResponse\020\236\001\022\031\n\024UM_DllStatusResponse",
      "\020\237\001\022\030\n\023UM_RequestInventory\020\240\001\022\031\n\024UM_Inve" +
      "ntoryResponse\020\241\001\022\031\n\024UM_RequestDiagnostic" +
      "\020\242\001\022\032\n\025UM_DiagnosticResponse\020\243\001\022\025\n\020UM_Ex" +
      "traUserData\020\244\001\022\033\n\026UM_NotifyResponseFound" +
      "\020\245\001\022\037\n\032UM_PlayResponseConditional\020\246\001\022\020\n\013" +
      "UM_MAX_BASE\020\310\001*\224\001\n\023EBaseEntityMessages\022\022" +
      "\n\rEM_PlayJingle\020\210\001\022\025\n\020EM_ScreenOverlay\020\211" +
      "\001\022\027\n\022EM_RemoveAllDecals\020\212\001\022\026\n\021EM_Propaga" +
      "teForce\020\213\001\022\017\n\nEM_DoSpark\020\214\001\022\020\n\013EM_FixAng" +
      "le\020\215\001*\232\013\n\025CitadelUserMessageIds\022\026\n\021k_EUs",
      "erMsg_Damage\020\254\002\022\027\n\022k_EUserMsg_MapPing\020\257\002" +
      "\022\033\n\026k_EUserMsg_TeamRewards\020\260\002\022\035\n\030k_EUser" +
      "Msg_AbilityFailed\020\262\002\022\"\n\035k_EUserMsg_Trigg" +
      "erDamageFlash\020\264\002\022 \n\033k_EUserMsg_Abilities" +
      "Changed\020\265\002\022#\n\036k_EUserMsg_RecentDamageSum" +
      "mary\020\266\002\022$\n\037k_EUserMsg_SpectatorTeamChang" +
      "ed\020\267\002\022\031\n\024k_EUserMsg_ChatWheel\020\270\002\022\033\n\026k_EU" +
      "serMsg_GoldHistory\020\271\002\022\027\n\022k_EUserMsg_Chat" +
      "Msg\020\272\002\022\035\n\030k_EUserMsg_QuickResponse\020\273\002\022 \n" +
      "\033k_EUserMsg_PostMatchDetails\020\274\002\022\031\n\024k_EUs",
      "erMsg_ChatEvent\020\275\002\022\"\n\035k_EUserMsg_Ability" +
      "Interrupted\020\276\002\022\032\n\025k_EUserMsg_HeroKilled\020" +
      "\277\002\022\032\n\025k_EUserMsg_ReturnIdol\020\300\002\022%\n k_EUse" +
      "rMsg_SetClientCameraAngles\020\301\002\022\027\n\022k_EUser" +
      "Msg_MapLine\020\302\002\022\031\n\024k_EUserMsg_BulletHit\020\303" +
      "\002\022\035\n\030k_EUserMsg_ObjectiveMask\020\304\002\022\037\n\032k_EU" +
      "serMsg_ModifierApplied\020\305\002\022 \n\033k_EUserMsg_" +
      "CameraController\020\306\002\022#\n\036k_EUserMsg_AuraMo" +
      "difierApplied\020\307\002\022#\n\036k_EUserMsg_Obstructe" +
      "dShotFired\020\311\002\022\"\n\035k_EUserMsg_AbilityLateF",
      "ailure\020\312\002\022\033\n\026k_EUserMsg_AbilityPing\020\313\002\022\"" +
      "\n\035k_EUserMsg_PostProcessingAnim\020\314\002\022\037\n\032k_" +
      "EUserMsg_DeathReplayData\020\315\002\022&\n!k_EUserMs" +
      "g_PlayerLifetimeStatInfo\020\316\002\022\037\n\032k_EUserMs" +
      "g_ForceShopClosed\020\320\002\022\036\n\031k_EUserMsg_Stami" +
      "naDrained\020\321\002\022\035\n\030k_EUserMsg_AbilityNotify" +
      "\020\322\002\022&\n!k_EUserMsg_GetDamageStatsResponse" +
      "\020\323\002\022*\n%k_EUserMsg_ParticipantStartSoundE" +
      "vent\020\324\002\022)\n$k_EUserMsg_ParticipantStopSou" +
      "ndEvent\020\325\002\022-\n(k_EUserMsg_ParticipantStop",
      "SoundEventHash\020\326\002\022.\n)k_EUserMsg_Particip" +
      "antSetSoundEventParams\020\327\002\0220\n+k_EUserMsg_" +
      "ParticipantSetLibraryStackFields\020\330\002\022\037\n\032k" +
      "_EUserMsg_CurrencyChanged\020\331\002\022\030\n\023k_EUserM" +
      "sg_GameOver\020\332\002\022\032\n\025k_EUserMsg_BossKilled\020" +
      "\333\002*E\n\027CitadelEntityMessageIds\022*\n%k_EEnti" +
      "tyMsg_BreakablePropSpawnDebris\020\364\003B;\n&ska" +
      "distats.clarity.wire.deadlock.protoB\021Dea" +
      "dlockMessageId"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
