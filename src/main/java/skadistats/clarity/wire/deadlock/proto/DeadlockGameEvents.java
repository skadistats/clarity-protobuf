// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: citadel_gameevents.proto

package skadistats.clarity.wire.deadlock.proto;

public final class DeadlockGameEvents {
  private DeadlockGameEvents() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code ECitadelGameEvents}
   */
  public enum ECitadelGameEvents
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>GE_FireBullets = 450;</code>
     */
    GE_FireBullets(0, 450),
    /**
     * <code>GE_PlayerAnimEvent = 451;</code>
     */
    GE_PlayerAnimEvent(1, 451),
    /**
     * <code>GE_ParticleSystemManager = 458;</code>
     */
    GE_ParticleSystemManager(2, 458),
    /**
     * <code>GE_ScreenTextPretty = 459;</code>
     */
    GE_ScreenTextPretty(3, 459),
    /**
     * <code>GE_ServerRequestedTracer = 460;</code>
     */
    GE_ServerRequestedTracer(4, 460),
    /**
     * <code>GE_BulletImpact = 461;</code>
     */
    GE_BulletImpact(5, 461),
    /**
     * <code>GE_EnableSatVolumesEvent = 462;</code>
     */
    GE_EnableSatVolumesEvent(6, 462),
    /**
     * <code>GE_PlaceSatVolumeEvent = 463;</code>
     */
    GE_PlaceSatVolumeEvent(7, 463),
    /**
     * <code>GE_DisableSatVolumesEvent = 464;</code>
     */
    GE_DisableSatVolumesEvent(8, 464),
    /**
     * <code>GE_RemoveSatVolumeEvent = 465;</code>
     */
    GE_RemoveSatVolumeEvent(9, 465),
    ;

    /**
     * <code>GE_FireBullets = 450;</code>
     */
    public static final int GE_FireBullets_VALUE = 450;
    /**
     * <code>GE_PlayerAnimEvent = 451;</code>
     */
    public static final int GE_PlayerAnimEvent_VALUE = 451;
    /**
     * <code>GE_ParticleSystemManager = 458;</code>
     */
    public static final int GE_ParticleSystemManager_VALUE = 458;
    /**
     * <code>GE_ScreenTextPretty = 459;</code>
     */
    public static final int GE_ScreenTextPretty_VALUE = 459;
    /**
     * <code>GE_ServerRequestedTracer = 460;</code>
     */
    public static final int GE_ServerRequestedTracer_VALUE = 460;
    /**
     * <code>GE_BulletImpact = 461;</code>
     */
    public static final int GE_BulletImpact_VALUE = 461;
    /**
     * <code>GE_EnableSatVolumesEvent = 462;</code>
     */
    public static final int GE_EnableSatVolumesEvent_VALUE = 462;
    /**
     * <code>GE_PlaceSatVolumeEvent = 463;</code>
     */
    public static final int GE_PlaceSatVolumeEvent_VALUE = 463;
    /**
     * <code>GE_DisableSatVolumesEvent = 464;</code>
     */
    public static final int GE_DisableSatVolumesEvent_VALUE = 464;
    /**
     * <code>GE_RemoveSatVolumeEvent = 465;</code>
     */
    public static final int GE_RemoveSatVolumeEvent_VALUE = 465;


    public final int getNumber() { return value; }

    public static ECitadelGameEvents valueOf(int value) {
      switch (value) {
        case 450: return GE_FireBullets;
        case 451: return GE_PlayerAnimEvent;
        case 458: return GE_ParticleSystemManager;
        case 459: return GE_ScreenTextPretty;
        case 460: return GE_ServerRequestedTracer;
        case 461: return GE_BulletImpact;
        case 462: return GE_EnableSatVolumesEvent;
        case 463: return GE_PlaceSatVolumeEvent;
        case 464: return GE_DisableSatVolumesEvent;
        case 465: return GE_RemoveSatVolumeEvent;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ECitadelGameEvents>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ECitadelGameEvents>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ECitadelGameEvents>() {
            public ECitadelGameEvents findValueByNumber(int number) {
              return ECitadelGameEvents.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.getDescriptor().getEnumTypes().get(0);
    }

    private static final ECitadelGameEvents[] VALUES = values();

    public static ECitadelGameEvents valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ECitadelGameEvents(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ECitadelGameEvents)
  }

  public interface CMsgFireBulletsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgFireBullets)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgVector origin = 1;</code>
     */
    boolean hasOrigin();
    /**
     * <code>optional .CMsgVector origin = 1;</code>
     */
    skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector getOrigin();
    /**
     * <code>optional .CMsgVector origin = 1;</code>
     */
    skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVectorOrBuilder getOriginOrBuilder();

    /**
     * <code>optional .CMsgQAngle angles = 2;</code>
     */
    boolean hasAngles();
    /**
     * <code>optional .CMsgQAngle angles = 2;</code>
     */
    skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle getAngles();
    /**
     * <code>optional .CMsgQAngle angles = 2;</code>
     */
    skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngleOrBuilder getAnglesOrBuilder();

    /**
     * <code>optional uint32 seed = 4;</code>
     */
    boolean hasSeed();
    /**
     * <code>optional uint32 seed = 4;</code>
     */
    int getSeed();

    /**
     * <code>optional int32 shooter_entity = 5 [default = -1];</code>
     */
    boolean hasShooterEntity();
    /**
     * <code>optional int32 shooter_entity = 5 [default = -1];</code>
     */
    int getShooterEntity();

    /**
     * <code>optional int32 ability = 7 [default = -1];</code>
     */
    boolean hasAbility();
    /**
     * <code>optional int32 ability = 7 [default = -1];</code>
     */
    int getAbility();

    /**
     * <code>optional float penetration_percent = 8;</code>
     */
    boolean hasPenetrationPercent();
    /**
     * <code>optional float penetration_percent = 8;</code>
     */
    float getPenetrationPercent();

    /**
     * <code>optional float spread = 9;</code>
     */
    boolean hasSpread();
    /**
     * <code>optional float spread = 9;</code>
     */
    float getSpread();

    /**
     * <code>optional bool fired_from_gun = 10 [default = true];</code>
     */
    boolean hasFiredFromGun();
    /**
     * <code>optional bool fired_from_gun = 10 [default = true];</code>
     */
    boolean getFiredFromGun();

    /**
     * <code>optional uint32 bullets_override = 11;</code>
     */
    boolean hasBulletsOverride();
    /**
     * <code>optional uint32 bullets_override = 11;</code>
     */
    int getBulletsOverride();

    /**
     * <code>optional .CMsgFireBullets.TracerAssignment tracer_replacement = 12;</code>
     */
    boolean hasTracerReplacement();
    /**
     * <code>optional .CMsgFireBullets.TracerAssignment tracer_replacement = 12;</code>
     */
    skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment getTracerReplacement();
    /**
     * <code>optional .CMsgFireBullets.TracerAssignment tracer_replacement = 12;</code>
     */
    skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignmentOrBuilder getTracerReplacementOrBuilder();

    /**
     * <code>repeated .CMsgFireBullets.TracerAssignment tracer_additional = 13;</code>
     */
    java.util.List<skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment> 
        getTracerAdditionalList();
    /**
     * <code>repeated .CMsgFireBullets.TracerAssignment tracer_additional = 13;</code>
     */
    skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment getTracerAdditional(int index);
    /**
     * <code>repeated .CMsgFireBullets.TracerAssignment tracer_additional = 13;</code>
     */
    int getTracerAdditionalCount();
    /**
     * <code>repeated .CMsgFireBullets.TracerAssignment tracer_additional = 13;</code>
     */
    java.util.List<? extends skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignmentOrBuilder> 
        getTracerAdditionalOrBuilderList();
    /**
     * <code>repeated .CMsgFireBullets.TracerAssignment tracer_additional = 13;</code>
     */
    skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignmentOrBuilder getTracerAdditionalOrBuilder(
        int index);

    /**
     * <code>optional .CMsgQAngle angles_original = 14;</code>
     */
    boolean hasAnglesOriginal();
    /**
     * <code>optional .CMsgQAngle angles_original = 14;</code>
     */
    skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle getAnglesOriginal();
    /**
     * <code>optional .CMsgQAngle angles_original = 14;</code>
     */
    skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngleOrBuilder getAnglesOriginalOrBuilder();

    /**
     * <code>optional uint32 weapon_subclass_id = 15;</code>
     */
    boolean hasWeaponSubclassId();
    /**
     * <code>optional uint32 weapon_subclass_id = 15;</code>
     */
    int getWeaponSubclassId();

    /**
     * <code>optional uint32 shot_number = 16;</code>
     */
    boolean hasShotNumber();
    /**
     * <code>optional uint32 shot_number = 16;</code>
     */
    int getShotNumber();

    /**
     * <code>optional int32 ignore_entity = 17 [default = -1];</code>
     */
    boolean hasIgnoreEntity();
    /**
     * <code>optional int32 ignore_entity = 17 [default = -1];</code>
     */
    int getIgnoreEntity();

    /**
     * <code>optional float max_range = 18;</code>
     */
    boolean hasMaxRange();
    /**
     * <code>optional float max_range = 18;</code>
     */
    float getMaxRange();
  }
  /**
   * Protobuf type {@code CMsgFireBullets}
   */
  public static final class CMsgFireBullets extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgFireBullets)
      CMsgFireBulletsOrBuilder {
    // Use CMsgFireBullets.newBuilder() to construct.
    private CMsgFireBullets(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgFireBullets(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgFireBullets defaultInstance;
    public static CMsgFireBullets getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgFireBullets getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgFireBullets(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = origin_.toBuilder();
              }
              origin_ = input.readMessage(skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(origin_);
                origin_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = angles_.toBuilder();
              }
              angles_ = input.readMessage(skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(angles_);
                angles_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              seed_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              shooterEntity_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000010;
              ability_ = input.readInt32();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000020;
              penetrationPercent_ = input.readFloat();
              break;
            }
            case 77: {
              bitField0_ |= 0x00000040;
              spread_ = input.readFloat();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000080;
              firedFromGun_ = input.readBool();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000100;
              bulletsOverride_ = input.readUInt32();
              break;
            }
            case 98: {
              skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment.Builder subBuilder = null;
              if (((bitField0_ & 0x00000200) == 0x00000200)) {
                subBuilder = tracerReplacement_.toBuilder();
              }
              tracerReplacement_ = input.readMessage(skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tracerReplacement_);
                tracerReplacement_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000200;
              break;
            }
            case 106: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                tracerAdditional_ = new java.util.ArrayList<skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment>();
                mutable_bitField0_ |= 0x00000400;
              }
              tracerAdditional_.add(input.readMessage(skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment.PARSER, extensionRegistry));
              break;
            }
            case 114: {
              skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = anglesOriginal_.toBuilder();
              }
              anglesOriginal_ = input.readMessage(skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(anglesOriginal_);
                anglesOriginal_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 120: {
              bitField0_ |= 0x00000800;
              weaponSubclassId_ = input.readUInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00001000;
              shotNumber_ = input.readUInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00002000;
              ignoreEntity_ = input.readInt32();
              break;
            }
            case 149: {
              bitField0_ |= 0x00004000;
              maxRange_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          tracerAdditional_ = java.util.Collections.unmodifiableList(tracerAdditional_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.internal_static_CMsgFireBullets_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.internal_static_CMsgFireBullets_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.class, skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgFireBullets> PARSER =
        new com.google.protobuf.AbstractParser<CMsgFireBullets>() {
      public CMsgFireBullets parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgFireBullets(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgFireBullets> getParserForType() {
      return PARSER;
    }

    public interface TracerAssignmentOrBuilder extends
        // @@protoc_insertion_point(interface_extends:CMsgFireBullets.TracerAssignment)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint64 tracer_resource_id = 1;</code>
       */
      boolean hasTracerResourceId();
      /**
       * <code>optional uint64 tracer_resource_id = 1;</code>
       */
      long getTracerResourceId();

      /**
       * <code>optional uint32 bullet_indicies = 2;</code>
       */
      boolean hasBulletIndicies();
      /**
       * <code>optional uint32 bullet_indicies = 2;</code>
       */
      int getBulletIndicies();
    }
    /**
     * Protobuf type {@code CMsgFireBullets.TracerAssignment}
     */
    public static final class TracerAssignment extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:CMsgFireBullets.TracerAssignment)
        TracerAssignmentOrBuilder {
      // Use TracerAssignment.newBuilder() to construct.
      private TracerAssignment(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private TracerAssignment(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final TracerAssignment defaultInstance;
      public static TracerAssignment getDefaultInstance() {
        return defaultInstance;
      }

      public TracerAssignment getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private TracerAssignment(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                tracerResourceId_ = input.readUInt64();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                bulletIndicies_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.internal_static_CMsgFireBullets_TracerAssignment_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.internal_static_CMsgFireBullets_TracerAssignment_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment.class, skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment.Builder.class);
      }

      public static com.google.protobuf.Parser<TracerAssignment> PARSER =
          new com.google.protobuf.AbstractParser<TracerAssignment>() {
        public TracerAssignment parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new TracerAssignment(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<TracerAssignment> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int TRACER_RESOURCE_ID_FIELD_NUMBER = 1;
      private long tracerResourceId_;
      /**
       * <code>optional uint64 tracer_resource_id = 1;</code>
       */
      public boolean hasTracerResourceId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint64 tracer_resource_id = 1;</code>
       */
      public long getTracerResourceId() {
        return tracerResourceId_;
      }

      public static final int BULLET_INDICIES_FIELD_NUMBER = 2;
      private int bulletIndicies_;
      /**
       * <code>optional uint32 bullet_indicies = 2;</code>
       */
      public boolean hasBulletIndicies() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 bullet_indicies = 2;</code>
       */
      public int getBulletIndicies() {
        return bulletIndicies_;
      }

      private void initFields() {
        tracerResourceId_ = 0L;
        bulletIndicies_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt64(1, tracerResourceId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, bulletIndicies_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(1, tracerResourceId_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, bulletIndicies_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code CMsgFireBullets.TracerAssignment}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:CMsgFireBullets.TracerAssignment)
          skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignmentOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.internal_static_CMsgFireBullets_TracerAssignment_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.internal_static_CMsgFireBullets_TracerAssignment_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment.class, skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment.Builder.class);
        }

        // Construct using skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          tracerResourceId_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          bulletIndicies_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.internal_static_CMsgFireBullets_TracerAssignment_descriptor;
        }

        public skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment getDefaultInstanceForType() {
          return skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment.getDefaultInstance();
        }

        public skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment build() {
          skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment buildPartial() {
          skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment result = new skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.tracerResourceId_ = tracerResourceId_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.bulletIndicies_ = bulletIndicies_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment) {
            return mergeFrom((skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment other) {
          if (other == skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment.getDefaultInstance()) return this;
          if (other.hasTracerResourceId()) {
            setTracerResourceId(other.getTracerResourceId());
          }
          if (other.hasBulletIndicies()) {
            setBulletIndicies(other.getBulletIndicies());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private long tracerResourceId_ ;
        /**
         * <code>optional uint64 tracer_resource_id = 1;</code>
         */
        public boolean hasTracerResourceId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint64 tracer_resource_id = 1;</code>
         */
        public long getTracerResourceId() {
          return tracerResourceId_;
        }
        /**
         * <code>optional uint64 tracer_resource_id = 1;</code>
         */
        public Builder setTracerResourceId(long value) {
          bitField0_ |= 0x00000001;
          tracerResourceId_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 tracer_resource_id = 1;</code>
         */
        public Builder clearTracerResourceId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          tracerResourceId_ = 0L;
          onChanged();
          return this;
        }

        private int bulletIndicies_ ;
        /**
         * <code>optional uint32 bullet_indicies = 2;</code>
         */
        public boolean hasBulletIndicies() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 bullet_indicies = 2;</code>
         */
        public int getBulletIndicies() {
          return bulletIndicies_;
        }
        /**
         * <code>optional uint32 bullet_indicies = 2;</code>
         */
        public Builder setBulletIndicies(int value) {
          bitField0_ |= 0x00000002;
          bulletIndicies_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 bullet_indicies = 2;</code>
         */
        public Builder clearBulletIndicies() {
          bitField0_ = (bitField0_ & ~0x00000002);
          bulletIndicies_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:CMsgFireBullets.TracerAssignment)
      }

      static {
        defaultInstance = new TracerAssignment(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:CMsgFireBullets.TracerAssignment)
    }

    private int bitField0_;
    public static final int ORIGIN_FIELD_NUMBER = 1;
    private skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector origin_;
    /**
     * <code>optional .CMsgVector origin = 1;</code>
     */
    public boolean hasOrigin() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgVector origin = 1;</code>
     */
    public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector getOrigin() {
      return origin_;
    }
    /**
     * <code>optional .CMsgVector origin = 1;</code>
     */
    public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVectorOrBuilder getOriginOrBuilder() {
      return origin_;
    }

    public static final int ANGLES_FIELD_NUMBER = 2;
    private skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle angles_;
    /**
     * <code>optional .CMsgQAngle angles = 2;</code>
     */
    public boolean hasAngles() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .CMsgQAngle angles = 2;</code>
     */
    public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle getAngles() {
      return angles_;
    }
    /**
     * <code>optional .CMsgQAngle angles = 2;</code>
     */
    public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngleOrBuilder getAnglesOrBuilder() {
      return angles_;
    }

    public static final int SEED_FIELD_NUMBER = 4;
    private int seed_;
    /**
     * <code>optional uint32 seed = 4;</code>
     */
    public boolean hasSeed() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 seed = 4;</code>
     */
    public int getSeed() {
      return seed_;
    }

    public static final int SHOOTER_ENTITY_FIELD_NUMBER = 5;
    private int shooterEntity_;
    /**
     * <code>optional int32 shooter_entity = 5 [default = -1];</code>
     */
    public boolean hasShooterEntity() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 shooter_entity = 5 [default = -1];</code>
     */
    public int getShooterEntity() {
      return shooterEntity_;
    }

    public static final int ABILITY_FIELD_NUMBER = 7;
    private int ability_;
    /**
     * <code>optional int32 ability = 7 [default = -1];</code>
     */
    public boolean hasAbility() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 ability = 7 [default = -1];</code>
     */
    public int getAbility() {
      return ability_;
    }

    public static final int PENETRATION_PERCENT_FIELD_NUMBER = 8;
    private float penetrationPercent_;
    /**
     * <code>optional float penetration_percent = 8;</code>
     */
    public boolean hasPenetrationPercent() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional float penetration_percent = 8;</code>
     */
    public float getPenetrationPercent() {
      return penetrationPercent_;
    }

    public static final int SPREAD_FIELD_NUMBER = 9;
    private float spread_;
    /**
     * <code>optional float spread = 9;</code>
     */
    public boolean hasSpread() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional float spread = 9;</code>
     */
    public float getSpread() {
      return spread_;
    }

    public static final int FIRED_FROM_GUN_FIELD_NUMBER = 10;
    private boolean firedFromGun_;
    /**
     * <code>optional bool fired_from_gun = 10 [default = true];</code>
     */
    public boolean hasFiredFromGun() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional bool fired_from_gun = 10 [default = true];</code>
     */
    public boolean getFiredFromGun() {
      return firedFromGun_;
    }

    public static final int BULLETS_OVERRIDE_FIELD_NUMBER = 11;
    private int bulletsOverride_;
    /**
     * <code>optional uint32 bullets_override = 11;</code>
     */
    public boolean hasBulletsOverride() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 bullets_override = 11;</code>
     */
    public int getBulletsOverride() {
      return bulletsOverride_;
    }

    public static final int TRACER_REPLACEMENT_FIELD_NUMBER = 12;
    private skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment tracerReplacement_;
    /**
     * <code>optional .CMsgFireBullets.TracerAssignment tracer_replacement = 12;</code>
     */
    public boolean hasTracerReplacement() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .CMsgFireBullets.TracerAssignment tracer_replacement = 12;</code>
     */
    public skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment getTracerReplacement() {
      return tracerReplacement_;
    }
    /**
     * <code>optional .CMsgFireBullets.TracerAssignment tracer_replacement = 12;</code>
     */
    public skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignmentOrBuilder getTracerReplacementOrBuilder() {
      return tracerReplacement_;
    }

    public static final int TRACER_ADDITIONAL_FIELD_NUMBER = 13;
    private java.util.List<skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment> tracerAdditional_;
    /**
     * <code>repeated .CMsgFireBullets.TracerAssignment tracer_additional = 13;</code>
     */
    public java.util.List<skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment> getTracerAdditionalList() {
      return tracerAdditional_;
    }
    /**
     * <code>repeated .CMsgFireBullets.TracerAssignment tracer_additional = 13;</code>
     */
    public java.util.List<? extends skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignmentOrBuilder> 
        getTracerAdditionalOrBuilderList() {
      return tracerAdditional_;
    }
    /**
     * <code>repeated .CMsgFireBullets.TracerAssignment tracer_additional = 13;</code>
     */
    public int getTracerAdditionalCount() {
      return tracerAdditional_.size();
    }
    /**
     * <code>repeated .CMsgFireBullets.TracerAssignment tracer_additional = 13;</code>
     */
    public skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment getTracerAdditional(int index) {
      return tracerAdditional_.get(index);
    }
    /**
     * <code>repeated .CMsgFireBullets.TracerAssignment tracer_additional = 13;</code>
     */
    public skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignmentOrBuilder getTracerAdditionalOrBuilder(
        int index) {
      return tracerAdditional_.get(index);
    }

    public static final int ANGLES_ORIGINAL_FIELD_NUMBER = 14;
    private skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle anglesOriginal_;
    /**
     * <code>optional .CMsgQAngle angles_original = 14;</code>
     */
    public boolean hasAnglesOriginal() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .CMsgQAngle angles_original = 14;</code>
     */
    public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle getAnglesOriginal() {
      return anglesOriginal_;
    }
    /**
     * <code>optional .CMsgQAngle angles_original = 14;</code>
     */
    public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngleOrBuilder getAnglesOriginalOrBuilder() {
      return anglesOriginal_;
    }

    public static final int WEAPON_SUBCLASS_ID_FIELD_NUMBER = 15;
    private int weaponSubclassId_;
    /**
     * <code>optional uint32 weapon_subclass_id = 15;</code>
     */
    public boolean hasWeaponSubclassId() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional uint32 weapon_subclass_id = 15;</code>
     */
    public int getWeaponSubclassId() {
      return weaponSubclassId_;
    }

    public static final int SHOT_NUMBER_FIELD_NUMBER = 16;
    private int shotNumber_;
    /**
     * <code>optional uint32 shot_number = 16;</code>
     */
    public boolean hasShotNumber() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional uint32 shot_number = 16;</code>
     */
    public int getShotNumber() {
      return shotNumber_;
    }

    public static final int IGNORE_ENTITY_FIELD_NUMBER = 17;
    private int ignoreEntity_;
    /**
     * <code>optional int32 ignore_entity = 17 [default = -1];</code>
     */
    public boolean hasIgnoreEntity() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 ignore_entity = 17 [default = -1];</code>
     */
    public int getIgnoreEntity() {
      return ignoreEntity_;
    }

    public static final int MAX_RANGE_FIELD_NUMBER = 18;
    private float maxRange_;
    /**
     * <code>optional float max_range = 18;</code>
     */
    public boolean hasMaxRange() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional float max_range = 18;</code>
     */
    public float getMaxRange() {
      return maxRange_;
    }

    private void initFields() {
      origin_ = skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.getDefaultInstance();
      angles_ = skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle.getDefaultInstance();
      seed_ = 0;
      shooterEntity_ = -1;
      ability_ = -1;
      penetrationPercent_ = 0F;
      spread_ = 0F;
      firedFromGun_ = true;
      bulletsOverride_ = 0;
      tracerReplacement_ = skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment.getDefaultInstance();
      tracerAdditional_ = java.util.Collections.emptyList();
      anglesOriginal_ = skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle.getDefaultInstance();
      weaponSubclassId_ = 0;
      shotNumber_ = 0;
      ignoreEntity_ = -1;
      maxRange_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, origin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, angles_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(4, seed_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, shooterEntity_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(7, ability_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(8, penetrationPercent_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(9, spread_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(10, firedFromGun_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(11, bulletsOverride_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(12, tracerReplacement_);
      }
      for (int i = 0; i < tracerAdditional_.size(); i++) {
        output.writeMessage(13, tracerAdditional_.get(i));
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(14, anglesOriginal_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeUInt32(15, weaponSubclassId_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeUInt32(16, shotNumber_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(17, ignoreEntity_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeFloat(18, maxRange_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, origin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, angles_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, seed_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, shooterEntity_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, ability_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, penetrationPercent_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, spread_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, firedFromGun_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, bulletsOverride_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, tracerReplacement_);
      }
      for (int i = 0; i < tracerAdditional_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, tracerAdditional_.get(i));
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, anglesOriginal_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, weaponSubclassId_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(16, shotNumber_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, ignoreEntity_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(18, maxRange_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgFireBullets}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgFireBullets)
        skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBulletsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.internal_static_CMsgFireBullets_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.internal_static_CMsgFireBullets_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.class, skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.Builder.class);
      }

      // Construct using skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getOriginFieldBuilder();
          getAnglesFieldBuilder();
          getTracerReplacementFieldBuilder();
          getTracerAdditionalFieldBuilder();
          getAnglesOriginalFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (originBuilder_ == null) {
          origin_ = skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.getDefaultInstance();
        } else {
          originBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (anglesBuilder_ == null) {
          angles_ = skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle.getDefaultInstance();
        } else {
          anglesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        seed_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        shooterEntity_ = -1;
        bitField0_ = (bitField0_ & ~0x00000008);
        ability_ = -1;
        bitField0_ = (bitField0_ & ~0x00000010);
        penetrationPercent_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000020);
        spread_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        firedFromGun_ = true;
        bitField0_ = (bitField0_ & ~0x00000080);
        bulletsOverride_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        if (tracerReplacementBuilder_ == null) {
          tracerReplacement_ = skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment.getDefaultInstance();
        } else {
          tracerReplacementBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        if (tracerAdditionalBuilder_ == null) {
          tracerAdditional_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
        } else {
          tracerAdditionalBuilder_.clear();
        }
        if (anglesOriginalBuilder_ == null) {
          anglesOriginal_ = skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle.getDefaultInstance();
        } else {
          anglesOriginalBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        weaponSubclassId_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        shotNumber_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        ignoreEntity_ = -1;
        bitField0_ = (bitField0_ & ~0x00004000);
        maxRange_ = 0F;
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.internal_static_CMsgFireBullets_descriptor;
      }

      public skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets getDefaultInstanceForType() {
        return skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.getDefaultInstance();
      }

      public skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets build() {
        skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets buildPartial() {
        skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets result = new skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (originBuilder_ == null) {
          result.origin_ = origin_;
        } else {
          result.origin_ = originBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (anglesBuilder_ == null) {
          result.angles_ = angles_;
        } else {
          result.angles_ = anglesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.seed_ = seed_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.shooterEntity_ = shooterEntity_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.ability_ = ability_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.penetrationPercent_ = penetrationPercent_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.spread_ = spread_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.firedFromGun_ = firedFromGun_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.bulletsOverride_ = bulletsOverride_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        if (tracerReplacementBuilder_ == null) {
          result.tracerReplacement_ = tracerReplacement_;
        } else {
          result.tracerReplacement_ = tracerReplacementBuilder_.build();
        }
        if (tracerAdditionalBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400)) {
            tracerAdditional_ = java.util.Collections.unmodifiableList(tracerAdditional_);
            bitField0_ = (bitField0_ & ~0x00000400);
          }
          result.tracerAdditional_ = tracerAdditional_;
        } else {
          result.tracerAdditional_ = tracerAdditionalBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        if (anglesOriginalBuilder_ == null) {
          result.anglesOriginal_ = anglesOriginal_;
        } else {
          result.anglesOriginal_ = anglesOriginalBuilder_.build();
        }
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.weaponSubclassId_ = weaponSubclassId_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.shotNumber_ = shotNumber_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.ignoreEntity_ = ignoreEntity_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.maxRange_ = maxRange_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets) {
          return mergeFrom((skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets other) {
        if (other == skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.getDefaultInstance()) return this;
        if (other.hasOrigin()) {
          mergeOrigin(other.getOrigin());
        }
        if (other.hasAngles()) {
          mergeAngles(other.getAngles());
        }
        if (other.hasSeed()) {
          setSeed(other.getSeed());
        }
        if (other.hasShooterEntity()) {
          setShooterEntity(other.getShooterEntity());
        }
        if (other.hasAbility()) {
          setAbility(other.getAbility());
        }
        if (other.hasPenetrationPercent()) {
          setPenetrationPercent(other.getPenetrationPercent());
        }
        if (other.hasSpread()) {
          setSpread(other.getSpread());
        }
        if (other.hasFiredFromGun()) {
          setFiredFromGun(other.getFiredFromGun());
        }
        if (other.hasBulletsOverride()) {
          setBulletsOverride(other.getBulletsOverride());
        }
        if (other.hasTracerReplacement()) {
          mergeTracerReplacement(other.getTracerReplacement());
        }
        if (tracerAdditionalBuilder_ == null) {
          if (!other.tracerAdditional_.isEmpty()) {
            if (tracerAdditional_.isEmpty()) {
              tracerAdditional_ = other.tracerAdditional_;
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              ensureTracerAdditionalIsMutable();
              tracerAdditional_.addAll(other.tracerAdditional_);
            }
            onChanged();
          }
        } else {
          if (!other.tracerAdditional_.isEmpty()) {
            if (tracerAdditionalBuilder_.isEmpty()) {
              tracerAdditionalBuilder_.dispose();
              tracerAdditionalBuilder_ = null;
              tracerAdditional_ = other.tracerAdditional_;
              bitField0_ = (bitField0_ & ~0x00000400);
              tracerAdditionalBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTracerAdditionalFieldBuilder() : null;
            } else {
              tracerAdditionalBuilder_.addAllMessages(other.tracerAdditional_);
            }
          }
        }
        if (other.hasAnglesOriginal()) {
          mergeAnglesOriginal(other.getAnglesOriginal());
        }
        if (other.hasWeaponSubclassId()) {
          setWeaponSubclassId(other.getWeaponSubclassId());
        }
        if (other.hasShotNumber()) {
          setShotNumber(other.getShotNumber());
        }
        if (other.hasIgnoreEntity()) {
          setIgnoreEntity(other.getIgnoreEntity());
        }
        if (other.hasMaxRange()) {
          setMaxRange(other.getMaxRange());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector origin_ = skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVectorOrBuilder> originBuilder_;
      /**
       * <code>optional .CMsgVector origin = 1;</code>
       */
      public boolean hasOrigin() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgVector origin = 1;</code>
       */
      public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector getOrigin() {
        if (originBuilder_ == null) {
          return origin_;
        } else {
          return originBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgVector origin = 1;</code>
       */
      public Builder setOrigin(skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector value) {
        if (originBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          origin_ = value;
          onChanged();
        } else {
          originBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CMsgVector origin = 1;</code>
       */
      public Builder setOrigin(
          skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.Builder builderForValue) {
        if (originBuilder_ == null) {
          origin_ = builderForValue.build();
          onChanged();
        } else {
          originBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CMsgVector origin = 1;</code>
       */
      public Builder mergeOrigin(skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector value) {
        if (originBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              origin_ != skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.getDefaultInstance()) {
            origin_ =
              skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.newBuilder(origin_).mergeFrom(value).buildPartial();
          } else {
            origin_ = value;
          }
          onChanged();
        } else {
          originBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CMsgVector origin = 1;</code>
       */
      public Builder clearOrigin() {
        if (originBuilder_ == null) {
          origin_ = skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.getDefaultInstance();
          onChanged();
        } else {
          originBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .CMsgVector origin = 1;</code>
       */
      public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.Builder getOriginBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getOriginFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgVector origin = 1;</code>
       */
      public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVectorOrBuilder getOriginOrBuilder() {
        if (originBuilder_ != null) {
          return originBuilder_.getMessageOrBuilder();
        } else {
          return origin_;
        }
      }
      /**
       * <code>optional .CMsgVector origin = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVectorOrBuilder> 
          getOriginFieldBuilder() {
        if (originBuilder_ == null) {
          originBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVectorOrBuilder>(
                  getOrigin(),
                  getParentForChildren(),
                  isClean());
          origin_ = null;
        }
        return originBuilder_;
      }

      private skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle angles_ = skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle.Builder, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngleOrBuilder> anglesBuilder_;
      /**
       * <code>optional .CMsgQAngle angles = 2;</code>
       */
      public boolean hasAngles() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .CMsgQAngle angles = 2;</code>
       */
      public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle getAngles() {
        if (anglesBuilder_ == null) {
          return angles_;
        } else {
          return anglesBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgQAngle angles = 2;</code>
       */
      public Builder setAngles(skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle value) {
        if (anglesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          angles_ = value;
          onChanged();
        } else {
          anglesBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CMsgQAngle angles = 2;</code>
       */
      public Builder setAngles(
          skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle.Builder builderForValue) {
        if (anglesBuilder_ == null) {
          angles_ = builderForValue.build();
          onChanged();
        } else {
          anglesBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CMsgQAngle angles = 2;</code>
       */
      public Builder mergeAngles(skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle value) {
        if (anglesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              angles_ != skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle.getDefaultInstance()) {
            angles_ =
              skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle.newBuilder(angles_).mergeFrom(value).buildPartial();
          } else {
            angles_ = value;
          }
          onChanged();
        } else {
          anglesBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CMsgQAngle angles = 2;</code>
       */
      public Builder clearAngles() {
        if (anglesBuilder_ == null) {
          angles_ = skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle.getDefaultInstance();
          onChanged();
        } else {
          anglesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .CMsgQAngle angles = 2;</code>
       */
      public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle.Builder getAnglesBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getAnglesFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgQAngle angles = 2;</code>
       */
      public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngleOrBuilder getAnglesOrBuilder() {
        if (anglesBuilder_ != null) {
          return anglesBuilder_.getMessageOrBuilder();
        } else {
          return angles_;
        }
      }
      /**
       * <code>optional .CMsgQAngle angles = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle.Builder, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngleOrBuilder> 
          getAnglesFieldBuilder() {
        if (anglesBuilder_ == null) {
          anglesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle.Builder, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngleOrBuilder>(
                  getAngles(),
                  getParentForChildren(),
                  isClean());
          angles_ = null;
        }
        return anglesBuilder_;
      }

      private int seed_ ;
      /**
       * <code>optional uint32 seed = 4;</code>
       */
      public boolean hasSeed() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 seed = 4;</code>
       */
      public int getSeed() {
        return seed_;
      }
      /**
       * <code>optional uint32 seed = 4;</code>
       */
      public Builder setSeed(int value) {
        bitField0_ |= 0x00000004;
        seed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 seed = 4;</code>
       */
      public Builder clearSeed() {
        bitField0_ = (bitField0_ & ~0x00000004);
        seed_ = 0;
        onChanged();
        return this;
      }

      private int shooterEntity_ = -1;
      /**
       * <code>optional int32 shooter_entity = 5 [default = -1];</code>
       */
      public boolean hasShooterEntity() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 shooter_entity = 5 [default = -1];</code>
       */
      public int getShooterEntity() {
        return shooterEntity_;
      }
      /**
       * <code>optional int32 shooter_entity = 5 [default = -1];</code>
       */
      public Builder setShooterEntity(int value) {
        bitField0_ |= 0x00000008;
        shooterEntity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 shooter_entity = 5 [default = -1];</code>
       */
      public Builder clearShooterEntity() {
        bitField0_ = (bitField0_ & ~0x00000008);
        shooterEntity_ = -1;
        onChanged();
        return this;
      }

      private int ability_ = -1;
      /**
       * <code>optional int32 ability = 7 [default = -1];</code>
       */
      public boolean hasAbility() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 ability = 7 [default = -1];</code>
       */
      public int getAbility() {
        return ability_;
      }
      /**
       * <code>optional int32 ability = 7 [default = -1];</code>
       */
      public Builder setAbility(int value) {
        bitField0_ |= 0x00000010;
        ability_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ability = 7 [default = -1];</code>
       */
      public Builder clearAbility() {
        bitField0_ = (bitField0_ & ~0x00000010);
        ability_ = -1;
        onChanged();
        return this;
      }

      private float penetrationPercent_ ;
      /**
       * <code>optional float penetration_percent = 8;</code>
       */
      public boolean hasPenetrationPercent() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional float penetration_percent = 8;</code>
       */
      public float getPenetrationPercent() {
        return penetrationPercent_;
      }
      /**
       * <code>optional float penetration_percent = 8;</code>
       */
      public Builder setPenetrationPercent(float value) {
        bitField0_ |= 0x00000020;
        penetrationPercent_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float penetration_percent = 8;</code>
       */
      public Builder clearPenetrationPercent() {
        bitField0_ = (bitField0_ & ~0x00000020);
        penetrationPercent_ = 0F;
        onChanged();
        return this;
      }

      private float spread_ ;
      /**
       * <code>optional float spread = 9;</code>
       */
      public boolean hasSpread() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional float spread = 9;</code>
       */
      public float getSpread() {
        return spread_;
      }
      /**
       * <code>optional float spread = 9;</code>
       */
      public Builder setSpread(float value) {
        bitField0_ |= 0x00000040;
        spread_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float spread = 9;</code>
       */
      public Builder clearSpread() {
        bitField0_ = (bitField0_ & ~0x00000040);
        spread_ = 0F;
        onChanged();
        return this;
      }

      private boolean firedFromGun_ = true;
      /**
       * <code>optional bool fired_from_gun = 10 [default = true];</code>
       */
      public boolean hasFiredFromGun() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional bool fired_from_gun = 10 [default = true];</code>
       */
      public boolean getFiredFromGun() {
        return firedFromGun_;
      }
      /**
       * <code>optional bool fired_from_gun = 10 [default = true];</code>
       */
      public Builder setFiredFromGun(boolean value) {
        bitField0_ |= 0x00000080;
        firedFromGun_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool fired_from_gun = 10 [default = true];</code>
       */
      public Builder clearFiredFromGun() {
        bitField0_ = (bitField0_ & ~0x00000080);
        firedFromGun_ = true;
        onChanged();
        return this;
      }

      private int bulletsOverride_ ;
      /**
       * <code>optional uint32 bullets_override = 11;</code>
       */
      public boolean hasBulletsOverride() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 bullets_override = 11;</code>
       */
      public int getBulletsOverride() {
        return bulletsOverride_;
      }
      /**
       * <code>optional uint32 bullets_override = 11;</code>
       */
      public Builder setBulletsOverride(int value) {
        bitField0_ |= 0x00000100;
        bulletsOverride_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 bullets_override = 11;</code>
       */
      public Builder clearBulletsOverride() {
        bitField0_ = (bitField0_ & ~0x00000100);
        bulletsOverride_ = 0;
        onChanged();
        return this;
      }

      private skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment tracerReplacement_ = skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment, skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment.Builder, skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignmentOrBuilder> tracerReplacementBuilder_;
      /**
       * <code>optional .CMsgFireBullets.TracerAssignment tracer_replacement = 12;</code>
       */
      public boolean hasTracerReplacement() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional .CMsgFireBullets.TracerAssignment tracer_replacement = 12;</code>
       */
      public skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment getTracerReplacement() {
        if (tracerReplacementBuilder_ == null) {
          return tracerReplacement_;
        } else {
          return tracerReplacementBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgFireBullets.TracerAssignment tracer_replacement = 12;</code>
       */
      public Builder setTracerReplacement(skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment value) {
        if (tracerReplacementBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tracerReplacement_ = value;
          onChanged();
        } else {
          tracerReplacementBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .CMsgFireBullets.TracerAssignment tracer_replacement = 12;</code>
       */
      public Builder setTracerReplacement(
          skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment.Builder builderForValue) {
        if (tracerReplacementBuilder_ == null) {
          tracerReplacement_ = builderForValue.build();
          onChanged();
        } else {
          tracerReplacementBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .CMsgFireBullets.TracerAssignment tracer_replacement = 12;</code>
       */
      public Builder mergeTracerReplacement(skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment value) {
        if (tracerReplacementBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200) &&
              tracerReplacement_ != skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment.getDefaultInstance()) {
            tracerReplacement_ =
              skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment.newBuilder(tracerReplacement_).mergeFrom(value).buildPartial();
          } else {
            tracerReplacement_ = value;
          }
          onChanged();
        } else {
          tracerReplacementBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>optional .CMsgFireBullets.TracerAssignment tracer_replacement = 12;</code>
       */
      public Builder clearTracerReplacement() {
        if (tracerReplacementBuilder_ == null) {
          tracerReplacement_ = skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment.getDefaultInstance();
          onChanged();
        } else {
          tracerReplacementBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      /**
       * <code>optional .CMsgFireBullets.TracerAssignment tracer_replacement = 12;</code>
       */
      public skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment.Builder getTracerReplacementBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getTracerReplacementFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgFireBullets.TracerAssignment tracer_replacement = 12;</code>
       */
      public skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignmentOrBuilder getTracerReplacementOrBuilder() {
        if (tracerReplacementBuilder_ != null) {
          return tracerReplacementBuilder_.getMessageOrBuilder();
        } else {
          return tracerReplacement_;
        }
      }
      /**
       * <code>optional .CMsgFireBullets.TracerAssignment tracer_replacement = 12;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment, skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment.Builder, skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignmentOrBuilder> 
          getTracerReplacementFieldBuilder() {
        if (tracerReplacementBuilder_ == null) {
          tracerReplacementBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment, skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment.Builder, skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignmentOrBuilder>(
                  getTracerReplacement(),
                  getParentForChildren(),
                  isClean());
          tracerReplacement_ = null;
        }
        return tracerReplacementBuilder_;
      }

      private java.util.List<skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment> tracerAdditional_ =
        java.util.Collections.emptyList();
      private void ensureTracerAdditionalIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          tracerAdditional_ = new java.util.ArrayList<skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment>(tracerAdditional_);
          bitField0_ |= 0x00000400;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment, skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment.Builder, skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignmentOrBuilder> tracerAdditionalBuilder_;

      /**
       * <code>repeated .CMsgFireBullets.TracerAssignment tracer_additional = 13;</code>
       */
      public java.util.List<skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment> getTracerAdditionalList() {
        if (tracerAdditionalBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tracerAdditional_);
        } else {
          return tracerAdditionalBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .CMsgFireBullets.TracerAssignment tracer_additional = 13;</code>
       */
      public int getTracerAdditionalCount() {
        if (tracerAdditionalBuilder_ == null) {
          return tracerAdditional_.size();
        } else {
          return tracerAdditionalBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .CMsgFireBullets.TracerAssignment tracer_additional = 13;</code>
       */
      public skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment getTracerAdditional(int index) {
        if (tracerAdditionalBuilder_ == null) {
          return tracerAdditional_.get(index);
        } else {
          return tracerAdditionalBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .CMsgFireBullets.TracerAssignment tracer_additional = 13;</code>
       */
      public Builder setTracerAdditional(
          int index, skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment value) {
        if (tracerAdditionalBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTracerAdditionalIsMutable();
          tracerAdditional_.set(index, value);
          onChanged();
        } else {
          tracerAdditionalBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgFireBullets.TracerAssignment tracer_additional = 13;</code>
       */
      public Builder setTracerAdditional(
          int index, skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment.Builder builderForValue) {
        if (tracerAdditionalBuilder_ == null) {
          ensureTracerAdditionalIsMutable();
          tracerAdditional_.set(index, builderForValue.build());
          onChanged();
        } else {
          tracerAdditionalBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgFireBullets.TracerAssignment tracer_additional = 13;</code>
       */
      public Builder addTracerAdditional(skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment value) {
        if (tracerAdditionalBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTracerAdditionalIsMutable();
          tracerAdditional_.add(value);
          onChanged();
        } else {
          tracerAdditionalBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgFireBullets.TracerAssignment tracer_additional = 13;</code>
       */
      public Builder addTracerAdditional(
          int index, skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment value) {
        if (tracerAdditionalBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTracerAdditionalIsMutable();
          tracerAdditional_.add(index, value);
          onChanged();
        } else {
          tracerAdditionalBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgFireBullets.TracerAssignment tracer_additional = 13;</code>
       */
      public Builder addTracerAdditional(
          skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment.Builder builderForValue) {
        if (tracerAdditionalBuilder_ == null) {
          ensureTracerAdditionalIsMutable();
          tracerAdditional_.add(builderForValue.build());
          onChanged();
        } else {
          tracerAdditionalBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgFireBullets.TracerAssignment tracer_additional = 13;</code>
       */
      public Builder addTracerAdditional(
          int index, skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment.Builder builderForValue) {
        if (tracerAdditionalBuilder_ == null) {
          ensureTracerAdditionalIsMutable();
          tracerAdditional_.add(index, builderForValue.build());
          onChanged();
        } else {
          tracerAdditionalBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .CMsgFireBullets.TracerAssignment tracer_additional = 13;</code>
       */
      public Builder addAllTracerAdditional(
          java.lang.Iterable<? extends skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment> values) {
        if (tracerAdditionalBuilder_ == null) {
          ensureTracerAdditionalIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tracerAdditional_);
          onChanged();
        } else {
          tracerAdditionalBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgFireBullets.TracerAssignment tracer_additional = 13;</code>
       */
      public Builder clearTracerAdditional() {
        if (tracerAdditionalBuilder_ == null) {
          tracerAdditional_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
          onChanged();
        } else {
          tracerAdditionalBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .CMsgFireBullets.TracerAssignment tracer_additional = 13;</code>
       */
      public Builder removeTracerAdditional(int index) {
        if (tracerAdditionalBuilder_ == null) {
          ensureTracerAdditionalIsMutable();
          tracerAdditional_.remove(index);
          onChanged();
        } else {
          tracerAdditionalBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .CMsgFireBullets.TracerAssignment tracer_additional = 13;</code>
       */
      public skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment.Builder getTracerAdditionalBuilder(
          int index) {
        return getTracerAdditionalFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .CMsgFireBullets.TracerAssignment tracer_additional = 13;</code>
       */
      public skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignmentOrBuilder getTracerAdditionalOrBuilder(
          int index) {
        if (tracerAdditionalBuilder_ == null) {
          return tracerAdditional_.get(index);  } else {
          return tracerAdditionalBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .CMsgFireBullets.TracerAssignment tracer_additional = 13;</code>
       */
      public java.util.List<? extends skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignmentOrBuilder> 
           getTracerAdditionalOrBuilderList() {
        if (tracerAdditionalBuilder_ != null) {
          return tracerAdditionalBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tracerAdditional_);
        }
      }
      /**
       * <code>repeated .CMsgFireBullets.TracerAssignment tracer_additional = 13;</code>
       */
      public skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment.Builder addTracerAdditionalBuilder() {
        return getTracerAdditionalFieldBuilder().addBuilder(
            skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgFireBullets.TracerAssignment tracer_additional = 13;</code>
       */
      public skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment.Builder addTracerAdditionalBuilder(
          int index) {
        return getTracerAdditionalFieldBuilder().addBuilder(
            index, skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment.getDefaultInstance());
      }
      /**
       * <code>repeated .CMsgFireBullets.TracerAssignment tracer_additional = 13;</code>
       */
      public java.util.List<skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment.Builder> 
           getTracerAdditionalBuilderList() {
        return getTracerAdditionalFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment, skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment.Builder, skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignmentOrBuilder> 
          getTracerAdditionalFieldBuilder() {
        if (tracerAdditionalBuilder_ == null) {
          tracerAdditionalBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment, skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignment.Builder, skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgFireBullets.TracerAssignmentOrBuilder>(
                  tracerAdditional_,
                  ((bitField0_ & 0x00000400) == 0x00000400),
                  getParentForChildren(),
                  isClean());
          tracerAdditional_ = null;
        }
        return tracerAdditionalBuilder_;
      }

      private skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle anglesOriginal_ = skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle.Builder, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngleOrBuilder> anglesOriginalBuilder_;
      /**
       * <code>optional .CMsgQAngle angles_original = 14;</code>
       */
      public boolean hasAnglesOriginal() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .CMsgQAngle angles_original = 14;</code>
       */
      public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle getAnglesOriginal() {
        if (anglesOriginalBuilder_ == null) {
          return anglesOriginal_;
        } else {
          return anglesOriginalBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgQAngle angles_original = 14;</code>
       */
      public Builder setAnglesOriginal(skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle value) {
        if (anglesOriginalBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          anglesOriginal_ = value;
          onChanged();
        } else {
          anglesOriginalBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .CMsgQAngle angles_original = 14;</code>
       */
      public Builder setAnglesOriginal(
          skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle.Builder builderForValue) {
        if (anglesOriginalBuilder_ == null) {
          anglesOriginal_ = builderForValue.build();
          onChanged();
        } else {
          anglesOriginalBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .CMsgQAngle angles_original = 14;</code>
       */
      public Builder mergeAnglesOriginal(skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle value) {
        if (anglesOriginalBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800) &&
              anglesOriginal_ != skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle.getDefaultInstance()) {
            anglesOriginal_ =
              skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle.newBuilder(anglesOriginal_).mergeFrom(value).buildPartial();
          } else {
            anglesOriginal_ = value;
          }
          onChanged();
        } else {
          anglesOriginalBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .CMsgQAngle angles_original = 14;</code>
       */
      public Builder clearAnglesOriginal() {
        if (anglesOriginalBuilder_ == null) {
          anglesOriginal_ = skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle.getDefaultInstance();
          onChanged();
        } else {
          anglesOriginalBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      /**
       * <code>optional .CMsgQAngle angles_original = 14;</code>
       */
      public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle.Builder getAnglesOriginalBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getAnglesOriginalFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgQAngle angles_original = 14;</code>
       */
      public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngleOrBuilder getAnglesOriginalOrBuilder() {
        if (anglesOriginalBuilder_ != null) {
          return anglesOriginalBuilder_.getMessageOrBuilder();
        } else {
          return anglesOriginal_;
        }
      }
      /**
       * <code>optional .CMsgQAngle angles_original = 14;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle.Builder, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngleOrBuilder> 
          getAnglesOriginalFieldBuilder() {
        if (anglesOriginalBuilder_ == null) {
          anglesOriginalBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngle.Builder, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgQAngleOrBuilder>(
                  getAnglesOriginal(),
                  getParentForChildren(),
                  isClean());
          anglesOriginal_ = null;
        }
        return anglesOriginalBuilder_;
      }

      private int weaponSubclassId_ ;
      /**
       * <code>optional uint32 weapon_subclass_id = 15;</code>
       */
      public boolean hasWeaponSubclassId() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional uint32 weapon_subclass_id = 15;</code>
       */
      public int getWeaponSubclassId() {
        return weaponSubclassId_;
      }
      /**
       * <code>optional uint32 weapon_subclass_id = 15;</code>
       */
      public Builder setWeaponSubclassId(int value) {
        bitField0_ |= 0x00001000;
        weaponSubclassId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 weapon_subclass_id = 15;</code>
       */
      public Builder clearWeaponSubclassId() {
        bitField0_ = (bitField0_ & ~0x00001000);
        weaponSubclassId_ = 0;
        onChanged();
        return this;
      }

      private int shotNumber_ ;
      /**
       * <code>optional uint32 shot_number = 16;</code>
       */
      public boolean hasShotNumber() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional uint32 shot_number = 16;</code>
       */
      public int getShotNumber() {
        return shotNumber_;
      }
      /**
       * <code>optional uint32 shot_number = 16;</code>
       */
      public Builder setShotNumber(int value) {
        bitField0_ |= 0x00002000;
        shotNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 shot_number = 16;</code>
       */
      public Builder clearShotNumber() {
        bitField0_ = (bitField0_ & ~0x00002000);
        shotNumber_ = 0;
        onChanged();
        return this;
      }

      private int ignoreEntity_ = -1;
      /**
       * <code>optional int32 ignore_entity = 17 [default = -1];</code>
       */
      public boolean hasIgnoreEntity() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 ignore_entity = 17 [default = -1];</code>
       */
      public int getIgnoreEntity() {
        return ignoreEntity_;
      }
      /**
       * <code>optional int32 ignore_entity = 17 [default = -1];</code>
       */
      public Builder setIgnoreEntity(int value) {
        bitField0_ |= 0x00004000;
        ignoreEntity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ignore_entity = 17 [default = -1];</code>
       */
      public Builder clearIgnoreEntity() {
        bitField0_ = (bitField0_ & ~0x00004000);
        ignoreEntity_ = -1;
        onChanged();
        return this;
      }

      private float maxRange_ ;
      /**
       * <code>optional float max_range = 18;</code>
       */
      public boolean hasMaxRange() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional float max_range = 18;</code>
       */
      public float getMaxRange() {
        return maxRange_;
      }
      /**
       * <code>optional float max_range = 18;</code>
       */
      public Builder setMaxRange(float value) {
        bitField0_ |= 0x00008000;
        maxRange_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float max_range = 18;</code>
       */
      public Builder clearMaxRange() {
        bitField0_ = (bitField0_ & ~0x00008000);
        maxRange_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgFireBullets)
    }

    static {
      defaultInstance = new CMsgFireBullets(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgFireBullets)
  }

  public interface CMsgBulletImpactOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CMsgBulletImpact)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .CMsgVector trace_start = 1;</code>
     */
    boolean hasTraceStart();
    /**
     * <code>optional .CMsgVector trace_start = 1;</code>
     */
    skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector getTraceStart();
    /**
     * <code>optional .CMsgVector trace_start = 1;</code>
     */
    skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVectorOrBuilder getTraceStartOrBuilder();

    /**
     * <code>optional .CMsgVector impact_origin = 2;</code>
     */
    boolean hasImpactOrigin();
    /**
     * <code>optional .CMsgVector impact_origin = 2;</code>
     */
    skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector getImpactOrigin();
    /**
     * <code>optional .CMsgVector impact_origin = 2;</code>
     */
    skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVectorOrBuilder getImpactOriginOrBuilder();

    /**
     * <code>optional .CMsgVector surface_normal = 3;</code>
     */
    boolean hasSurfaceNormal();
    /**
     * <code>optional .CMsgVector surface_normal = 3;</code>
     */
    skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector getSurfaceNormal();
    /**
     * <code>optional .CMsgVector surface_normal = 3;</code>
     */
    skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVectorOrBuilder getSurfaceNormalOrBuilder();

    /**
     * <code>optional uint32 damage = 4;</code>
     */
    boolean hasDamage();
    /**
     * <code>optional uint32 damage = 4;</code>
     */
    int getDamage();

    /**
     * <code>optional uint32 surface_type = 5;</code>
     */
    boolean hasSurfaceType();
    /**
     * <code>optional uint32 surface_type = 5;</code>
     */
    int getSurfaceType();

    /**
     * <code>optional int32 ability_entindex = 7 [default = -1];</code>
     */
    boolean hasAbilityEntindex();
    /**
     * <code>optional int32 ability_entindex = 7 [default = -1];</code>
     */
    int getAbilityEntindex();

    /**
     * <code>optional int32 impacted_entindex = 8 [default = -1];</code>
     */
    boolean hasImpactedEntindex();
    /**
     * <code>optional int32 impacted_entindex = 8 [default = -1];</code>
     */
    int getImpactedEntindex();

    /**
     * <code>optional uint32 impacted_hitbox = 9;</code>
     */
    boolean hasImpactedHitbox();
    /**
     * <code>optional uint32 impacted_hitbox = 9;</code>
     */
    int getImpactedHitbox();

    /**
     * <code>optional uint32 weapon_subclass_id = 10;</code>
     */
    boolean hasWeaponSubclassId();
    /**
     * <code>optional uint32 weapon_subclass_id = 10;</code>
     */
    int getWeaponSubclassId();

    /**
     * <code>optional int32 shooter_entindex = 11 [default = -1];</code>
     */
    boolean hasShooterEntindex();
    /**
     * <code>optional int32 shooter_entindex = 11 [default = -1];</code>
     */
    int getShooterEntindex();
  }
  /**
   * Protobuf type {@code CMsgBulletImpact}
   */
  public static final class CMsgBulletImpact extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CMsgBulletImpact)
      CMsgBulletImpactOrBuilder {
    // Use CMsgBulletImpact.newBuilder() to construct.
    private CMsgBulletImpact(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CMsgBulletImpact(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CMsgBulletImpact defaultInstance;
    public static CMsgBulletImpact getDefaultInstance() {
      return defaultInstance;
    }

    public CMsgBulletImpact getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CMsgBulletImpact(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = traceStart_.toBuilder();
              }
              traceStart_ = input.readMessage(skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(traceStart_);
                traceStart_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 18: {
              skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = impactOrigin_.toBuilder();
              }
              impactOrigin_ = input.readMessage(skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(impactOrigin_);
                impactOrigin_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
            case 26: {
              skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = surfaceNormal_.toBuilder();
              }
              surfaceNormal_ = input.readMessage(skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(surfaceNormal_);
                surfaceNormal_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              damage_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              surfaceType_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              abilityEntindex_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              impactedEntindex_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000080;
              impactedHitbox_ = input.readUInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000100;
              weaponSubclassId_ = input.readUInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000200;
              shooterEntindex_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.internal_static_CMsgBulletImpact_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.internal_static_CMsgBulletImpact_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgBulletImpact.class, skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgBulletImpact.Builder.class);
    }

    public static com.google.protobuf.Parser<CMsgBulletImpact> PARSER =
        new com.google.protobuf.AbstractParser<CMsgBulletImpact>() {
      public CMsgBulletImpact parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CMsgBulletImpact(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CMsgBulletImpact> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TRACE_START_FIELD_NUMBER = 1;
    private skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector traceStart_;
    /**
     * <code>optional .CMsgVector trace_start = 1;</code>
     */
    public boolean hasTraceStart() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .CMsgVector trace_start = 1;</code>
     */
    public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector getTraceStart() {
      return traceStart_;
    }
    /**
     * <code>optional .CMsgVector trace_start = 1;</code>
     */
    public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVectorOrBuilder getTraceStartOrBuilder() {
      return traceStart_;
    }

    public static final int IMPACT_ORIGIN_FIELD_NUMBER = 2;
    private skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector impactOrigin_;
    /**
     * <code>optional .CMsgVector impact_origin = 2;</code>
     */
    public boolean hasImpactOrigin() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .CMsgVector impact_origin = 2;</code>
     */
    public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector getImpactOrigin() {
      return impactOrigin_;
    }
    /**
     * <code>optional .CMsgVector impact_origin = 2;</code>
     */
    public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVectorOrBuilder getImpactOriginOrBuilder() {
      return impactOrigin_;
    }

    public static final int SURFACE_NORMAL_FIELD_NUMBER = 3;
    private skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector surfaceNormal_;
    /**
     * <code>optional .CMsgVector surface_normal = 3;</code>
     */
    public boolean hasSurfaceNormal() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional .CMsgVector surface_normal = 3;</code>
     */
    public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector getSurfaceNormal() {
      return surfaceNormal_;
    }
    /**
     * <code>optional .CMsgVector surface_normal = 3;</code>
     */
    public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVectorOrBuilder getSurfaceNormalOrBuilder() {
      return surfaceNormal_;
    }

    public static final int DAMAGE_FIELD_NUMBER = 4;
    private int damage_;
    /**
     * <code>optional uint32 damage = 4;</code>
     */
    public boolean hasDamage() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 damage = 4;</code>
     */
    public int getDamage() {
      return damage_;
    }

    public static final int SURFACE_TYPE_FIELD_NUMBER = 5;
    private int surfaceType_;
    /**
     * <code>optional uint32 surface_type = 5;</code>
     */
    public boolean hasSurfaceType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 surface_type = 5;</code>
     */
    public int getSurfaceType() {
      return surfaceType_;
    }

    public static final int ABILITY_ENTINDEX_FIELD_NUMBER = 7;
    private int abilityEntindex_;
    /**
     * <code>optional int32 ability_entindex = 7 [default = -1];</code>
     */
    public boolean hasAbilityEntindex() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 ability_entindex = 7 [default = -1];</code>
     */
    public int getAbilityEntindex() {
      return abilityEntindex_;
    }

    public static final int IMPACTED_ENTINDEX_FIELD_NUMBER = 8;
    private int impactedEntindex_;
    /**
     * <code>optional int32 impacted_entindex = 8 [default = -1];</code>
     */
    public boolean hasImpactedEntindex() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 impacted_entindex = 8 [default = -1];</code>
     */
    public int getImpactedEntindex() {
      return impactedEntindex_;
    }

    public static final int IMPACTED_HITBOX_FIELD_NUMBER = 9;
    private int impactedHitbox_;
    /**
     * <code>optional uint32 impacted_hitbox = 9;</code>
     */
    public boolean hasImpactedHitbox() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 impacted_hitbox = 9;</code>
     */
    public int getImpactedHitbox() {
      return impactedHitbox_;
    }

    public static final int WEAPON_SUBCLASS_ID_FIELD_NUMBER = 10;
    private int weaponSubclassId_;
    /**
     * <code>optional uint32 weapon_subclass_id = 10;</code>
     */
    public boolean hasWeaponSubclassId() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 weapon_subclass_id = 10;</code>
     */
    public int getWeaponSubclassId() {
      return weaponSubclassId_;
    }

    public static final int SHOOTER_ENTINDEX_FIELD_NUMBER = 11;
    private int shooterEntindex_;
    /**
     * <code>optional int32 shooter_entindex = 11 [default = -1];</code>
     */
    public boolean hasShooterEntindex() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 shooter_entindex = 11 [default = -1];</code>
     */
    public int getShooterEntindex() {
      return shooterEntindex_;
    }

    private void initFields() {
      traceStart_ = skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.getDefaultInstance();
      impactOrigin_ = skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.getDefaultInstance();
      surfaceNormal_ = skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.getDefaultInstance();
      damage_ = 0;
      surfaceType_ = 0;
      abilityEntindex_ = -1;
      impactedEntindex_ = -1;
      impactedHitbox_ = 0;
      weaponSubclassId_ = 0;
      shooterEntindex_ = -1;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, traceStart_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, impactOrigin_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, surfaceNormal_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, damage_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, surfaceType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(7, abilityEntindex_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(8, impactedEntindex_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(9, impactedHitbox_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(10, weaponSubclassId_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(11, shooterEntindex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, traceStart_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, impactOrigin_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, surfaceNormal_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, damage_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, surfaceType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, abilityEntindex_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, impactedEntindex_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, impactedHitbox_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, weaponSubclassId_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, shooterEntindex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgBulletImpact parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgBulletImpact parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgBulletImpact parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgBulletImpact parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgBulletImpact parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgBulletImpact parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgBulletImpact parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgBulletImpact parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgBulletImpact parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgBulletImpact parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgBulletImpact prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CMsgBulletImpact}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CMsgBulletImpact)
        skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgBulletImpactOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.internal_static_CMsgBulletImpact_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.internal_static_CMsgBulletImpact_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgBulletImpact.class, skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgBulletImpact.Builder.class);
      }

      // Construct using skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgBulletImpact.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTraceStartFieldBuilder();
          getImpactOriginFieldBuilder();
          getSurfaceNormalFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (traceStartBuilder_ == null) {
          traceStart_ = skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.getDefaultInstance();
        } else {
          traceStartBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (impactOriginBuilder_ == null) {
          impactOrigin_ = skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.getDefaultInstance();
        } else {
          impactOriginBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (surfaceNormalBuilder_ == null) {
          surfaceNormal_ = skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.getDefaultInstance();
        } else {
          surfaceNormalBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        damage_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        surfaceType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        abilityEntindex_ = -1;
        bitField0_ = (bitField0_ & ~0x00000020);
        impactedEntindex_ = -1;
        bitField0_ = (bitField0_ & ~0x00000040);
        impactedHitbox_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        weaponSubclassId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        shooterEntindex_ = -1;
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.internal_static_CMsgBulletImpact_descriptor;
      }

      public skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgBulletImpact getDefaultInstanceForType() {
        return skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgBulletImpact.getDefaultInstance();
      }

      public skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgBulletImpact build() {
        skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgBulletImpact result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgBulletImpact buildPartial() {
        skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgBulletImpact result = new skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgBulletImpact(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (traceStartBuilder_ == null) {
          result.traceStart_ = traceStart_;
        } else {
          result.traceStart_ = traceStartBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (impactOriginBuilder_ == null) {
          result.impactOrigin_ = impactOrigin_;
        } else {
          result.impactOrigin_ = impactOriginBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (surfaceNormalBuilder_ == null) {
          result.surfaceNormal_ = surfaceNormal_;
        } else {
          result.surfaceNormal_ = surfaceNormalBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.damage_ = damage_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.surfaceType_ = surfaceType_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.abilityEntindex_ = abilityEntindex_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.impactedEntindex_ = impactedEntindex_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.impactedHitbox_ = impactedHitbox_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.weaponSubclassId_ = weaponSubclassId_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.shooterEntindex_ = shooterEntindex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgBulletImpact) {
          return mergeFrom((skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgBulletImpact)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgBulletImpact other) {
        if (other == skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgBulletImpact.getDefaultInstance()) return this;
        if (other.hasTraceStart()) {
          mergeTraceStart(other.getTraceStart());
        }
        if (other.hasImpactOrigin()) {
          mergeImpactOrigin(other.getImpactOrigin());
        }
        if (other.hasSurfaceNormal()) {
          mergeSurfaceNormal(other.getSurfaceNormal());
        }
        if (other.hasDamage()) {
          setDamage(other.getDamage());
        }
        if (other.hasSurfaceType()) {
          setSurfaceType(other.getSurfaceType());
        }
        if (other.hasAbilityEntindex()) {
          setAbilityEntindex(other.getAbilityEntindex());
        }
        if (other.hasImpactedEntindex()) {
          setImpactedEntindex(other.getImpactedEntindex());
        }
        if (other.hasImpactedHitbox()) {
          setImpactedHitbox(other.getImpactedHitbox());
        }
        if (other.hasWeaponSubclassId()) {
          setWeaponSubclassId(other.getWeaponSubclassId());
        }
        if (other.hasShooterEntindex()) {
          setShooterEntindex(other.getShooterEntindex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgBulletImpact parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (skadistats.clarity.wire.deadlock.proto.DeadlockGameEvents.CMsgBulletImpact) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector traceStart_ = skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVectorOrBuilder> traceStartBuilder_;
      /**
       * <code>optional .CMsgVector trace_start = 1;</code>
       */
      public boolean hasTraceStart() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .CMsgVector trace_start = 1;</code>
       */
      public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector getTraceStart() {
        if (traceStartBuilder_ == null) {
          return traceStart_;
        } else {
          return traceStartBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgVector trace_start = 1;</code>
       */
      public Builder setTraceStart(skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector value) {
        if (traceStartBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          traceStart_ = value;
          onChanged();
        } else {
          traceStartBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CMsgVector trace_start = 1;</code>
       */
      public Builder setTraceStart(
          skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.Builder builderForValue) {
        if (traceStartBuilder_ == null) {
          traceStart_ = builderForValue.build();
          onChanged();
        } else {
          traceStartBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CMsgVector trace_start = 1;</code>
       */
      public Builder mergeTraceStart(skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector value) {
        if (traceStartBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              traceStart_ != skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.getDefaultInstance()) {
            traceStart_ =
              skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.newBuilder(traceStart_).mergeFrom(value).buildPartial();
          } else {
            traceStart_ = value;
          }
          onChanged();
        } else {
          traceStartBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .CMsgVector trace_start = 1;</code>
       */
      public Builder clearTraceStart() {
        if (traceStartBuilder_ == null) {
          traceStart_ = skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.getDefaultInstance();
          onChanged();
        } else {
          traceStartBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .CMsgVector trace_start = 1;</code>
       */
      public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.Builder getTraceStartBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getTraceStartFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgVector trace_start = 1;</code>
       */
      public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVectorOrBuilder getTraceStartOrBuilder() {
        if (traceStartBuilder_ != null) {
          return traceStartBuilder_.getMessageOrBuilder();
        } else {
          return traceStart_;
        }
      }
      /**
       * <code>optional .CMsgVector trace_start = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVectorOrBuilder> 
          getTraceStartFieldBuilder() {
        if (traceStartBuilder_ == null) {
          traceStartBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVectorOrBuilder>(
                  getTraceStart(),
                  getParentForChildren(),
                  isClean());
          traceStart_ = null;
        }
        return traceStartBuilder_;
      }

      private skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector impactOrigin_ = skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVectorOrBuilder> impactOriginBuilder_;
      /**
       * <code>optional .CMsgVector impact_origin = 2;</code>
       */
      public boolean hasImpactOrigin() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .CMsgVector impact_origin = 2;</code>
       */
      public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector getImpactOrigin() {
        if (impactOriginBuilder_ == null) {
          return impactOrigin_;
        } else {
          return impactOriginBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgVector impact_origin = 2;</code>
       */
      public Builder setImpactOrigin(skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector value) {
        if (impactOriginBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          impactOrigin_ = value;
          onChanged();
        } else {
          impactOriginBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CMsgVector impact_origin = 2;</code>
       */
      public Builder setImpactOrigin(
          skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.Builder builderForValue) {
        if (impactOriginBuilder_ == null) {
          impactOrigin_ = builderForValue.build();
          onChanged();
        } else {
          impactOriginBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CMsgVector impact_origin = 2;</code>
       */
      public Builder mergeImpactOrigin(skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector value) {
        if (impactOriginBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              impactOrigin_ != skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.getDefaultInstance()) {
            impactOrigin_ =
              skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.newBuilder(impactOrigin_).mergeFrom(value).buildPartial();
          } else {
            impactOrigin_ = value;
          }
          onChanged();
        } else {
          impactOriginBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .CMsgVector impact_origin = 2;</code>
       */
      public Builder clearImpactOrigin() {
        if (impactOriginBuilder_ == null) {
          impactOrigin_ = skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.getDefaultInstance();
          onChanged();
        } else {
          impactOriginBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .CMsgVector impact_origin = 2;</code>
       */
      public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.Builder getImpactOriginBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getImpactOriginFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgVector impact_origin = 2;</code>
       */
      public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVectorOrBuilder getImpactOriginOrBuilder() {
        if (impactOriginBuilder_ != null) {
          return impactOriginBuilder_.getMessageOrBuilder();
        } else {
          return impactOrigin_;
        }
      }
      /**
       * <code>optional .CMsgVector impact_origin = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVectorOrBuilder> 
          getImpactOriginFieldBuilder() {
        if (impactOriginBuilder_ == null) {
          impactOriginBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVectorOrBuilder>(
                  getImpactOrigin(),
                  getParentForChildren(),
                  isClean());
          impactOrigin_ = null;
        }
        return impactOriginBuilder_;
      }

      private skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector surfaceNormal_ = skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVectorOrBuilder> surfaceNormalBuilder_;
      /**
       * <code>optional .CMsgVector surface_normal = 3;</code>
       */
      public boolean hasSurfaceNormal() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .CMsgVector surface_normal = 3;</code>
       */
      public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector getSurfaceNormal() {
        if (surfaceNormalBuilder_ == null) {
          return surfaceNormal_;
        } else {
          return surfaceNormalBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .CMsgVector surface_normal = 3;</code>
       */
      public Builder setSurfaceNormal(skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector value) {
        if (surfaceNormalBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          surfaceNormal_ = value;
          onChanged();
        } else {
          surfaceNormalBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .CMsgVector surface_normal = 3;</code>
       */
      public Builder setSurfaceNormal(
          skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.Builder builderForValue) {
        if (surfaceNormalBuilder_ == null) {
          surfaceNormal_ = builderForValue.build();
          onChanged();
        } else {
          surfaceNormalBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .CMsgVector surface_normal = 3;</code>
       */
      public Builder mergeSurfaceNormal(skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector value) {
        if (surfaceNormalBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              surfaceNormal_ != skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.getDefaultInstance()) {
            surfaceNormal_ =
              skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.newBuilder(surfaceNormal_).mergeFrom(value).buildPartial();
          } else {
            surfaceNormal_ = value;
          }
          onChanged();
        } else {
          surfaceNormalBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .CMsgVector surface_normal = 3;</code>
       */
      public Builder clearSurfaceNormal() {
        if (surfaceNormalBuilder_ == null) {
          surfaceNormal_ = skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.getDefaultInstance();
          onChanged();
        } else {
          surfaceNormalBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .CMsgVector surface_normal = 3;</code>
       */
      public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.Builder getSurfaceNormalBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getSurfaceNormalFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .CMsgVector surface_normal = 3;</code>
       */
      public skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVectorOrBuilder getSurfaceNormalOrBuilder() {
        if (surfaceNormalBuilder_ != null) {
          return surfaceNormalBuilder_.getMessageOrBuilder();
        } else {
          return surfaceNormal_;
        }
      }
      /**
       * <code>optional .CMsgVector surface_normal = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVectorOrBuilder> 
          getSurfaceNormalFieldBuilder() {
        if (surfaceNormalBuilder_ == null) {
          surfaceNormalBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVector.Builder, skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.CMsgVectorOrBuilder>(
                  getSurfaceNormal(),
                  getParentForChildren(),
                  isClean());
          surfaceNormal_ = null;
        }
        return surfaceNormalBuilder_;
      }

      private int damage_ ;
      /**
       * <code>optional uint32 damage = 4;</code>
       */
      public boolean hasDamage() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 damage = 4;</code>
       */
      public int getDamage() {
        return damage_;
      }
      /**
       * <code>optional uint32 damage = 4;</code>
       */
      public Builder setDamage(int value) {
        bitField0_ |= 0x00000008;
        damage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 damage = 4;</code>
       */
      public Builder clearDamage() {
        bitField0_ = (bitField0_ & ~0x00000008);
        damage_ = 0;
        onChanged();
        return this;
      }

      private int surfaceType_ ;
      /**
       * <code>optional uint32 surface_type = 5;</code>
       */
      public boolean hasSurfaceType() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 surface_type = 5;</code>
       */
      public int getSurfaceType() {
        return surfaceType_;
      }
      /**
       * <code>optional uint32 surface_type = 5;</code>
       */
      public Builder setSurfaceType(int value) {
        bitField0_ |= 0x00000010;
        surfaceType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 surface_type = 5;</code>
       */
      public Builder clearSurfaceType() {
        bitField0_ = (bitField0_ & ~0x00000010);
        surfaceType_ = 0;
        onChanged();
        return this;
      }

      private int abilityEntindex_ = -1;
      /**
       * <code>optional int32 ability_entindex = 7 [default = -1];</code>
       */
      public boolean hasAbilityEntindex() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 ability_entindex = 7 [default = -1];</code>
       */
      public int getAbilityEntindex() {
        return abilityEntindex_;
      }
      /**
       * <code>optional int32 ability_entindex = 7 [default = -1];</code>
       */
      public Builder setAbilityEntindex(int value) {
        bitField0_ |= 0x00000020;
        abilityEntindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ability_entindex = 7 [default = -1];</code>
       */
      public Builder clearAbilityEntindex() {
        bitField0_ = (bitField0_ & ~0x00000020);
        abilityEntindex_ = -1;
        onChanged();
        return this;
      }

      private int impactedEntindex_ = -1;
      /**
       * <code>optional int32 impacted_entindex = 8 [default = -1];</code>
       */
      public boolean hasImpactedEntindex() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 impacted_entindex = 8 [default = -1];</code>
       */
      public int getImpactedEntindex() {
        return impactedEntindex_;
      }
      /**
       * <code>optional int32 impacted_entindex = 8 [default = -1];</code>
       */
      public Builder setImpactedEntindex(int value) {
        bitField0_ |= 0x00000040;
        impactedEntindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 impacted_entindex = 8 [default = -1];</code>
       */
      public Builder clearImpactedEntindex() {
        bitField0_ = (bitField0_ & ~0x00000040);
        impactedEntindex_ = -1;
        onChanged();
        return this;
      }

      private int impactedHitbox_ ;
      /**
       * <code>optional uint32 impacted_hitbox = 9;</code>
       */
      public boolean hasImpactedHitbox() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 impacted_hitbox = 9;</code>
       */
      public int getImpactedHitbox() {
        return impactedHitbox_;
      }
      /**
       * <code>optional uint32 impacted_hitbox = 9;</code>
       */
      public Builder setImpactedHitbox(int value) {
        bitField0_ |= 0x00000080;
        impactedHitbox_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 impacted_hitbox = 9;</code>
       */
      public Builder clearImpactedHitbox() {
        bitField0_ = (bitField0_ & ~0x00000080);
        impactedHitbox_ = 0;
        onChanged();
        return this;
      }

      private int weaponSubclassId_ ;
      /**
       * <code>optional uint32 weapon_subclass_id = 10;</code>
       */
      public boolean hasWeaponSubclassId() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 weapon_subclass_id = 10;</code>
       */
      public int getWeaponSubclassId() {
        return weaponSubclassId_;
      }
      /**
       * <code>optional uint32 weapon_subclass_id = 10;</code>
       */
      public Builder setWeaponSubclassId(int value) {
        bitField0_ |= 0x00000100;
        weaponSubclassId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 weapon_subclass_id = 10;</code>
       */
      public Builder clearWeaponSubclassId() {
        bitField0_ = (bitField0_ & ~0x00000100);
        weaponSubclassId_ = 0;
        onChanged();
        return this;
      }

      private int shooterEntindex_ = -1;
      /**
       * <code>optional int32 shooter_entindex = 11 [default = -1];</code>
       */
      public boolean hasShooterEntindex() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 shooter_entindex = 11 [default = -1];</code>
       */
      public int getShooterEntindex() {
        return shooterEntindex_;
      }
      /**
       * <code>optional int32 shooter_entindex = 11 [default = -1];</code>
       */
      public Builder setShooterEntindex(int value) {
        bitField0_ |= 0x00000200;
        shooterEntindex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 shooter_entindex = 11 [default = -1];</code>
       */
      public Builder clearShooterEntindex() {
        bitField0_ = (bitField0_ & ~0x00000200);
        shooterEntindex_ = -1;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CMsgBulletImpact)
    }

    static {
      defaultInstance = new CMsgBulletImpact(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CMsgBulletImpact)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgFireBullets_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgFireBullets_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgFireBullets_TracerAssignment_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgFireBullets_TracerAssignment_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CMsgBulletImpact_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CMsgBulletImpact_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\030citadel_gameevents.proto\032\035networkbaset" +
      "ypes-common.proto\"\272\004\n\017CMsgFireBullets\022\033\n" +
      "\006origin\030\001 \001(\0132\013.CMsgVector\022\033\n\006angles\030\002 \001" +
      "(\0132\013.CMsgQAngle\022\014\n\004seed\030\004 \001(\r\022\032\n\016shooter" +
      "_entity\030\005 \001(\005:\002-1\022\023\n\007ability\030\007 \001(\005:\002-1\022\033" +
      "\n\023penetration_percent\030\010 \001(\002\022\016\n\006spread\030\t " +
      "\001(\002\022\034\n\016fired_from_gun\030\n \001(\010:\004true\022\030\n\020bul" +
      "lets_override\030\013 \001(\r\022=\n\022tracer_replacemen" +
      "t\030\014 \001(\0132!.CMsgFireBullets.TracerAssignme" +
      "nt\022<\n\021tracer_additional\030\r \003(\0132!.CMsgFire",
      "Bullets.TracerAssignment\022$\n\017angles_origi" +
      "nal\030\016 \001(\0132\013.CMsgQAngle\022\032\n\022weapon_subclas" +
      "s_id\030\017 \001(\r\022\023\n\013shot_number\030\020 \001(\r\022\031\n\rignor" +
      "e_entity\030\021 \001(\005:\002-1\022\021\n\tmax_range\030\022 \001(\002\032G\n" +
      "\020TracerAssignment\022\032\n\022tracer_resource_id\030" +
      "\001 \001(\004\022\027\n\017bullet_indicies\030\002 \001(\r\"\263\002\n\020CMsgB" +
      "ulletImpact\022 \n\013trace_start\030\001 \001(\0132\013.CMsgV" +
      "ector\022\"\n\rimpact_origin\030\002 \001(\0132\013.CMsgVecto" +
      "r\022#\n\016surface_normal\030\003 \001(\0132\013.CMsgVector\022\016" +
      "\n\006damage\030\004 \001(\r\022\024\n\014surface_type\030\005 \001(\r\022\034\n\020",
      "ability_entindex\030\007 \001(\005:\002-1\022\035\n\021impacted_e" +
      "ntindex\030\010 \001(\005:\002-1\022\027\n\017impacted_hitbox\030\t \001" +
      "(\r\022\032\n\022weapon_subclass_id\030\n \001(\r\022\034\n\020shoote" +
      "r_entindex\030\013 \001(\005:\002-1*\252\002\n\022ECitadelGameEve" +
      "nts\022\023\n\016GE_FireBullets\020\302\003\022\027\n\022GE_PlayerAni" +
      "mEvent\020\303\003\022\035\n\030GE_ParticleSystemManager\020\312\003" +
      "\022\030\n\023GE_ScreenTextPretty\020\313\003\022\035\n\030GE_ServerR" +
      "equestedTracer\020\314\003\022\024\n\017GE_BulletImpact\020\315\003\022" +
      "\035\n\030GE_EnableSatVolumesEvent\020\316\003\022\033\n\026GE_Pla" +
      "ceSatVolumeEvent\020\317\003\022\036\n\031GE_DisableSatVolu",
      "mesEvent\020\320\003\022\034\n\027GE_RemoveSatVolumeEvent\020\321" +
      "\003B<\n&skadistats.clarity.wire.deadlock.pr" +
      "otoB\022DeadlockGameEvents"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.getDescriptor(),
        }, assigner);
    internal_static_CMsgFireBullets_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CMsgFireBullets_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgFireBullets_descriptor,
        new java.lang.String[] { "Origin", "Angles", "Seed", "ShooterEntity", "Ability", "PenetrationPercent", "Spread", "FiredFromGun", "BulletsOverride", "TracerReplacement", "TracerAdditional", "AnglesOriginal", "WeaponSubclassId", "ShotNumber", "IgnoreEntity", "MaxRange", });
    internal_static_CMsgFireBullets_TracerAssignment_descriptor =
      internal_static_CMsgFireBullets_descriptor.getNestedTypes().get(0);
    internal_static_CMsgFireBullets_TracerAssignment_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgFireBullets_TracerAssignment_descriptor,
        new java.lang.String[] { "TracerResourceId", "BulletIndicies", });
    internal_static_CMsgBulletImpact_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_CMsgBulletImpact_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CMsgBulletImpact_descriptor,
        new java.lang.String[] { "TraceStart", "ImpactOrigin", "SurfaceNormal", "Damage", "SurfaceType", "AbilityEntindex", "ImpactedEntindex", "ImpactedHitbox", "WeaponSubclassId", "ShooterEntindex", });
    skadistats.clarity.wire.shared.common.proto.CommonNetworkBaseTypes.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
